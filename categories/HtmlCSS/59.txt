2:I[5250,["250","static/chunks/250-8b90be581650ff9d.js","399","static/chunks/399-caf055eb211349e2.js","862","static/chunks/app/(layoutCase)/categories/%5Bcategoryname%5D/%5Bpostid%5D/page-be6fda65951f1358.js"],""]
3:I[8843,["250","static/chunks/250-8b90be581650ff9d.js","399","static/chunks/399-caf055eb211349e2.js","862","static/chunks/app/(layoutCase)/categories/%5Bcategoryname%5D/%5Bpostid%5D/page-be6fda65951f1358.js"],""]
4:I[777,["250","static/chunks/250-8b90be581650ff9d.js","399","static/chunks/399-caf055eb211349e2.js","862","static/chunks/app/(layoutCase)/categories/%5Bcategoryname%5D/%5Bpostid%5D/page-be6fda65951f1358.js"],""]
5:I[5613,[],""]
8:I[1778,[],""]
c:I[8765,["250","static/chunks/250-8b90be581650ff9d.js","399","static/chunks/399-caf055eb211349e2.js","262","static/chunks/262-683004883e01034d.js","35","static/chunks/35-17fdeaa71107664f.js","464","static/chunks/app/(layoutCase)/layout-ad90720708a07259.js"],""]
6:["categoryname","HtmlCSS","d"]
7:["postid","59","d"]
9:"$La"
d:[]
e:{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"}
f:{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"}
10:{"display":"inline-block"}
11:{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0}
0:["eAYovxfDYhWXk36E6nr0a",[[["",{"children":["(layoutCase)",{"children":["categories",{"children":[["categoryname","HtmlCSS","d"],{"children":[["postid","59","d"],{"children":["__PAGE__?{\"categoryname\":\"HtmlCSS\",\"postid\":\"59\"}",{}]}]}]}],"search":["__DEFAULT__",{}]}]},"$undefined","$undefined",true],["",{"children":["(layoutCase)",{"children":["categories",{"children":[["categoryname","HtmlCSS","d"],{"children":[["postid","59","d"],{"children":["__PAGE__",{},["$L1",[[["$","article",null,{"className":"$undefined","children":["$","header",null,{"children":["$","h1",null,{"className":"postUserInfo_h1__uhAqy","children":"[TECH-QA] HTTP와 HTTPS"}]}]}],["$","div",null,{"className":"postUserInfo_post_meta__ABvuC","children":[["$","span",null,{"children":["Posted"," ",["$","time",null,{"className":"postUserInfo_time__2exyR","children":["7 months"," "]}]]}],["$","span",null,{"className":"postUserInfo_update__f345P","children":["Updated"," ",["$","time",null,{"className":"postUserInfo_time__2exyR","children":"7 months"}]]}]]}],["$","div",null,{"children":["$","span",null,{"className":"postUserInfo_post_meta__ABvuC","children":["By"," ",["$","em",null,{"children":["$","$L2",null,{"href":"https://nam-yeun-hwa.github.io/","className":"postUserInfo_author__fVGYM","children":"베짱이가 되고싶은 개미。"}]}]]}]}]],[[false,["$","h2",null,{"className":"heading_h2__fsXMw","style":{"fontWeight":"NORMAL"},"children":"HTTP와 HTTPS"}],false,false],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"HTTP(HyperText Transfer Protocol)는 클라이언트(예: 웹 브라우저)와 서버 간에 데이터를 주고받기 위한 규약으로, 주로 텍스트, 이미지, 쿼리 등을 전송하는 데 사용됩니다. 그러나 HTTP는 데이터가 평문(plain text)으로 전송되기 때문에, 네트워크 상에서 제3자가 데이터를 가로채면 쉽게 내용을 볼 수 있습니다."}}],[false,false,false,["$","h4",null,{"className":"heading_h4__ZTbA0","style":{"fontWeight":"NORMAL"},"children":["📝 ","평문(plain text) 전송 예시"]}]],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"예) 로그인시 사용자가 HTTP를 사용하는 웹사이트(예: http://example.com)에서 로그인 양식을 작성하고 \"아이디: user123, 비밀번호: pass456\"을 입력한 뒤 제출 버튼을 누릅니다. 이 데이터는 HTTP 요청으로 서버에 전송되며, 네트워크 상에서 다음과 같이 표시됩니다."}}],["$","$L3",null,{"code":"POST /login HTTP/1.1\nHost: example.com\nContent-Type: application/x-www-form-urlencoded\n\nusername=user123&password=pass456","children":"$undefined"}],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"공공 와이파이 같은 네트워크에서 해커가 패킷 스니핑 도구(예: Wireshark)를 사용하면 이 데이터를 그대로 볼 수 있습니다. 즉, \"user123\"과 \"pass456\"이 암호화 없이 노출됩니다."}}],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"예) 사용자가 HTTP 사이트에서 검색 쿼리를 입력하거나 개인정보를 URL 파라미터로 전달합니다. 예를 들어, http://example.com/search?ssn=123-45-6789와 같이 주민등록번호를 포함한 요청을 보냅니다."}}],["$","$L3",null,{"code":"GET /search?ssn=123-45-6789 HTTP/1.1\nHost: example.com","children":"$undefined"}],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"네트워크를 감시하는 제3자는 물론, 서버 로그나 브라우저 기록에도 이 민감한 정보가 그대로 남을 수 있습니다. HTTP는 암호화가 없기 때문에 중간자 공격(Man-in-the-Middle Attack)에 취약합니다. 예를 들어, 공공 와이파이에서 HTTP를 통해 로그인 정보를 전송하면 해커가 이를 가로채 비밀번호나 개인정보를 탈취할 수 있습니다. 반면 HTTPS는 이런 위험을 크게 줄여줍니다."}}],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"HTTPS(HyperText Transfer Protocol Secure)는 HTTP에 <b>SSL/TLS(Secure Sockets Layer/Transport Layer Security) 프로토콜을 추가</b>해 보안성을 강화한 버전입니다. SSL/TLS는 데이터를 암호화하고, <b>서버의 신원을 인증하며, 데이터 무결성을 보장</b>합니다."}}],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"HTTPS를 사용하면 위 데이터가 암호화되어 전송되므로, 가로채더라도 해독할 수 없는 난수처럼 보입니다(예: a8f5g9h2...). HTTP의 평문 전송은 단순히 속도와 편리함을 제공하지만, 보안이 중요한 현대 인터넷 환경에서는 점차 사용이 줄어드는 이유이기도 합니다."}}],[false,false,["$","h3",null,{"className":"heading_h3__UisKt","style":{"fontWeight":"NORMAL"},"children":"공개키/개인키 암호화 방식의 작동 원리"}],false],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"HTTPS에서 사용하는 공개키(Public Key)와 개인키(Private Key)는 <b>비대칭 암호화 방식의 핵심</b>입니다. 공개키는 누구나 접근할 수 있으며 데이터를 암호화하는 데 사용되고, <b>개인키는 서버만이 가지고 있어 암호화된 데이터를 복호화</b>하는 데 사용됩니다. 이 과정에서 클라이언트와 서버는 초기 연결 시 <b>대칭키(예: AES)</b>를 교환하는데, 이를 위해 공개키 암호화가 사용됩니다. 이후 실제 데이터 전송은 더 빠른 대칭키 암호화로 이루어집니다. 이 \"하이브리드 암호화\" 방식은 보안성과 효율성을 동시에 충족합니다."}}],[false,false,["$","h3",null,{"className":"heading_h3__UisKt","style":{"fontWeight":"NORMAL"},"children":"속도 차이에 대한 추가 설명"}],false],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"HTTPS가 HTTP보다 느리다고 언급되었는데, 이는 암호화와 복호화 과정에서 약간의 계산 오버헤드가 발생하기 때문입니다. 하지만 현대 하드웨어와 최적화된 SSL/TLS 프로토콜 덕분에 <b>속도차이는 미미</b>하며, 사용자 경험에 큰 영향을 주지 않는 경우가 많습니다. 또한 <u>HTTP/2나 HTTP/3 같은 최신 프로토콜은 HTTPS와 함께 사용되며 성능을 오히려 향상</u>시키기도 합니다."}}],[false,false,["$","h3",null,{"className":"heading_h3__UisKt","style":{"fontWeight":"NORMAL"},"children":"인증서 발급과 비용의 현실"}],false],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"HTTPS를 사용하려면 CA(Certificate Authority, 인증 기관)에서 <b>SSL/TLS 인증서</b>를 발급받아야 합니다. 과거에는 인증서가 유료였지만, 현재는 <u>Let’s Encrypt 같은 무료 인증서 제공 서비스가 널리 사용되며 비용 부담이 크게 줄었습니다.</u> 다만, 대규모 사이트나 특정 보안 요구사항이 있는 경우(예: EV 인증서)에는 여전히 유료 인증서를 선택하기도 합니다."}}],[false,false,["$","h3",null,{"className":"heading_h3__UisKt","style":{"fontWeight":"NORMAL"},"children":"HTTP와 HTTPS의 사용 사례 구체화"}],false],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"HTTPS는 개인정보(로그인 정보, 신용카드 번호 등)를 다룰 때 필수적이지만, 단순 정보 조회 사이트(예: 공개 위키 페이지, 정적 콘텐츠)에서는 HTTP로도 충분 합니다. "}}],[false,["$","blockquote",null,{"className":"Prompts_prompt_container__In47e Prompts_prompt__caN6p Prompts_prompt_info__Jt15_","children":["$","p",null,{"className":"Prompts_detail__nD6Io","dangerouslySetInnerHTML":{"__html":"그러나 구글 크롬 같은 브라우저는 HTTP 사이트에 \"보안되지 않음(Not Secure)\" 경고를 표시하며, SEO(검색 엔진 최적화)에서도 HTTPS가 유리하다는 점에서 HTTPS로 전환하는 추세가 강합니다."}}]}],false,false],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"2025년 3월 기준으로 대부분의 웹사이트는 HTTPS를 표준으로 채택하고 있습니다. 이는 사용자 신뢰도를 높이고, 데이터 보안을 강화하며, 브라우저 정책에 부합하기 위함입니다. 따라서 새로운 사이트를 구축하거나 기존 사이트를 유지한다면, 비용과 상관없이 HTTPS를 사용하는 것이 권장됩니다."}}]],["$","$L4",null,{"postid":59,"prePostTitle":{"id":60,"title":"[TECH-QA] JWT(JSON Web Token) 인증 방식","date":"2025-04-02 15:44:33","folder":"Javascript","tag":["JavaScript","TECH-QA","JWT","CSRF","XSS"],"preview":"JWT(JSON Web Token)는 웹에서 사용자 인증을 위해 널리 사용되는 토큰 기반 인증 방식입니다. JWT는 세 가지 주요 부분으로 구성되며, 각 부분은 점(.)으로 구분됩니다","post":[{"type":"normal","value":"JWT(JSON Web Token)는 웹에서 사용자 인증을 위해 널리 사용되는 <b>토큰 기반 인증 방식</b>입니다. JWT는 세 가지 주요 부분으로 구성되며, 각 부분은 점(.)으로 구분됩니다 "},{"type":"stringlist","value":"Header(헤더)\n\tPayload(페이로드)\n\tSignature(서명)"},{"type":"normal","value":"이를 <u>Base64 URL 인코딩 방식</u>으로 <u>직렬화</u>하여 <b>헤더 . 페이로드 . 서명 형태의 문자열</b>로 표현됩니다."},{"type":"Heading","headingType":"h3","value":"Header"},{"type":"stringlist","value":"토큰의 유형(보통 \"JWT\")\n\t\t\t\t서명에 사용된 알고리즘을 정의(예: HMAC SHA256, RSA 등)"},{"type":"code","value":"{\n  \"alg\": \"HS256\",\n  \"typ\": \"JWT\"\n}"},{"type":"Heading","headingType":"h3","value":"Payload"},{"type":"normal","value":"사용자 인증에 필요한 정보(클레임, Claims)를 포함합니다. 여기에는 사용자 ID, 권한, 발급 시간(iat), 만료 시간(exp) 등 표준 클레임과 함께 개발자가 추가한 커스텀 클레임이 들어갈 수 있습니다."},{"type":"code","value":"{\n  \"sub\": \"user123\",\n  \"name\": \"John Doe\",\n  \"iat\": 1712016000,\n  \"exp\": 1712023200\n}"},{"type":"Heading","headingType":"h3","value":"Signature"},{"type":"normal","value":"Header와 Payload를 조합한 후 서버의 비밀 키(secret key)를 사용해 서명한 값입니다. 이 서명은 토큰의 무결성을 보장하며, 클라이언트가 토큰을 위조하거나 변조했는지 확인하는 데 사용됩니다. 서명 생성 과정은 다음과 같습니다"},{"type":"code","value":"HMACSHA256(base64UrlEncode(header) + \".\" + base64UrlEncode(payload), secret)"},{"type":"GuideMessage","value":"<b>서버의 비밀 키</b></br>\n\t\t\t\t- 서버의 비밀 키(secret key)는 서버 애플리케이션이 설계되고 배포되는 단계에서 생성되거나 설정됩니다.</br>\n\t\t\t\t- JWT를 생성하고 검증하기 위해 서버 측에서 미리 설정되고 관리되는 고정된 값입니다. </br>\n\t\t\t\t- 이 키는 JWT의 Signature 부분을 생성하고, 나중에 토큰의 유효성을 검증할 때 사용됩니다.\n\t\t\t\t","promptTypeProps":"TIP"},{"type":"Heading","headingType":"h3","value":"장점"},{"type":"stringlist","value":"<b>상태 비저장(Stateless)</b>: 사용자 인증정보를 서버나 세션스토리지에 유지할 필요가 없어 확장성이 뛰어나고, 분산 시스템에서 유리합니다.\n<b>단일 토큰으로 인증</b> : 사용자 인증에 필요한 정보를 토큰 자체에 담고 있어 클라이언트 측에서 들어오는 요청만으로 유효성 검사를 합니다. API 호출 시마다 헤더(Authorization: Bearer <token>)에 포함시켜 간단히 인증을 처리할 수 있습니다.\n<b>호환성</b> : JSON 기반이므로 다양한 플랫폼과 언어에서 쉽게 파싱하고 사용할 수 있습니다."},{"type":"Heading","headingType":"h3","value":"단점 및 고려사항"},{"type":"stringlist","value":"<b>수정 및 폐기 불가</b> : 한 번 발급된 JWT는 만료 전까지 유효하며 중간에 무효화하기 어렵습니다. 이를 보완하려면 Refresh Token을 함께 사용해 짧은 유효기간의 Access Token을 주기적으로 갱신하는 방식이 일반적입니다.\n<b>토큰 탈취 위험</b> : 토큰이 클라이언트에 저장되므로(주로 브라우저의 localStorage나 cookie), XSS(Cross-Site Scripting) 공격에 노출될 가능성이 있습니다. 이를 방지하려면 <b>HTTPS를 사용하고, 토큰을 HttpOnly, Secure 속성이 설정된 쿠키에 저장</b>하는 것이 좋습니다.\n<b>Payload 노출</b> : JWT의 Payload는 암호화되지 않고 Base64로 인코딩만 되어 있어 누구나 디코딩해 내용을 볼 수 있습니다. 따라서 민감한 정보(예: 비밀번호)는 절대 포함시키지 않아야 합니다."},{"type":"Heading","headingType":"h2","value":"토큰 탈취 위험"},{"type":"GuideMessage","value":"<b>HttpOnly</b></br>\n\t\t\t\tHttpOnly는 쿠키에 붙이는 속성 중 하나로,\nJavaScript에서 해당 쿠키에 접근하지 못하게 막는 기능입니다.</br></br>\n<b>Secure</b></br>HTTPS에서만 전송되게 하는 속성 입니다.</br></br>\n<b>SameSite</b></br>CSRF 방지를 위해 쿠키가 어떤 상황에서 자동으로 브라우저에 전송될지를 제한하는 속성입니다.</br>SameSite=Strict 설정일때에는 쿠키가 동일 출처 요청에만 전송되도록 설정합니다.\n\t\t\t\t","promptTypeProps":"INFO"},{"type":"code","value":"Set-Cookie : sessionId=abc123; Secure; HttpOnly; SameSite=Strict\n\t\t\t\t\n//JavaScript로 접근 불가\nconsole.log(document.cookie); // \"\" (빈 문자열 출력)"},{"type":"normal","value":"<b>JWT를 쿠키에 저장할 때</b> : 클라이언트는 이 토큰을 JavaScript로 읽을 수 없고, 브라우저가 자동으로 서버 요청에 포함시켜 인증을 처리합니다."},{"type":"code","value":"Set-Cookie: token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1c2VyMTIzIn0.서명; Path=/; Secure; HttpOnly"},{"type":"normal","value":"HTTPOnly는 쿠키를 클라이언트 측 스크립트로부터 보호하는 간단하면서도 강력한 보안 메커니즘입니다. 특히 인증 관련 데이터를 쿠키에 저장할 때 필수적으로 고려해야 하며, Secure와 SameSite 속성과 함께 사용하면 웹 애플리케이션의 보안을 더욱 강화할 수 있습니다. 다만, 클라이언트 측에서 토큰을 직접 다뤄야 하는 경우에는 대안(예: Authorization 헤더)을 고려해야 합니다."},{"type":"Heading","headingType":"h3","value":"유효기간 설정의 중요성"},{"type":"stringlist","value":"유효기간(exp)을 짧게 설정하는 것은 보안을 강화하는 핵심 방법입니다. 예를 들어, Access Token은 15분~1시간, Refresh Token은 하루 정도로 설정하는 경우가 많습니다. 유효기간이 길면 토큰이 유출되었을 때 악용될 시간이 늘어나므로, 짧은 주기로 갱신하며 보안과 편의성을 균형 있게 유지하는 것이 중요합니다."},{"type":"normal","value":"JWT는 인증 외에도 권한 부여(Authorization)나 정보 교환(예: SSO, Single Sign-On)에도 사용됩니다. 예를 들어, OAuth 2.0 프레임워크에서 ID 토큰으로 활용되기도 합니다.\n\n결론적으로, JWT는 서버 부하를 줄이고 효율적인 인증을 가능하게 하지만, 보안 설계(짧은 유효기간, Refresh Token 도입, HTTPS 필수 등)를 신중히 고려해야 효과적으로 사용할 수 있습니다."},{"type":"Heading","headingType":"h3","value":"로그인 과정에서의 JWT"},{"type":"stringlist","value":"사용자의 자격 증명(예: ID, 비밀번호)을 확인합니다.\n인증이 성공하면, 서버는 미리 설정된 비밀 키를 사용해 JWT를 생성합니다.\n생성된 JWT(헤더.페이로드.서명 형태)는 사용자에게 반환됩니다."},{"type":"normal","value":"여기서 발행되는 것은 JWT 자체이며, 비밀 키는 그 과정에서 사용되는 도구일 뿐입니다."},{"type":"stringlist","value":"비밀 키: my-secret-key (서버에 고정적으로 저장됨)\nJWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIn0.서명값"}]},"nextPostTile":{"id":58,"title":"[TECH-QA] 컴파일(Compile)과 빌드(Build) 그리고 React 웹팩(Webpack)과 바벨(Babel)","date":"2025-04-02 13:58:33","folder":"Javascript","tag":["JavaScript","TECH-QA","React"],"preview":"\"Build\"와 \"컴파일\"은 소프트웨어 개발에서 자주 사용되는 용어인데, 서로 관련이 있지만 약간 다른 개념을 가리킵니다. 한국어로 자연스럽게 설명해볼게요.","post":[{"type":"Heading","headingType":"h2","value":"컴파일 (Compile)"},{"type":"normal","value":"컴파일은 소스 코드를 사람이 작성한 <b>고급 프로그래밍 언어(예: C, Java, Python 등)에서 컴퓨터가 이해할 수 있는 저급 언어(기계어 또는 바이트코드)로 변환</b>하는 과정을 뜻합니다. 이 작업은 컴파일러(Compiler)라는 도구가 수행합니다."},{"type":"stringlist","value":"예를 들어, C 언어로 작성된 코드를 컴파일하면 실행 가능한 파일(예: .exe)이 만들어집니다.\n<u>문법 오류</u>나 <u>타입 오류</u> 같은 문제가 있으면 컴파일러가 이를 잡아내고 <b>에러 메시지를 출력</b>합니다."},{"type":"Heading","headingType":"h2","value":"빌드 (Build)"},{"type":"normal","value":"빌드는 컴파일을 포함한 더 큰 프로세스를 의미합니다. <b>소프트웨어를 실행하거나 배포할 수 있는 상태</b>로 만드는 전체 작업을 빌드라고 부릅니다. 빌드 과정에는 보통 이런 단계들이 포함되며 단순히 코드를 번역하는 것뿐만 아니라, 프로젝트 전체를 준비하는 과정이라고 볼 수 있습니다."},{"type":"stringlist","value":"1.<b>컴파일</b> : 소스 코드를 기계어로 변환.\n2.<b>링킹(Linking)</b> : 여러 소스 파일이나 라이브러리를 하나로 연결.\n3.<b>테스트</b> : 자동화된 테스트 실행 (경우에 따라).\n4.<b>패키징</b> : 실행 파일이나 배포 가능한 파일(예: .jar, .apk) 생성."},{"type":"normal","value":"요약해보자면"},{"type":"stringlist","value":"<b>컴파일</b>: 코드 번역 과정 (부분).\n<b>빌드</b>: 컴파일 + 추가 작업까지 포함한 전체 준비 과정."},{"type":"Heading","headingType":"h2","value":"리액트 빌드(Build)도구"},{"type":"normal","value":"리액트(React)에서 주로 사용되는 빌드 도구들은 프론트엔드 개발에서 코드 번들링, 트랜스파일링, 최적화 등을 담당하며, 개발 경험과 배포 효율성을 높여줍니다. 아래에 리액트 프로젝트에서 많이 사용되는 대표적인 빌드 도구들을 설명 하겠습니다."},{"type":"Heading","headingType":"h3","value":"웹팩(Webpack)"},{"type":"normal","value":"웹팩은 프로젝트의 구조를 분석하여 자바스크립트 모듈을 비롯한 관련 리소스(예: CSS, 이미지, 폰트 등)를 찾아내고, 이를 브라우저에서 실행할 수 있는 하나의 번들(Bundle)로 묶고 패킹하는 <b>모듈 번들러(Module Bundler)</b>입니다.\n\t\t\t\t모듈 번들러란, 개발 과정에서 여러 개로 나뉘어 있는 파일들(모듈들)을 하나로 통합해 주는 도구이자 라이브러리로, 이를 통해 코드의 의존성을 관리하고 효율적으로 배포할 수 있게 도와줍니다.</br></br>\n\n예를 들어, 웹페이지를 구성하기 위해 자바스크립트, 스타일시트, 이미지 등 수많은 파일이 필요할 때, 브라우저가 이 파일들을 서버에 개별적으로 요청하면 로딩 시간이 길어지고 성능이 저하될 수 있습니다. <b>웹팩</b>은 이런 문제를 해결하기 위해 모든 리소스를 하나의 파일(또는 필요에 따라 몇 개의 파일)로 압축하고 최적화합니다. 이렇게 번들링된 결과물은 요청 횟수를 줄이고, 코드 크기를 최소화하며, 브라우저에서 더 빠르게 실행될 수 있도록 만듭니다."},{"type":"stringlist","value":"<b>의존성 관리</b> : 웹팩은 프로젝트 내 모듈 간의 의존성을 파악합니다. 예를 들어, import나 require로 연결된 파일들을 추적해 필요한 코드만 포함시키고, <b>사용되지 않는 코드는 제외(트리 쉐이킹)</b>할 수 있습니다.\n<b>로더(Loader)</b> : 자바스크립트 외에도 CSS(css-loader), 이미지(file-loader), TypeScript(ts-loader) 등 다양한 파일 형식을 처리할 수 있게 해주는 확장 기능이 있습니다.\n<b>플러그인(Plugins)</b> : 번들링 과정에서 추가 작업을 수행할 수 있도록 지원합니다. 예를 들어, HtmlWebpackPlugin은 HTML 파일을 자동 생성하고, UglifyJsPlugin은 코드를 압축합니다.\n<b>개발 편의성</b> : webpack-dev-server를 통해 실시간으로 코드 변경을 반영하는 핫 리로딩(Hot Reloading)을 제공해 개발 속도를 높여줍니다.\n<b>최적화</b> : 프로덕션 환경에서는 <b>코드 분할(Code Splitting)</b>을 통해 필요한 부분만 로드하거나, 캐싱을 활용해 성능을 개선할 수 있습니다."},{"type":"normal","value":"리액트 프로젝트에서 웹팩은 JSX를 일반 자바스크립트로 변환(Babel과 함께 사용)하고, 컴포넌트와 스타일, 기타 자원을 하나로 묶어 배포 가능한 형태로 만드는 데 자주 사용됩니다. 특히 Create React App은 웹팩을 기반으로 설정이 미리 되어 있어, 개발자가 직접 설정하지 않아도 바로 사용할 수 있게 해줍니다.\n\n결론적으로, 웹팩은 단순히 파일을 묶는 것을 넘어, 현대 웹 개발에서 필수적인 코드 최적화와 성능 개선을 담당하는 강력한 도구입니다. 다만, 설정이 복잡할 수 있다는 단점 때문에 최근에는 Vite나 Parcel 같은 대안도 주목받고 있죠."},{"type":"Heading","headingType":"h3","value":"바벨(Babel)"},{"type":"normal","value":"바벨은 모든 실행 환경에서 자바스크립트가 정상적으로 동작할 수 있도록 해주는 <b>자바스크립트 컴파일러(Transpiler)</b>입니다. "},{"type":"stringlist","value":"주로 최신 자바스크립트 문법(예: ES6/ES2015 이상)을 구형 브라우저에서도 실행 가능한 ES5 코드로 변환해 주는 역할을 합니다. \n\t\t\t\t리액트의 JSX나 TypeScript(TS)와 같은 특수 문법을 일반 자바스크립트로 변환하며, \n\t\t\t\t특정 브라우저에서 지원되지 않는 최신 기능을 사용할 수 있게끔 코드를 재구성해 줍니다."},{"type":"Heading","headingType":"h3","value":"트랜스파일링(Transpiling)의 의미"},{"type":"normal","value":"바벨은 엄밀히 말해 \"컴파일러\"라기보다는 \"트랜스파일러\"로 불립니다. 이는 소스 코드를 다른 언어로 바꾸는 대신, 같은 자바스크립트 언어 내에서 최신 문법을 구형 문법으로 변환하는 과정을 뜻하기 때문입니다. 예를 들어, const나 화살표 함수(=>) 같은 ES6 문법을 ES5의 var와 일반 함수로 바꿔줍니다."},{"type":"stringlist","value":"<b>ES6+ 변환</b>: let, const, async/await, 모듈(import/export) 등 최신 자바스크립트 기능을 구형 환경에 맞게 변환.\n<b>JSX 지원</b>: 리액트에서 사용하는 JSX 문법(예: <div>Hello</div>)을 React.createElement() 같은 자바스크립트 코드로 변환.\n<b>TypeScript 지원</b>: .ts나 .tsx 파일을 자바스크립트로 변환하며, 타입 체크는 별도로 TypeScript 컴파일러(tsc)에 맡김.\n<b>폴리필(Polyfill)</b>: 바벨 자체는 문법만 변환하지만, @babel/polyfill이나 core-js와 함께 사용하면 Promise, Array.includes 같은 최신 API도 구형 브라우저에서 동작하게 추가 가능."},{"type":"Heading","headingType":"h3","value":"작동 방식"},{"type":"stringlist","value":"파싱(Parsing): 소스 코드를 읽어 추상 구문 트리(AST)로 변환.\n변환(Transforming): 플러그인과 프리셋(Preset)을 통해 AST를 수정(예: ES6 → ES5).\n생성(Generating): 수정된 AST를 기반으로 최종 자바스크립트 코드를 출력."},{"type":"Heading","headingType":"h3","value":"플러그인과 프리셋"},{"type":"stringlist","value":"바벨은 모듈화된 구조로, 특정 변환 작업을 플러그인(예: @babel/plugin-transform-arrow-functions)으로 추가할 수 있습니다.\n프리셋은 여러 플러그인을 묶은 세트로, @babel/preset-env는 타겟 브라우저에 맞춰 필요한 변환만 적용해 효율성을 높여줍니다. 리액트용으로는 @babel/preset-react가 JSX 처리를 담당합니다."},{"type":"normal","value":"리액트 개발에서 바벨은 필수적입니다. JSX를 브라우저가 이해할 수 있는 코드로 바꿔주고, 최신 자바스크립트 기능을 사용하면서도 다양한 브라우저 호환성을 보장해 줍니다. Create React App이나 Vite 같은 도구는 바벨을 기본으로 내장하고 있어 설정 없이도 바로 사용 가능합니다. </br>결론적으로, 바벨은 자바스크립트 개발에서 \"호환성의 다리\" 역할을 하며, 특히 리액트처럼 최신 기술을 사용하는 환경에서 없어서는 안 될 도구입니다. 웹팩이나 Vite 같은 빌드 도구와 함께 사용되며, 개발자가 최신 기능을 자유롭게 쓰면서도 모든 사용자를 지원할 수 있게 해줍니다."}]},"segment":"posts"}],["$","div",null,{"className":"footer_footer_container__MsSvO","children":["$","footer",null,{"className":"footer_footer__AwYty","children":[["$","p",null,{"className":"footer_copylight___J5l0","children":["© 2024 ","베짱이가 되고싶은 개미。"," Some rights reserved."]}],["$","p",null,{"className":"footer_theme__bwXbg","children":"portfolio v1.0.0-alpha.3"}]]}]}]],null]]},["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","(layoutCase)","children","categories","children","$6","children","$7","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/175d6c648827cdb6.css","precedence":"next","crossOrigin":""}]]}]]},["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","(layoutCase)","children","categories","children","$6","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","(layoutCase)","children","categories","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]],"search":["__DEFAULT__",{},["$9","$Lb",null]]},[null,["$","$Lc",null,{"children":["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","(layoutCase)","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}],"search":["$","$L5",null,{"parallelRouterKey":"search","segmentPath":["children","(layoutCase)","search"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$d","styles":null}],"params":{}}],null]]},[null,["$","html",null,{"lang":"en","className":"","children":[["$","head",null,{"children":[["$","link",null,{"rel":"stylesheet","href":"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css","as":"style"}],["$","link",null,{"rel":"preconnect","href":"https://fonts.googleapis.com"}],["$","link",null,{"rel":"preconnect","href":"https://fonts.gstatic.com"}],["$","link",null,{"rel":"stylesheet","href":"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR&display=swap","as":"style"}]]}],["$","body",null,{"children":["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":"$e","children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":"$f","children":"404"}],["$","div",null,{"style":"$10","children":["$","h2",null,{"style":"$11","children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/0c496b0e03d530ba.css","precedence":"next","crossOrigin":""}]]}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/80c9ce4c138da48c.css","precedence":"next","crossOrigin":""}]],"$L12"]]]]
b:E{"digest":"NEXT_NOT_FOUND"}
12:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"be come 💡"}],["$","meta","3",{"name":"description","content":"App for an Ant Who Wants to Become a Bejjangyi"}]]
1:null
a:null
