2:I[5250,["250","static/chunks/250-8b90be581650ff9d.js","399","static/chunks/399-caf055eb211349e2.js","862","static/chunks/app/(layoutCase)/categories/%5Bcategoryname%5D/%5Bpostid%5D/page-52cda30c3ceb6c8a.js"],""]
3:I[777,["250","static/chunks/250-8b90be581650ff9d.js","399","static/chunks/399-caf055eb211349e2.js","862","static/chunks/app/(layoutCase)/categories/%5Bcategoryname%5D/%5Bpostid%5D/page-52cda30c3ceb6c8a.js"],""]
4:I[5613,[],""]
7:I[1778,[],""]
b:I[8765,["250","static/chunks/250-8b90be581650ff9d.js","399","static/chunks/399-caf055eb211349e2.js","262","static/chunks/262-683004883e01034d.js","35","static/chunks/35-49bea45569ed55c7.js","464","static/chunks/app/(layoutCase)/layout-e9c1ba8c7c5d810f.js"],""]
5:["categoryname","network","d"]
6:["postid","56","d"]
8:"$L9"
c:[]
d:{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"}
e:{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"}
f:{"display":"inline-block"}
10:{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0}
0:["nkfNnfULw2CnwAoJ46PQL",[[["",{"children":["(layoutCase)",{"children":["categories",{"children":[["categoryname","network","d"],{"children":[["postid","56","d"],{"children":["__PAGE__?{\"categoryname\":\"network\",\"postid\":\"56\"}",{}]}]}]}],"search":["__DEFAULT__",{}]}]},"$undefined","$undefined",true],["",{"children":["(layoutCase)",{"children":["categories",{"children":[["categoryname","network","d"],{"children":[["postid","56","d"],{"children":["__PAGE__",{},["$L1",[[["$","article",null,{"className":"$undefined","children":["$","header",null,{"children":["$","h1",null,{"className":"postUserInfo_h1__uhAqy","children":"[TECH-QA] 타입스크립트"}]}]}],["$","div",null,{"className":"postUserInfo_post_meta__ABvuC","children":[["$","span",null,{"children":["Posted"," ",["$","time",null,{"className":"postUserInfo_time__2exyR","children":["4 months"," "]}]]}],["$","span",null,{"className":"postUserInfo_update__f345P","children":["Updated"," ",["$","time",null,{"className":"postUserInfo_time__2exyR","children":"4 months"}]]}]]}],["$","div",null,{"children":["$","span",null,{"className":"postUserInfo_post_meta__ABvuC","children":["By"," ",["$","em",null,{"children":["$","$L2",null,{"href":"https://nam-yeun-hwa.github.io/","className":"postUserInfo_author__fVGYM","children":"베짱이가 되고싶은 개미。"}]}]]}]}]],[["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"타입스크립트는 자바스크립트 기반의 언이이며 자바스크립트의 상위확정전입니다. 정적타입으로 컴파일 단계에서 오류를 포착할수 있는 장점이 있고 강력한 객체지향 프로그래밍을 지원합니다."}}],[false,["$","h2",null,{"className":"heading_h2__fsXMw","style":{"fontWeight":"NORMAL"},"children":"타입스크립트 특징"}],false,false],["$","ul",null,{"className":"liststyle_ul__uFdBS","children":[["$","li","0",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"<b>타입스크립트의 가장 큰 특징은 정적 타입 시스템을 도입했다는 점입니다.</b></br> 이는 변수, 함수, 객체 등의 타입을 코드 작성 단계에서 명시적으로 정의해 줍니다. 이렇게 정의된 타입은 <u>컴파일 단계에서 오류를 포착</u>할 수 있도록 도와주며, <u>런타임에서 발생할 수 있는 잠재적인 버그를 사전에 줄이는 데 큰 장점이 있습니다.</u></br></br>"}}],"$undefined",["$","li","2",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"\t\t\t\t<b>타입스크립트는 강력한 객체지향 프로그래밍을 지원합니다.</b></br> 클래스(Class), 인터페이스(Interface), 제네릭(Generics), 모듈(Module)과 같은 기능을 제공하여 <u>대규모 애플리케이션 개발 시 코드의 구조를 더 체계적으로 관리할 수 있게 합니다.</u></br>예를 들어, 인터페이스를 사용하면 객체의 구조를 명확히 정의할 수 있고, 제네릭을 통해 재사용 가능하면서도 타입 안전성을 보장하는 코드를 작성할 수 있습니다.</br></br>"}}],"$undefined",["$","li","4",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"\t\t\t\t<b>타입스크립트는 ES6(ECMAScript 2015) 및 <b>그 이후의 최신 자바스크립트 기능을 기본적으로 지원</b>합니다.</b></br> 자바스크립트로 작성된 코드를 실행하기 위해 바벨(Babel)과 같은 별도의 트랜스파일러를 사용할 필요 없이, 타입스크립트 자체적으로 최신 ECMAScript 문법을 기존 자바스크립트 엔진에서 실행 가능한 코드로 변환해줍니다. 이는 개발 워크플로우를 단순화하고 생산성을 높이는 데 기여합니다.</br></br>"}}],"$undefined",["$","li","6",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"\t\t\t\t<b>명시적인 정적 타입 지정은 코드의 가독성을 크게 향상시키며, 특히 협업 환경에서 다른 개발자가 코드를 이해하고 유지보수하는 데 도움을 줍니다.</b></br> 예를 들어, 함수의 매개변수나 반환값에 타입을 명시하면 해당 함수가 어떤 데이터를 다루는지 바로 알 수 있어 디버깅 과정도 훨씬 수월해집니다. 게다가 타입스크립트는 타입 추론(Type Inference) 기능을 제공하여, 개발자가 모든 타입을 직접 명시하지 않더라도 컴파일러가 문맥을 통해 타입을 자동으로 추론하게 함으로써 편리함과 안전성을 동시에 제공합니다.</br>"}}]]}],[["$","blockquote",null,{"className":"Prompts_prompt_container__In47e Prompts_prompt__caN6p Prompts_prompt_tip__CZ2Ex","children":["$","p",null,{"className":"Prompts_detail__nD6Io","dangerouslySetInnerHTML":{"__html":"<b>타입추론이란?</b></br>\n\t\t\t\t<b>변수 선언에서의 타입 추론</b>: 변수를 초기화할 때 값을 할당하면, 타입스크립트는 해당 값의 타입을 기반으로 변수의 타입을 추론합니다.</br>\n\t\t\t\t<b>함수 반환 타입 추론</b>:함수의 반환값을 명시적으로 타입으로 선언하지 않아도, 타입스크립트는 함수 내부의 로직을 분석해 반환 타입을 추론합니다.</br>\n\t\t\t\t<b>객체 리터럴에서의 타입 추론</b>:객체를 생성할 때 각 속성의 타입을 명시하지 않아도, 초기화된 값에 따라 타입이 추론됩니다."}}]}],false,false,false],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"추가적으로, 타입스크립트는 방대한 생태계를 자랑합니다. <b>타입 정의 파일(.d.ts)</b>을 통해 기존 자바스크립트 라이브러리(예: React, Lodash 등)와의 통합이 용이하며, 커뮤니티에서 제공하는 DefinitelyTyped 프로젝트를 통해 수많은 라이브러리의 타입 정의를 쉽게 가져와 사용할 수 있습니다. 이로 인해 타입스크립트는 프론트엔드(React, Angular, Vue.js)와 백엔드(Node.js) 개발 모두에서 널리 사용되며, 현대 웹 개발에서 필수적인 도구로 자리 잡았습니다.\n\n결론적으로, 타입스크립트는 자바스크립트의 유연성을 유지하면서도 정적 타입의 안정성과 객체지향 프로그래밍의 강력함을 더한 언어로, 코드 품질을 높이고 대규모 프로젝트를 효율적으로 관리하려는 개발자들에게 이상적인 선택입니다."}}]],["$","$L3",null,{"postid":56,"prePostTitle":{"id":57,"title":"[TECH-QA] 타입 정의 파일(.d.ts) ","date":"2025-03-31 14:43:33","folder":"Javascript","tag":["JavaScript","TECH-QA"],"preview":"타입스크립트는 자바스크립트 기반의 언이이며 자바스크립트의 상위확정전입니다. 정적타입으로 컴파일 단계에서 오류를 포착할수 있는 장점이 있고 강력한 객체지향 프로그래밍을 지원합니다.","post":[{"type":"Heading","headingType":"h3","value":"interface나 type으로 정의하여 쓸수 있는데 d.ts로 사용하는 이유 대하여"},{"type":"normal","value":"타입스크립트에서 interface나 type을 사용해 타입을 정의할 수 있는데도 .d.ts 파일을 사용하는 이유는 사용 목적과 맥락의 차이에 있습니다. .d.ts 파일은 주로 <b>선언 파일(Declaration File)</b>로서 특정한 역할을 수행하며, 일반적인 interface나 type 정의와는 다른 상황에서 유용합니다. 아래에서 .d.ts를 사용하는 이유와 그 장점을 구체적으로 설명하겠습니다.\n\t\t\t\t","promptTypeProps":"TIP"},{"type":"stringlist","value":"자바스크립트와의 통합: 기존 자바스크립트 코드나 외부 라이브러리에 타입을 추가할 때.\n선언과 구현 분리: 타입 정의를 별도로 관리하고 런타임 코드에 영향을 주지 않으려 할 때.\n글로벌 타입 제공: 프로젝트 전체에서 사용할 공통 타입을 전역적으로 선언할 때.\n라이브러리 배포: 타입스크립트 사용자를 위해 타입 정의를 제공할 때."},{"type":"normal","value":"반면, 프로젝트 내부에서만 타입을 정의하고 사용할 때는 interface나 type을 .ts 파일에 작성하는 것이 더 간단하고 적합합니다. .d.ts는 특히 외부와의 인터페이스를 다룰 때 빛을 발하는 도구라고 볼 수 있습니다."},{"type":"Heading","headingType":"h3","value":"간단한 자바스크립트 함수에 타입 정의 추가"},{"type":"normal","value":"기존 자바스크립트 파일에 타입이 없는 상황을 가정하고, .d.ts 파일로 타입을 제공하는 예제입니다."},{"type":"Heading","headingType":"h4","value":"자바스크립트 파일 (math.js)"},{"type":"code","value":"function add(a, b) {\n  return a + b;\n}\n\nmodule.exports = { add };"},{"type":"Heading","headingType":"h4","value":"타입 선언 파일 (math.d.ts)"},{"type":"code","value":"export function add(a: number, b: number): number;"},{"type":"Heading","headingType":"h4","value":"타입스크립트에서 사용 (app.ts)"},{"type":"code","value":"import { add } from \"./math\";\n\nconst result = add(5, 3); // result는 number 타입으로 추론됨\nconsole.log(result); // 8\n\n// add(\"5\", \"3\"); // 오류: 'string' 타입은 'number' 타입에 할당할 수 없음"},{"type":"normal","value":"math.js는 타입 정보가 없는 자바스크립트 파일이지만, math.d.ts에서 add 함수의 매개변수와 반환 타입을 정의해줍니다. 타입스크립트는 이 선언 파일을 참조하여 타입 검사를 수행하며, 잘못된 타입 사용 시 오류를 발생시킵니다. 타입정의는 컴파일 시 타입 체크에 사용되고 자바스크립트로 변환된 런타임 코드에는 타입이 직접 포함되지 않습니다. 실제 실행되는 로직만 남습니다."},{"type":"Heading","headingType":"h3","value":"Lodash와 같은 외부 라이브러리 통합"},{"type":"normal","value":"Lodash는 인기 있는 자바스크립트 유틸리티 라이브러리입니다. 타입스크립트에서 이를 사용하려면 @types/lodash와 같은 타입 정의 패키지를 설치하거나 직접 .d.ts 파일을 작성할 수 있습니다."},{"type":"Heading","headingType":"h4","value":"Lodash 설치"},{"type":"code","value":"npm install lodash\nnpm install --save-dev @types/lodash //타입 정의 설치 (DefinitelyTyped 제공)"},{"type":"Heading","headingType":"h4","value":"타입스크립트에서 사용"},{"type":"code","value":"import _ from \"lodash\";\n\nconst numbers = [1, 2, 3, 4];\nconst sum = _.sum(numbers); // sum은 number 타입으로 추론됨\nconsole.log(sum); // 10\n\n// _.sum(\"not an array\"); // 오류: 'string'은 'ArrayLike<number>' 타입에 할당할 수 없음"},{"type":"normal","value":"@types/lodash 패키지는 Lodash의 모든 함수에 대한 타입 정의를 제공합니다. 예를 들어, _.sum은 숫자 배열을 받아 숫자를 반환하는 함수로 타입이 정의되어 있으며, 타입스크립트는 이를 기반으로 타입 검사를 수행합니다."},{"type":"Heading","headingType":"h3","value":"React 컴포넌트와 통합"},{"type":"normal","value":"React는 자바스크립트로 작성된 라이브러리지만, 타입스크립트에서 사용하려면 타입 정의가 필요합니다.</br> @types/react와 @types/react-dom을 통해 이를 해결할 수 있습니다."},{"type":"Heading","headingType":"h4","value":"React 설치"},{"type":"code","value":"npm install react react-dom\nnpm install --save-dev @types/react @types/react-dom"},{"type":"Heading","headingType":"h4","value":"타입스크립트로 React 컴포넌트 작성"},{"type":"code","value":"import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\ninterface Props {\n  name: string;\n}\n\nconst Greeting: React.FC<Props> = ({ name }) => {\n  return <h1>Hello, {name}!</h1>;\n};\n\nReactDOM.render(<Greeting name=\"Alice\" />, document.getElementById(\"root\"));\n\n// <Greeting name={123} /> // 오류: 'number' 타입은 'string' 타입에 할당할 수 없음"},{"type":"normal","value":"@types/react는 React의 타입 정의를 제공하며, React.FC와 같은 타입을 통해 함수형 컴포넌트의 props 타입을 정의할 수 있습니다. name props가 string으로 정의되었으므로, 숫자를 전달하면 컴파일 오류가 발생합니다."},{"type":"Heading","headingType":"h3","value":"React에 커스텀 타입을 추가하고 싶다면 커스텀 .d.ts로 확장 (선택적)"},{"type":"normal","value":"만약 React에 커스텀 타입을 추가하고 싶다면, 다음과 같이 custom.d.ts 파일을 작성할 수 있습니다. 이 경우 customProp을 React 컴포넌트에서 타입 안전하게 사용할 수 있습니다."},{"type":"Heading","headingType":"h4","value":"custom.d.ts"},{"type":"code","value":"declare module \"react\" {\n  interface CustomComponentProps {\n    customProp: boolean;\n  }\n}"},{"type":"Heading","headingType":"h4","value":"CustomComponent.tsx"},{"type":"code","value":"import React from \"react\";\n\nconst CustomComponent: React.FC<CustomComponentProps> = ({ customProp }) => {\n  return <div>{customProp ? \"Yes\" : \"No\"}</div>;\n};\n\nexport default CustomComponent;"},{"type":"Heading","headingType":"h4","value":"App.tsx"},{"type":"code","value":"import React from \"react\";\nimport CustomComponent from \"./CustomComponent\";\n\nconst App: React.FC = () => {\n  return (\n      <CustomComponent customProp={true} />\n  );\n};\n\nexport default App;"},{"type":"Heading","headingType":"h3","value":"커스텀 .d.ts로 확장"},{"type":"normal","value":"타입스크립트가 인식하지 못하는 타입이나 타입스크립트 내에서 사용할 타입들을 정의 할때 예로 <b>svg 파일</b>을 타입스크립트에서 불러올 수 있게 하도록 custom.d.ts 파일을 생성해준다."},{"type":"Heading","headingType":"h4","value":"custom.d.ts"},{"type":"code","value":"declare module \"*.svg\" {\n  import * as React from \"react\";\n\n  interface CustomSVGProps {\n    title?: string;\n  }\n\n  // SVG 컴포넌트의 전체 props 타입 정의\n  type SVGComponentProps = React.SVGProps<SVGSVGElement> & CustomSVGProps;\n\n  // ReactComponent를 함수형 컴포넌트로 선언\n  export const ReactComponent: React.FunctionComponent<SVGComponentProps>;\n\n  // SVG 파일의 기본 내보내기로 문자열 URL 정의\n  const path: string;\n  export default path;\n}"},{"type":"normal","value":"이 선언을 사용하면 SVG 파일을 다음과 같이 가져와 활용할 수 있습니다"},{"type":"code","value":"import { ReactComponent as Icon } from \"./icon.svg\";\nimport iconPath from \"./icon.svg\";\n\nconst App: React.FC = () => (\n  <div>\n    <Icon width=\"50\" height=\"50\" fill=\"blue\" title=\"My Icon\" />\n    <img src={iconPath} alt=\"Icon\" width=\"50\" height=\"50\" />\n  </div>\n);"},{"type":"stringlist","value":"Icon은 SVGComponentProps 타입을 기반으로 타입 검사가 이루어지며, title은 옵셔널로 사용 가능합니다.\niconPath는 string 타입으로 이미지 소스로 활용됩니다."},{"type":"Heading","headingType":"h3","value":"구현 코드와 타입 정의의 분리"},{"type":"normal","value":"타입 정의와 실제 구현 코드를 분리하고 싶을 때, .d.ts 파일은 선언만 포함하고 이는 런타임에 영향을 주지 않습니다. 반면 .ts 파일에 interface나 type과 함께 구현 코드를 섞으면 컴파일 시 자바스크립트 코드로 변환되어 런타임에 포함됩니다."},{"type":"Heading","headingType":"h4","value":".ts 파일에 모두 작성(math.ts)"},{"type":"code","value":"interface MathOperation {\n  (a: number, b: number): number;\n}\nconst add: MathOperation = (a, b) => a + b;\nexport { add };"},{"type":"normal","value":"math.ts 컴파일 결과: interface는 사라지고 구현 코드만 남음."},{"type":"Heading","headingType":"h4","value":"math.d.ts"},{"type":"code","value":"export interface MathOperation {\n  (a: number, b: number): number;\n}\nexport const add: MathOperation;"},{"type":"Heading","headingType":"h4","value":"math.js"},{"type":"code","value":"const add = (a, b) => a + b;\nmodule.exports = { add };\nexport const add: MathOperation;"},{"type":"normal","value":"선언과 구현을 분리하면 실제 실행되는 로직(구현)은 별도의 소스 파일에 두고 <b>타입 정의는 주로 컴파일 타임에 사용되어 코드의 정합성을 확인하거나 개발자에게 힌트를 주는 역할</b>을 하지만, <u>런타임에 실행되는 기계어 코드나 프로그램의 동작에는 직접적인 영향을 미치지 않습니다.</u>  타입 정의만 공유하거나 재사용하기 쉬워집니다. 특히 외부 라이브러리와 통합할 때 유용합니다."},{"type":"Heading","headingType":"h3","value":"interface/type과 .d.ts의 차이점 요약"},{"type":"table","value":"","tables":{"header":[{"accessorKey":"Feature","header":"특징"},{"accessorKey":"Scope","header":"사용범위"},{"accessorKey":"ImplementationInclusion","header":"구현 포함 여부"},{"accessorKey":"ModuleIntegration","header":"모듈 통합"},{"accessorKey":"GlobalDeclaration","header":"전역 선언"},{"accessorKey":"Purpose","header":"목적"}],"contents":[{"Feature":"interface / type","Scope":"타입스크립트 코드 내부에서만 유효","ImplementationInclusion":".ts 파일 내에서 구현과 함께 사용 가능","sessionStorage":"외부 모듈의 타입 수정 불가","GlobalDeclaration":"import/export 필요","Purpose":"프로젝트 내 타입 정의"},{"Feature":".d.ts 파일","Scope":"자바스크립트와 타입스크립트 연결 가능","ImplementationInclusion":"선언만 포함, 구현은 별도 파일에서","sessionStorage":"declare module로 외부 모듈 타입 정의 가능","GlobalDeclaration":"전역 타입 정의 가능 (declare 사용)","Purpose":"외부 코드와의 인터페이스 역할"}]}}]},"nextPostTile":{"id":55,"title":"[TECH-QA] 브라우저 저장소","date":"2025-03-27 14:59:33","folder":"Javascript","tag":["JavaScript","TECH-QA"],"preview":"쿠키는 웹 브라우저에서 클라이언트 측 데이터를 저장하는 전통적인 방법으로, 주로 사용자 인증(예: 로그인 세션 유지)이나 간단한 설정 저장에 사용됩니다. 하지만 몇 가지 단점이 있습니다","post":[{"type":"Heading","headingType":"h2","value":"쿠키(Cookie)의 특징과 단점"},{"type":"normal","value":"쿠키는 웹 브라우저에서 <u>클라이언트 측 데이터를 저장</u>하는 전통적인 방법으로, 주로 사용자 인증(예: 로그인 세션 유지)이나 간단한 설정 저장에 사용됩니다. 하지만 몇 가지 단점이 있습니다"},{"type":"stringlist","value":"용량 제한: 쿠키는 저장 용량이 약 4KB로 매우 작아 대량의 데이터를 저장하기 어렵습니다.\n보안 취약성: 쿠키는 기본적으로 암호화되지 않으므로, 데이터가 평문으로 전송되거나 저장될 경우 제3자가 쉽게 접근할 수 있어 정보 도난(예: XSS 공격 등)의 위험이 있습니다.\n만료 기간 관리: 쿠키는 key-value 형태로 데이터를 저장하며, 개발자가 직접 만료 기간을 설정해야 합니다. 만료 기간이 지나면 자동으로 삭제되지만, 이 과정이 복잡하거나 관리가 소홀해질 수 있습니다.\n네트워크 부하: 쿠키는 HTTP 요청마다 서버로 자동 전송되므로, 불필요한 데이터 전송이 발생해 성능 저하를 유발할 수 있습니다."},{"type":"GuideMessage","value":"<b>쿠키를 사용한 사용자 인증, 특히 로그인 세션 유지에 대해 설명하자면, 이는 웹 애플리케이션에서 사용자가 로그인 상태를 유지할 수 있도록 하는 일반적인 방법 중 하나입니다.</b></br></br>\n\t\t\t\t- <b>로그인 요청</b>: 사용자가 웹사이트에 아이디와 비밀번호를 입력해 로그인하면, 서버는 해당 자격 증명을 확인합니다. 인증이 성공하면 서버는 사용자에게 <u>고유한 세션 ID를 생성</u>합니다.</br></br>\n- <b>쿠키 생성 및 저장</b>: <u>서버는 이 세션 ID를 포함한 쿠키를 생성해 사용자의 브라우저로 보냅니다.</u> 브라우저는 이 쿠키를 로컬에 저장합니다. 이 쿠키는 보통 \"세션 쿠키\"로 설정되며, 브라우저가 닫히면 자동으로 삭제되거나(임시 세션), 만료 날짜가 설정된 경우 그때까지 유지됩니다(영속 세션).</br></br>\n- <b>세션 유지</b>: 이후 사용자가 웹사이트의 다른 페이지를 방문할 때마다,<u>브라우저는 저장된 쿠키를 요청 헤더에 포함시켜 서버로 보냅니다.</u> 서버는 이 쿠키의 세션 ID를 확인해 사용자가 이미 인증된 사용자인지 판단하고, 별도의 로그인 없이 접근을 허용합니다.</br></br>"},{"type":"GuideMessage","value":"\n<b>쿠키 보안 고려사항</b></br></br>\n- <b>HttpOnly</b>: 쿠키에 HttpOnly 속성을 설정하면 자바스크립트를 통한 접근을 차단해 <b>XSS(크로스 사이트 스크립팅) 공격을 방지</b>할 수 있습니다.</br></br>\n- <b>Secure</b>: Secure 속성을 추가하면 HTTPS 연결에서만 쿠키가 전송되어 데이터 도청을 방지합니다.</br></br>\n- <b>SameSite</b>: 이 속성으로 쿠키가 동일 출처 요청에만 전송되도록 설정해 <b>CSRF(크로스 사이트 요청 위조) 공격</b>을 줄일 수 있습니다.\n<b>로그아웃</b>: 사용자가 로그아웃하면 서버는 해당 세션 ID를 무효화하고, 브라우저의 쿠키를 삭제하거나 만료시켜 세션을 종료합니다.","promptTypeProps":"TIP"},{"type":"Heading","headingType":"h2","value":"웹 스토리지(Web Storage)의 등장"},{"type":"Heading","headingType":"h3","value":"로컬 스토리지 (Local Storage)"},{"type":"stringlist","value":"특징: 데이터를 클라이언트(브라우저)에 영구적으로 저장합니다. 사용자가 데이터를 삭제하거나 브라우저 캐시를 지우지 않는 한 유지됩니다.\n용도: 자동 로그인 토큰이나 사용자 선호 설정(예: 다크 모드)을 저장하는 데 유용.\n용량: 약 5~10MB로, 쿠키보다 훨씬 큰 데이터를 저장할 수 있습니다.\n장점: 만료 기간을 별도로 설정할 필요가 없어 관리가 간편합니다."},{"type":"Heading","headingType":"h3","value":"세션 스토리지 (Session Storage)"},{"type":"stringlist","value":"특징: 브라우저 탭이 닫히면 데이터가 자동으로 삭제됩니다. 즉, 세션 단위로만 데이터를 유지합니다.\n용도: 임시 데이터 저장(예: 폼 입력 데이터, 비로그인 장바구니)이나 보안이 중요한 일회성 정보에 적합합니다.\n용량: 로컬 스토리지와 동일하게 5~10MB를 지원합니다.\n장점: 세션이 종료되면 자동으로 데이터가 사라지므로, 민감한 정보의 노출 위험이 줄어듭니다."},{"type":"table","value":"","tables":{"header":[{"accessorKey":"Category","header":"항목"},{"accessorKey":"Cookie","header":"쿠키"},{"accessorKey":"LocalStorage","header":"로컬 스토리지"},{"accessorKey":"SessionStorage","header":"세션 스토리지"}],"contents":[{"category":"저장 기간","cookie":"만료 기간 설정 필요","localStorage":"영구 저장 (수동 삭제 전까지)","sessionStorage":"세션 종료 시 삭제"},{"category":"용량","cookie":"약 4KB","localStorage":"약 5~10MB","sessionStorage":"약 5~10MB"},{"category":"보안","cookie":"암호화 없음, 도난 위험","localStorage":"서버로 자동 전송 안 됨","sessionStorage":"서버로 자동 전송 안 됨"},{"category":"사용 예","cookie":"세션 관리, 간단한 설정","localStorage":"자동 로그인, 사용자 설정","sessionStorage":"임시 데이터, 폼 입력 유지"}]}},{"type":"normal","value":"쿠키는 용량이 작고 보안에 취약하며, 만료 기간 설정과 네트워크 부하라는 단점을 안고 있습니다. 이를 보완하기 위해 로컬 스토리지는 영구 저장을, 세션 스토리지는 임시 저장을 제공하며, 더 큰 용량과 간편한 관리를 지원합니다. 웹 개발자는 데이터의 성격과 보안 요구사항에 따라 쿠키와 웹 스토리지를 적절히 선택해 사용할 수 있습니다.\n"}]},"segment":"posts"}],["$","div",null,{"className":"footer_footer_container__MsSvO","children":["$","footer",null,{"className":"footer_footer__AwYty","children":[["$","p",null,{"className":"footer_copylight___J5l0","children":["© 2024 ","베짱이가 되고싶은 개미。"," Some rights reserved."]}],["$","p",null,{"className":"footer_theme__bwXbg","children":"portfolio v1.0.0-alpha.3"}]]}]}]],null]]},["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","(layoutCase)","children","categories","children","$5","children","$6","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/175d6c648827cdb6.css","precedence":"next","crossOrigin":""}]]}]]},["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","(layoutCase)","children","categories","children","$5","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","(layoutCase)","children","categories","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]],"search":["__DEFAULT__",{},["$8","$La",null]]},[null,["$","$Lb",null,{"children":["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","(layoutCase)","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}],"search":["$","$L4",null,{"parallelRouterKey":"search","segmentPath":["children","(layoutCase)","search"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$c","styles":null}],"params":{}}],null]]},[null,["$","html",null,{"lang":"en","className":"","children":[["$","head",null,{"children":[["$","link",null,{"rel":"stylesheet","href":"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css","as":"style"}],["$","link",null,{"rel":"preconnect","href":"https://fonts.googleapis.com"}],["$","link",null,{"rel":"preconnect","href":"https://fonts.gstatic.com"}],["$","link",null,{"rel":"stylesheet","href":"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR&display=swap","as":"style"}]]}],["$","body",null,{"children":["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":"$d","children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":"$e","children":"404"}],["$","div",null,{"style":"$f","children":["$","h2",null,{"style":"$10","children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/0c496b0e03d530ba.css","precedence":"next","crossOrigin":""}]]}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/5048045ff4a95083.css","precedence":"next","crossOrigin":""}]],"$L11"]]]]
a:E{"digest":"NEXT_NOT_FOUND"}
11:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"be come 💡"}],["$","meta","3",{"name":"description","content":"App for an Ant Who Wants to Become a Bejjangyi"}]]
1:null
9:null
