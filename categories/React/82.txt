2:I[5250,["250","static/chunks/250-8b90be581650ff9d.js","399","static/chunks/399-caf055eb211349e2.js","862","static/chunks/app/(layoutCase)/categories/%5Bcategoryname%5D/%5Bpostid%5D/page-be6fda65951f1358.js"],""]
3:I[8843,["250","static/chunks/250-8b90be581650ff9d.js","399","static/chunks/399-caf055eb211349e2.js","862","static/chunks/app/(layoutCase)/categories/%5Bcategoryname%5D/%5Bpostid%5D/page-be6fda65951f1358.js"],""]
5:I[777,["250","static/chunks/250-8b90be581650ff9d.js","399","static/chunks/399-caf055eb211349e2.js","862","static/chunks/app/(layoutCase)/categories/%5Bcategoryname%5D/%5Bpostid%5D/page-be6fda65951f1358.js"],""]
6:I[5613,[],""]
9:I[1778,[],""]
d:I[8765,["250","static/chunks/250-8b90be581650ff9d.js","399","static/chunks/399-caf055eb211349e2.js","262","static/chunks/262-683004883e01034d.js","35","static/chunks/35-17fdeaa71107664f.js","464","static/chunks/app/(layoutCase)/layout-ad90720708a07259.js"],""]
4:T535,import { cva } from 'class-variance-authority';

// CVA로 버튼 스타일 변형 정의
const buttonVariants = cva(
  'inline-flex items-center justify-center rounded-md font-medium', // 기본 스타일
  {
   variants: {
       intent: {
       primary: 'bg-blue-500 text-white hover:bg-blue-600',
       secondary: 'bg-gray-500 text-white hover:bg-gray-600',
       danger: 'bg-red-500 text-white hover:bg-red-600',
   },
   size: {
       small: 'px-2 py-1 text-sm',
       medium: 'px-4 py-2 text-base',
       large: 'px-6 py-3 text-lg',
      },
   },
   defaultVariants: {
   	intent: 'primary',
   	size: 'medium',
      },
   }
);

// React 컴포넌트에서 사용
interface ButtonProps {
  intent?: 'primary' | 'secondary' | 'danger';
  size?: 'small' | 'medium' | 'large';
  children: React.ReactNode;
}

const Button = ({ intent, size, children }: ButtonProps) => {
  return (
    <button className={buttonVariants({ intent, size })}>
      {children}
    </button>
  );
};

// 사용 예시
const App = () => (
 <div>
   <Button intent="primary" size="small">Primary Small</Button>
   <Button intent="secondary" size="medium">Secondary Medium</Button>
   <Button intent="danger" size="large">Danger Large</Button>
   <Button>Default Button</Button> {/* 기본값: primary, medium */}
 </div>
);

export default App;7:["categoryname","React","d"]
8:["postid","82","d"]
a:"$Lb"
e:[]
f:{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"}
10:{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"}
11:{"display":"inline-block"}
12:{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0}
0:["eAYovxfDYhWXk36E6nr0a",[[["",{"children":["(layoutCase)",{"children":["categories",{"children":[["categoryname","React","d"],{"children":[["postid","82","d"],{"children":["__PAGE__?{\"categoryname\":\"React\",\"postid\":\"82\"}",{}]}]}]}],"search":["__DEFAULT__",{}]}]},"$undefined","$undefined",true],["",{"children":["(layoutCase)",{"children":["categories",{"children":[["categoryname","React","d"],{"children":[["postid","82","d"],{"children":["__PAGE__",{},["$L1",[[["$","article",null,{"className":"$undefined","children":["$","header",null,{"children":["$","h1",null,{"className":"postUserInfo_h1__uhAqy","children":"[TECH-QA] class-variance-authority 라이브러리"}]}]}],["$","div",null,{"className":"postUserInfo_post_meta__ABvuC","children":[["$","span",null,{"children":["Posted"," ",["$","time",null,{"className":"postUserInfo_time__2exyR","children":["3 months"," "]}]]}],["$","span",null,{"className":"postUserInfo_update__f345P","children":["Updated"," ",["$","time",null,{"className":"postUserInfo_time__2exyR","children":"3 months"}]]}]]}],["$","div",null,{"children":["$","span",null,{"className":"postUserInfo_post_meta__ABvuC","children":["By"," ",["$","em",null,{"children":["$","$L2",null,{"href":"https://nam-yeun-hwa.github.io/","className":"postUserInfo_author__fVGYM","children":"베짱이가 되고싶은 개미。"}]}]]}]}]],[["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"CVA는 JavaScript/TypeScript 기반의 오픈소스 라이브러리로, CSS 클래스 이름을 조건에 따라 체계적으로 관리하고 컴포넌트의 다양한 스타일 변형(variants)을 쉽게 정의할 수 있도록 도와줍니다. 특히 Tailwind CSS와 같은 유틸리티 퍼스트 CSS 프레임워크와 함께 사용될 때 유용하며, React, Vue, Angular 등 다양한 프레임워크와 호환됩니다."}}],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"CVA는 컴포넌트의 스타일 변형(예: 버튼의 크기, 색상, 상태 등)을 타입 안전하게 정의하고, 코드의 가독성과 유지보수성을 높이는 데 초점을 맞춘 도구입니다. 예를 들어, 버튼 컴포넌트의 \"primary\", \"secondary\" 변형이나 \"small\", \"large\" 크기를 간단히 정의하고, 이를 기반으로 클래스 이름을 동적으로 생성할 수 있습니다.cva.style\n\n간단히 말해, CVA는 UI 컴포넌트의 스타일링을 더 구조적이고 선언적으로 관리할 수 있게 해주는 유틸리티 라이브러리입니다."}}],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"TypeScript와 Tailwind CSS를 사용해 버튼 컴포넌트의 다양한 변형을 정의하는 코드 예제입니다."}}],["$","$L3",null,{"code":"$4","children":"$undefined"}],["$","ul",null,{"className":"liststyle_ul__uFdBS","children":[["$","li","0",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"<b>cva 함수</b>: 기본 스타일과 변형(variants)을 정의합니다. 위 예시에서는 intent(버튼 색상)와 size(버튼 크기)를 변형으로 설정했습니다."}}],["$","li","1",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"<b>변형(variants)</b>: intent와 size에 따라 Tailwind CSS 클래스를 동적으로 적용합니다."}}],["$","li","2",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"<b>기본값(defaultVariants)</b>: 변형이 지정되지 않을 때 기본적으로 적용될 스타일을 설정합니다."}}],["$","li","3",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"<b>컴포넌트 사용</b>: Button 컴포넌트는 buttonVariants를 호출해 동적으로 클래스 이름을 생성하고, 이를 <button> 요소에 적용합니다."}}]]}],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"CVA를 사용하면 스타일 변형을 체계적으로 관리할 수 있고, 타입 안전성(TypeScript)을 보장하여 개발자 경험을 향상시킵니다."}}]],["$","$L5",null,{"postid":82,"prePostTitle":{"id":83,"title":"[TECH-QA] ES6+에서 _.omit, _.pick, 객체 디스트럭처링(...rest)","date":"2025-07-25 09:14:33","folder":"Javascript","tag":["TECH-QA"],"preview":"odash에서 _.omit과 _.pick은 객체에서 특정 속성을 필터링할 때 사용하는 유틸리티 함수로, 비슷한 목적을 가지지만 동작 방식이 반대입니다. 아래에 차이점을 간단히 설명합니다.","post":[{"type":"Heading","headingType":"h2","value":"_.omit과 유사한 효과"},{"type":"normal","value":" lodash에서 <span class=\"point\">_.omit<span>과 </span>_.pick</span>은 객체에서 특정 속성을 필터링할 때 사용하는 유틸리티 함수로, 비슷한 목적을 가지지만 동작 방식이 반대입니다. 아래에 차이점을 간단히 설명합니다. ES6+에서 객체 디스트럭처링(...rest)을 사용해 _.omit과 유사한 효과를 얻을 수 있습니다. 아래는 ...rest를 사용한 예제입니다."},{"type":"code","value":"const object = { a: 1, b: 2, c: 3 };\n\n// a와 c를 제외한 나머지 속성을 추출\nconst { a, c, ...rest } = object;\n\nconsole.log(rest); // { b: 2 }"},{"type":"stringlist","value":" ...rest: 객체 디스트럭처링에서 명시적으로 선택한 속성(a, c)을 제외한 나머지 속성을 rest 객체에 수집합니다.\n 동작: _.omit(object, ['a', 'c'])와 동일한 결과를 반환.\n 장점: Lodash 없이 네이티브 JavaScript로 간단히 구현 가능.\n 제한: 제외할 속성을 명시적으로 변수로 선언해야 하므로, 동적으로 속성 목록을 처리하려면 추가 로직이 필요할 수 있습니다."},{"type":"Heading","headingType":"h4","value":"동적 속성 제외 예제"},{"type":"code","value":"const object = { a: 1, b: 2, c: 3 };\nconst keysToOmit = ['a', 'c'];\n\nconst result = Object.fromEntries(\n  Object.entries(object).filter(([key]) => !keysToOmit.includes(key))\n);\n\nconsole.log(result); // { b: 2 }"},{"type":"Heading","headingType":"h4","value":"Object.entries(object)"},{"type":"stringlist","value":"Object.entries는 객체의 키-값 쌍을 배열로 변환합니다.\n입력 객체: object = { a: 1, b: 2, c: 3 }\n출력: [['a', 1], ['b', 2], ['c', 3]]\n각 요소는 [key, value] 형태의 배열입니다."},{"type":"Heading","headingType":"h4","value":".filter(([key]) => !keysToOmit.includes(key))"},{"type":"stringlist","value":"filter 메서드는 배열의 요소를 조건에 따라 걸러냅니다.\n[key]는 배열 디스트럭처링을 사용해 각 키-값 쌍에서 key만 추출합니다. (값은 무시됨)\nkeysToOmit은 제외하려는 키가 담긴 배열, 예: ['a', 'c'].\n!keysToOmit.includes(key)는 key가 keysToOmit 배열에 없으면 true를 반환.\n예: key = 'a' → keysToOmit.includes('a')는 true이므로 !true는 false → 제외. key = 'b' → keysToOmit.includes('b')는 false이므로 !false는 true → 유지.\n필터링 결과: [['b', 2]] (a와 c는 제외됨)."},{"type":"Heading","headingType":"h4","value":"Object.fromEntries(...)"},{"type":"stringlist","value":"Object.fromEntries는 키-값 쌍 배열을 다시 객체로 변환합니다.\n입력: [['b', 2]]\n출력: { b: 2 }"},{"type":"Heading","headingType":"h4","value":"결과"},{"type":"stringlist","value":"Object.entries로 객체를 키-값 배열로 변환.\nfilter로 제외할 키(keysToOmit)를 제외한 항목만 유지.\nObject.fromEntries로 필터링된 배열을 다시 객체로 변환.\n결과적으로, 지정된 키를 제외한 새로운 객체를 생성.\n입력: object = { a: 1, b: 2, c: 3 }, keysToOmit = ['a', 'c']\n출력: result = { b: 2 }\n이는 _.omit(object, ['a', 'c'])와 동일한 결과를 반환."},{"type":"Heading","headingType":"h2","value":"_.pick과 유사한 효과"},{"type":"normal","value":"_.pick을 대체하려면, 특정 속성만 선택해 새로운 객체를 만드는 방식"},{"type":"code","value":"const object = { a: 1, b: 2, c: 3 };\nconst keysToPick = ['a', 'c'];\n\nconst result = Object.fromEntries(\n  Object.entries(object).filter(([key]) => keysToPick.includes(key))\n);\n\nconsole.log(result); // { a: 1, c: 3 }"},{"type":"stringlist","value":"\n- ...rest는 _.omit과 유사한 기능을 네이티브로 제공하지만, 동적 속성 처리는 추가 코드 필요.\n- Object.entries와 Object.fromEntries를 사용하면 _.omit과 _.pick 모두 유연하게 대체 가능."}]},"nextPostTile":{"id":81,"title":"[TECH-QA] React에서 SVG 아이콘 다루기: 실용적인 예제와 팁","date":"2025-07-24 12:57:33","folder":"Javascript","tag":["TECH-QA","SVG"],"preview":"React에서 ref를 부모 컴포넌트에서 생성하여 자식 컴포넌트(예: _Icon)에 전달하고, 이를 통해 SVG와 같은 DOM 요소에 직접 접근하는 이유와 용도를 간단히 설명하겠습니다.","post":[{"type":"Heading","headingType":"h2","value":"ref를 사용하는 이유"},{"type":"normal","value":"React는 선언적 UI 라이브러리로, 일반적으로 상태와 props를 통해 UI를 관리합니다. 하지만 특정 상황에서는 DOM 요소에 직접 접근해야 할 때가 있습니다. ref는 이를 가능하게 하며, 부모 컴포넌트에서 ref를 생성해 자식 컴포넌트에 전달하면 자식의 DOM 요소(여기서는 <svg>)를 부모에서 조작하거나 정보를 얻을 수 있습니다."},{"type":"Heading","headingType":"h2","value":"ref를 통해 할 수 있는 작업"},{"type":"normal","value":"_Icon 컴포넌트의 SVG 요소에 ref를 전달하여 부모 컴포넌트에서 수행할 수 있는 작업의 예시입니다."},{"type":"Heading","headingType":"h4","value":"DOM 속성/상태 조회"},{"type":"stringlist","value":"SVG 요소의 크기, 위치, 속성 등을 확인.\n예: ref.current.getBoundingClientRect()를 호출해 SVG의 화면상 위치나 크기를 확인.\n용도: 애니메이션이나 툴팁 위치 계산."},{"type":"Heading","headingType":"h4","value":"직접 DOM 조작"},{"type":"stringlist","value":"React 상태 외부에서 SVG의 속성을 동적으로 변경.\n예: ref.current.setAttribute('fill', 'red')로 색상을 변경.\n용도: React로 처리하기 복잡한 동적 스타일링."},{"type":"Heading","headingType":"h4","value":"애니메이션 제어"},{"type":"stringlist","value":"SVG 요소에 애니메이션을 적용하거나 제어.\n예: ref.current.animate()를 사용해 CSS/SVG 애니메이션을 트리거.\n용도: 아이콘에 클릭 시 깜빡이는 효과 추가."},{"type":"Heading","headingType":"h4","value":"포커스 관리"},{"type":"stringlist","value":"SVG 요소에 포커스를 설정하거나 확인.\n예: ref.current.focus()로 접근성 개선.\n용도: 키보드 내비게이션 지원."},{"type":"Heading","headingType":"h4","value":"외부 라이브러리와 통합"},{"type":"stringlist","value":"D3.js, GSAP 같은 라이브러리가 DOM 요소를 직접 조작해야 할 때.\n예: ref.current를 라이브러리에 전달해 SVG 경로 애니메이션 적용.\n용도: 복잡한 시각화 작업."},{"type":"Heading","headingType":"h4","value":"이벤트 처리"},{"type":"stringlist","value":"특정 DOM 이벤트(예: 마우스 오버, 드래그)를 직접 감지.\n예: ref.current.addEventListener('mouseover', handleMouseOver).\n용도: React의 합성 이벤트로 처리하기 어려운 경우."},{"type":"Heading","headingType":"h4","value":"예제"},{"type":"code","value":"import React, { useRef, useEffect } from 'react';\nimport { _ICon } from './IcArrowLeft';\n\nconst ParentComponent = () => {\n  const svgRef = useRef(null);\n\n  useEffect(() => {\n    if (svgRef.current) {\n      // SVG 요소에 접근하여 작업 수행\n      console.log('SVG 크기:', svgRef.current.getBoundingClientRect());\n      \n      // 예: 색상 변경\n      svgRef.current.setAttribute('fill', 'purple');\n      \n      // 예: 클릭 이벤트 추가\n      svgRef.current.addEventListener('click', () => {\n        alert('SVG 클릭됨!');\n      });\n    }\n  }, []);\n\n  return (\n    <div>\n      <_ICon\n        ref={svgRef}\n        size={32}\n        color=\"blue\"\n        filled={true}\n        aria-label=\"왼쪽 화살표\"\n      />\n    </div>\n  );\n};\n\nexport default ParentComponent;"},{"type":"stringlist","value":"<b>React 철학 준수</b>: React는 DOM 직접 조작을 최소화하도록 권장합니다. 가능하면 상태/props로 UI를 관리하세요.\n<b>적절한 사용</b>: ref는 포커스 관리, 애니메이션, 외부 라이브러리 통합 등 필수적인 경우에만 사용하세요.\n<b>접근성 고려</b>: SVG에 aria-label 같은 속성을 추가해 접근성을 유지하세요.\n<b>ref 전달 방식</b>: _ICon React.forwardRef로 래핑되어 있어야 ref가 SVG 요소에 올바르게 연결됩니다."}]},"segment":"posts"}],["$","div",null,{"className":"footer_footer_container__MsSvO","children":["$","footer",null,{"className":"footer_footer__AwYty","children":[["$","p",null,{"className":"footer_copylight___J5l0","children":["© 2024 ","베짱이가 되고싶은 개미。"," Some rights reserved."]}],["$","p",null,{"className":"footer_theme__bwXbg","children":"portfolio v1.0.0-alpha.3"}]]}]}]],null]]},["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","(layoutCase)","children","categories","children","$7","children","$8","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/175d6c648827cdb6.css","precedence":"next","crossOrigin":""}]]}]]},["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","(layoutCase)","children","categories","children","$7","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","(layoutCase)","children","categories","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]],"search":["__DEFAULT__",{},["$a","$Lc",null]]},[null,["$","$Ld",null,{"children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","(layoutCase)","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}],"search":["$","$L6",null,{"parallelRouterKey":"search","segmentPath":["children","(layoutCase)","search"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$e","styles":null}],"params":{}}],null]]},[null,["$","html",null,{"lang":"en","className":"","children":[["$","head",null,{"children":[["$","link",null,{"rel":"stylesheet","href":"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css","as":"style"}],["$","link",null,{"rel":"preconnect","href":"https://fonts.googleapis.com"}],["$","link",null,{"rel":"preconnect","href":"https://fonts.gstatic.com"}],["$","link",null,{"rel":"stylesheet","href":"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR&display=swap","as":"style"}]]}],["$","body",null,{"children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":"$f","children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":"$10","children":"404"}],["$","div",null,{"style":"$11","children":["$","h2",null,{"style":"$12","children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/0c496b0e03d530ba.css","precedence":"next","crossOrigin":""}]]}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/80c9ce4c138da48c.css","precedence":"next","crossOrigin":""}]],"$L13"]]]]
c:E{"digest":"NEXT_NOT_FOUND"}
13:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"be come 💡"}],["$","meta","3",{"name":"description","content":"App for an Ant Who Wants to Become a Bejjangyi"}]]
1:null
b:null
