2:I[5250,["250","static/chunks/250-8b90be581650ff9d.js","399","static/chunks/399-caf055eb211349e2.js","216","static/chunks/app/(layoutCase)/tags/%5Btagname%5D/%5Bpostid%5D/page-f4d08730f917835e.js"],""]
3:I[8843,["250","static/chunks/250-8b90be581650ff9d.js","399","static/chunks/399-caf055eb211349e2.js","216","static/chunks/app/(layoutCase)/tags/%5Btagname%5D/%5Bpostid%5D/page-f4d08730f917835e.js"],""]
4:I[777,["250","static/chunks/250-8b90be581650ff9d.js","399","static/chunks/399-caf055eb211349e2.js","216","static/chunks/app/(layoutCase)/tags/%5Btagname%5D/%5Bpostid%5D/page-f4d08730f917835e.js"],""]
5:I[5613,[],""]
8:I[1778,[],""]
c:I[3866,["250","static/chunks/250-8b90be581650ff9d.js","399","static/chunks/399-caf055eb211349e2.js","46","static/chunks/46-f5c36f830a2ce4c4.js","730","static/chunks/730-f56ebe909f1c8bdb.js","35","static/chunks/35-917f6d62db20f146.js","464","static/chunks/app/(layoutCase)/layout-b678e44923655761.js"],""]
6:["tagname","Repaint","d"]
7:["postid","77","d"]
9:"$La"
d:[]
e:{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"}
f:{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"}
10:{"display":"inline-block"}
11:{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0}
0:["5LFqdBjTKdOX-pUbi_i-X",[[["",{"children":["(layoutCase)",{"children":["tags",{"children":[["tagname","Repaint","d"],{"children":[["postid","77","d"],{"children":["__PAGE__?{\"tagname\":\"Repaint\",\"postid\":\"77\"}",{}]}]}]}],"search":["__DEFAULT__",{}]}]},"$undefined","$undefined",true],["",{"children":["(layoutCase)",{"children":["tags",{"children":[["tagname","Repaint","d"],{"children":[["postid","77","d"],{"children":["__PAGE__",{},["$L1",[[["$","article",null,{"className":"$undefined","children":["$","header",null,{"children":["$","h1",null,{"className":"postUserInfo_h1__uhAqy","children":"[TECH-QA] Intersection Type (&)이란?"}]}]}],["$","div",null,{"className":"postUserInfo_post_meta__ABvuC","children":[["$","span",null,{"children":["Posted"," ",["$","time",null,{"className":"postUserInfo_time__2exyR","children":["9 days"," "]}]]}],["$","span",null,{"className":"postUserInfo_update__f345P","children":["Updated"," ",["$","time",null,{"className":"postUserInfo_time__2exyR","children":"9 days"}]]}]]}],["$","div",null,{"children":["$","span",null,{"className":"postUserInfo_post_meta__ABvuC","children":["By"," ",["$","em",null,{"children":["$","$L2",null,{"href":"https://nam-yeun-hwa.github.io/","className":"postUserInfo_author__fVGYM","children":"베짱이가 되고싶은 개미。"}]}]]}]}]],[["$","ul",null,{"className":"liststyle_ul__uFdBS","children":[["$","li","0",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"A & B는 타입 A와 타입 B의 모든 속성을 동시에 만족하는 새로운 타입을 정의합니다."}}],["$","li","1",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"즉, 결과 타입은 A와 B의 속성을 모두 포함합니다."}}],["$","li","2",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"예를 들어, AlertModalProps와 React.RefAttributes<HTMLDivElement>를 결합하면, 새로운 타입은 AlertModalProps의 모든 속성과 React.RefAttributes<HTMLDivElement>의 모든 속성을 포함합니다."}}]]}],["$","$L3",null,{"code":"interface AlertModalProps {\n  title: string;\n  message: string;\n  onClose: () => void;\n}\n\nconst AlertModal = React.forwardRef<HTMLDivElement, AlertModalProps>(\n  ({ title, message, onClose }, ref) => {\n    return (\n      <div ref={ref}>\n        <h1>{title}</h1>\n        <p>{message}</p>\n        <button onClick={onClose}>Close</button>\n      </div>\n    );\n  }\n);\n\n// 타입 정의\ntype AlertModalComponent = React.ForwardRefRenderFunction<\n  HTMLDivElement,\n  AlertModalProps & React.RefAttributes<HTMLDivElement>\n>;","children":"$undefined"}],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"여기서 AlertModalProps &amp; React.RefAttributes는 AlertModalProps의 속성(title, message, onClose)과 React.RefAttributes의 속성(ref)을 모두 포함하는 타입을 정의합니다."}}],["$","$L3",null,{"code":"const modalRef = React.useRef<HTMLDivElement>(null);\n\n<AlertModal\n  title=\"경고\"\n  message=\"이것은 경고 메시지입니다.\"\n  onClose={() => console.log(\"닫기\")}\n  ref={modalRef}\n/>;","children":"$undefined"}],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"React.RefAttributes는 ref 속성을 추가로 제공하므로, AlertModalProps에 ref를 직접 포함하지 않고도 ref를 지원할 수 있게 됩니다."}}]],["$","$L4",null,{"postid":77,"prePostTitle":{"id":78,"title":"[TECH-QA] TypeScript에서 객체 리터럴을 불변(immutable)으로 사용하기","date":"2025-07-22 13:35:33","folder":"Javascript","tag":["TECH-QA"],"preview":"TypeScript에서 as const를 사용하여 객체 리터럴을 불변(immutable)으로 만드는 예제를 보여드리겠습니다. as const는 객체, 배열, 또는 기본 타입을 읽기 전용(readonly)으로 만들어 타입을 좁히고, 값이 변경되지 않도록 보장합니다.","post":[{"type":"Heading","headingType":"h2","value":"기본 객체 리터럴과 as const"},{"type":"code","value":"const config = {\n  apiUrl: \"https://api.example.com\",\n  port: 8080,\n  timeout: 5000\n} as const;\n\n// 타입: { readonly apiUrl: \"https://api.example.com\"; readonly port: 8080; readonly timeout: 5000; }\n\n// 값 변경 시도 - 에러 발생\n// config.apiUrl = \"https://new-url.com\"; // 오류: Cannot assign to 'apiUrl' because it is a read-only property.\n\n// 사용 예시\nfunction fetchData(url: string) {\n  console.log(`Fetching from ${url}`);\n}\n\nfetchData(config.apiUrl); // 정상 작동"},{"type":"Heading","headingType":"h2","value":"중첩 객체와 as const"},{"type":"code","value":"const userSettings = {\n  user: {\n    name: \"Alice\",\n    age: 30\n  },\n  preferences: {\n    theme: \"dark\",\n    notifications: true\n  }\n} as const;\n\n// 타입: { readonly user: { readonly name: \"Alice\"; readonly age: 30; }; readonly preferences: { readonly theme: \"dark\"; readonly notifications: true; }; }\n\n// 값 변경 시도 - 에러 발생\n// userSettings.user.name = \"Bob\"; // 오류: Cannot assign to 'name' because it is a read-only property.\n\n// 사용 예시\nfunction displayUser(settings: typeof userSettings) {\n  console.log(`User: ${settings.user.name}, Theme: ${settings.preferences.theme}`);\n}\n\ndisplayUser(userSettings);"},{"type":"Heading","headingType":"h2","value":"배열과 as const"},{"type":"code","value":"const colors = [\"red\", \"green\", \"blue\"] as const;\n\n// 타입: readonly [\"red\", \"green\", \"blue\"]\n\n// 배열 요소 변경 시도 - 에러 발생\n// colors[0] = \"yellow\"; // 오류: Cannot assign to '0' because it is a read-only property.\n\n// 사용 예시\nfunction pickColor(color: typeof colors[number]) {\n  console.log(`Selected color: ${color}`);\n}\n\npickColor(colors[0]); // 정상 작동: \"red\""},{"type":"stringlist","value":"as const의 효과: 객체와 배열의 모든 프로퍼티를 readonly로 만들고, 리터럴 타입으로 좁힙니다. 예를 들어, string 대신 \"specific-value\"로 타입이 지정됩니다.\n불변성 보장: 컴파일 타임에 값 변경을 방지하며, 코드의 안정성을 높입니다.\n사용 사례: 상수 데이터, 설정 객체, 열거형(enum) 대체 등에 유용합니다.\n제한사항: as const는 객체를 완전히 동결(freeze)하지 않으므로, 런타임에서 Object.freeze와 함께 사용할 수 있습니다."},{"type":"Heading","headingType":"h2","value":"Object.freeze"},{"type":"code","value":"const frozenConfig = Object.freeze({\n  apiUrl: \"https://api.example.com\",\n  port: 8080\n}) as const;\n\n// 런타임과 컴파일 타임 모두 불변\n// frozenConfig.apiUrl = \"new-url\"; // 컴파일 에러\n// frozenConfig.port = 3000; // 컴파일 에러"}]},"nextPostTile":{"id":76,"title":"[TECH-QA] \"TypeScript의 강력한 도구: 유틸리티 타입 활용법\"","date":"2025-07-21 11:14:33","folder":"typescript","tag":["TECH-QA","TypeScript"],"preview":"TypeScript의 유틸리티 타입(Utility Types)은 기존 타입을 기반으로 새로운 타입을 생성하거나 변환하는 데 사용되는 내장 타입 도구입니다. 이를 통해 코드의 재사용성과 타입 안전성을 높일 수 있습니다. 아래는 주요 유틸리티 타입과 그 설명입니다.","post":[{"type":"Heading","headingType":"h2","value":"Partial<t></t>"},{"type":"code","value":"interface User {\n  name: string;\n  age: number;\n}\n\ntype PartialUser = Partial<User>;\n// PartialUser = { name?: string; age?: number; }"},{"type":"stringlist","value":"객체의 일부 속성만 업데이트하거나 부분적으로 사용할 때 유용."},{"type":"Heading","headingType":"h2","value":"Required<t></t>"},{"type":"code","value":"interface User {\n  name?: string;\n  age?: number;\n}\n\ntype RequiredUser = Required<User>;\n// RequiredUser = { name: string; age: number; }"},{"type":"stringlist","value":"타입 T의 모든 속성을 필수(required)로 만듭니다. 선택적 속성을 강제로 필수로 만들 때 사용."},{"type":"Heading","headingType":"h2","value":"Readonly<t></t>"},{"type":"code","value":"interface User {\n  name: string;\n  age: number;\n}\n\ntype ReadonlyUser = Readonly<User>;\n// ReadonlyUser = { readonly name: string; readonly age: number; }"},{"type":"stringlist","value":"타입 T의 모든 속성을 읽기 전용(readonly)으로 만듭니다."},{"type":"Heading","headingType":"h2","value":"Pick<T, K>"},{"type":"code","value":"interface User {\n  name: string;\n  age: number;\n  email: string;\n}\n\ntype PickUser = Pick<User, 'name' | 'age'>;\n// PickUser = { name: string; age: number; }"},{"type":"stringlist","value":"타입 T에서 지정된 키 K만 선택하여 새로운 타입을 만듭니다."},{"type":"Heading","headingType":"h2","value":"Omit<T, K>"},{"type":"code","value":"interface User {\n  name: string;\n  age: number;\n  email: string;\n}\n\ntype OmitUser = Omit<User, 'email'>;\n// OmitUser = { name: string; age: number; }"},{"type":"stringlist","value":"타입 T에서 지정된 키 K를 제외한 새로운 타입을 만듭니다."},{"type":"Heading","headingType":"h2","value":"Record<K, T>"},{"type":"code","value":"type Role = 'admin' | 'user' | 'guest';\ntype UserRecord = Record<Role, string>;\n// UserRecord = { admin: string; user: string; guest: string; }"},{"type":"stringlist","value":"키 타입 K와 값 타입 T로 구성된 객체 타입을 생성합니다."},{"type":"Heading","headingType":"h2","value":"Exclude<T, U>"},{"type":"code","value":"type MyUnion = 'a' | 'b' | 'c';\ntype Excluded = Exclude<MyUnion, 'a'>;\n// Excluded = 'b' | 'c'"},{"type":"stringlist","value":"타입 T에서 U에 할당 가능한 타입을 제외합니다."},{"type":"Heading","headingType":"h2","value":"Extract<T, U>"},{"type":"code","value":"type MyUnion = 'a' | 'b' | 'c';\ntype Extracted = Extract<MyUnion, 'a' | 'b'>;\n// Extracted = 'a' | 'b'"},{"type":"stringlist","value":"타입 T에서 U에 할당 가능한 타입만 추출합니다."},{"type":"Heading","headingType":"h2","value":"NonNullable<t></t>"},{"type":"code","value":"type Nullable = string | null | undefined;\ntype NonNullableType = NonNullable<Nullable>;\n// NonNullableType = string"},{"type":"stringlist","value":"null 또는 undefined가 포함된 타입을 안전하게 다룰 때 사용."},{"type":"Heading","headingType":"h2","value":"ReturnType<t></t>"},{"type":"code","value":"function getUser() {\n  return { name: 'Alice', age: 30 };\n}\n\ntype UserReturn = ReturnType<typeof getUser>;\n// UserReturn = { name: string; age: number; }"},{"type":"stringlist","value":"함수 타입 T의 반환 타입을 추출합니다."},{"type":"Heading","headingType":"h2","value":"Parameters<t></t>"},{"type":"code","value":"function add(a: number, b: string): string {\n  return `${a}${b}`;\n}\n\ntype AddParams = Parameters<typeof add>;\n// AddParams = [number, string]"},{"type":"stringlist","value":"함수 타입 T의 매개변수 타입을 튜플(tuple) 타입으로 정의되었습니다. 튜플은 배열과 유사하지만, 고정된 길이와 각 요소의 타입이 명시적으로 정의된 배열입니다."},{"type":"Heading","headingType":"h2","value":"Awaited<t></t>"},{"type":"code","value":"type PromiseType = Promise<string>;\ntype ResolvedType = Awaited<PromiseType>;\n// ResolvedType = string"},{"type":"stringlist","value":"Promise 타입 T의 해결(resolve) 타입을 추출합니다. 비동기 작업의 결과 타입을 다룰 때 사용."},{"type":"Heading","headingType":"h2","value":"Uppercase<t> Lowercase<t>, Capitalize<t>, Uncapitalize<t></t></t></t></t>"},{"type":"code","value":"type Greeting = 'hello world';\ntype UpperGreeting = Uppercase<Greeting>;\n// UpperGreeting = 'HELLO WORLD'\ntype CapitalizedGreeting = Capitalize<Greeting>;\n// CapitalizedGreeting = 'Hello world'"},{"type":"stringlist","value":"문자열 리터럴 타입을 대문자, 소문자, 첫 글자 대문자, 첫 글자 소문자로 변환합니다. 문자열 리터럴 타입을 변환할 때 사용."}]},"segment":"posts"}],["$","div",null,{"className":"footer_footer_container__MsSvO","children":["$","footer",null,{"className":"footer_footer__AwYty","children":[["$","p",null,{"className":"footer_copylight___J5l0","children":["© 2024 ","베짱이가 되고싶은 개미。"," Some rights reserved."]}],["$","p",null,{"className":"footer_theme__bwXbg","children":"portfolio v1.0.0-alpha.3"}]]}]}]],null]]},["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","(layoutCase)","children","tags","children","$6","children","$7","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/175d6c648827cdb6.css","precedence":"next","crossOrigin":""}]]}]]},["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","(layoutCase)","children","tags","children","$6","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","(layoutCase)","children","tags","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]],"search":["__DEFAULT__",{},["$9","$Lb",null]]},[null,["$","$Lc",null,{"children":["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","(layoutCase)","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}],"search":["$","$L5",null,{"parallelRouterKey":"search","segmentPath":["children","(layoutCase)","search"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$d","styles":null}],"params":{}}],null]]},[null,["$","html",null,{"lang":"en","className":"","children":[["$","head",null,{"children":[["$","link",null,{"rel":"stylesheet","href":"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css","as":"style"}],["$","link",null,{"rel":"preconnect","href":"https://fonts.googleapis.com"}],["$","link",null,{"rel":"preconnect","href":"https://fonts.gstatic.com"}],["$","link",null,{"rel":"stylesheet","href":"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR&display=swap","as":"style"}]]}],["$","body",null,{"children":["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":"$e","children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":"$f","children":"404"}],["$","div",null,{"style":"$10","children":["$","h2",null,{"style":"$11","children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/0c496b0e03d530ba.css","precedence":"next","crossOrigin":""}]]}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/80c9ce4c138da48c.css","precedence":"next","crossOrigin":""}]],"$L12"]]]]
b:E{"digest":"NEXT_NOT_FOUND"}
12:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"be come 💡"}],["$","meta","3",{"name":"description","content":"App for an Ant Who Wants to Become a Bejjangyi"}]]
1:null
a:null
