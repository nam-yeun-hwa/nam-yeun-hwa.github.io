2:I[5250,["250","static/chunks/250-8b90be581650ff9d.js","399","static/chunks/399-caf055eb211349e2.js","216","static/chunks/app/(layoutCase)/tags/%5Btagname%5D/%5Bpostid%5D/page-82d05226373f742d.js"],""]
3:I[8843,["250","static/chunks/250-8b90be581650ff9d.js","399","static/chunks/399-caf055eb211349e2.js","216","static/chunks/app/(layoutCase)/tags/%5Btagname%5D/%5Bpostid%5D/page-82d05226373f742d.js"],""]
4:I[777,["250","static/chunks/250-8b90be581650ff9d.js","399","static/chunks/399-caf055eb211349e2.js","216","static/chunks/app/(layoutCase)/tags/%5Btagname%5D/%5Bpostid%5D/page-82d05226373f742d.js"],""]
6:I[5613,[],""]
9:I[1778,[],""]
d:I[3866,["250","static/chunks/250-8b90be581650ff9d.js","399","static/chunks/399-caf055eb211349e2.js","46","static/chunks/46-f5c36f830a2ce4c4.js","730","static/chunks/730-f56ebe909f1c8bdb.js","35","static/chunks/35-86206131b00fc69c.js","464","static/chunks/app/(layoutCase)/layout-8ff98cce509a96df.js"],""]
5:T43f,// 원본 객체 (복잡한 구조)
let original = {
  name: "Bob",
  info: {
    age: 50,
    birthday: new Date("1975-01-01"),
    address: { city: "Seoul", country: "Korea" }
  },
  hobbies: ["reading", { type: "gaming", level: "pro" }],
  metadata: new Map([["id", 123], ["active", true]])
};

// 깊은 복사
let deepCopy = structuredClone(original);

// 복사본 수정
deepCopy.name = "David";
deepCopy.info.age = 60;
deepCopy.info.address.city = "Busan";
deepCopy.hobbies[1].level = "expert";
deepCopy.metadata.set("id", 456);

console.log(original);
// 출력: {
//   name: "Bob",
//   info: { age: 50, birthday: [Date 1975-01-01], address: { city: "Seoul", country: "Korea" } },
//   hobbies: ["reading", { type: "gaming", level: "pro" }],
//   metadata: Map { "id" => 123, "active" => true }
// }

console.log(deepCopy);
// 출력: {
//   name: "David",
//   info: { age: 60, birthday: [Date 1975-01-01], address: { city: "Busan", country: "Korea" } },
//   hobbies: ["reading", { type: "gaming", level: "expert" }],
//   metadata: Map { "id" => 456, "active" => true }
// }7:["tagname","JavaScript","d"]
8:["postid","64","d"]
a:"$Lb"
e:[]
f:{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"}
10:{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"}
11:{"display":"inline-block"}
12:{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0}
0:["5UwSy2AQa_DT7-uifvmO-",[[["",{"children":["(layoutCase)",{"children":["tags",{"children":[["tagname","JavaScript","d"],{"children":[["postid","64","d"],{"children":["__PAGE__?{\"tagname\":\"JavaScript\",\"postid\":\"64\"}",{}]}]}]}],"search":["__DEFAULT__",{}]}]},"$undefined","$undefined",true],["",{"children":["(layoutCase)",{"children":["tags",{"children":[["tagname","JavaScript","d"],{"children":[["postid","64","d"],{"children":["__PAGE__",{},["$L1",[[["$","article",null,{"className":"$undefined","children":["$","header",null,{"children":["$","h1",null,{"className":"postUserInfo_h1__uhAqy","children":"[TECH-QA] CSRF와 XSS"}]}]}],["$","div",null,{"className":"postUserInfo_post_meta__ABvuC","children":[["$","span",null,{"children":["Posted"," ",["$","time",null,{"className":"postUserInfo_time__2exyR","children":["14 days"," "]}]]}],["$","span",null,{"className":"postUserInfo_update__f345P","children":["Updated"," ",["$","time",null,{"className":"postUserInfo_time__2exyR","children":"14 days"}]]}]]}],["$","div",null,{"children":["$","span",null,{"className":"postUserInfo_post_meta__ABvuC","children":["By"," ",["$","em",null,{"children":["$","$L2",null,{"href":"https://nam-yeun-hwa.github.io/","className":"postUserInfo_author__fVGYM","children":"베짱이가 되고싶은 개미。"}]}]]}]}]],[[false,["$","h2",null,{"className":"heading_h2__fsXMw","style":{"fontWeight":"NORMAL"},"children":"CSRF 토큰 이란"}],false,false],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"CSRF 토큰은 크로스 사이트 요청 위조(Cross-Site Request Forgery, CSRF) 공격을 방어하기 위해 사용되는 고유한 랜덤 문자열입니다. 서버에서 생성되어 사용자 세션과 연결되며, 클라이언트가 서버에 요청(예: 폼 제출, AJAX 호출)을 보낼 때 이 토큰을 함께 전송하여 요청의 유효성을 검증합니다."}}],[false,["$","h2",null,{"className":"heading_h2__fsXMw","style":{"fontWeight":"NORMAL"},"children":"CSRF 토큰의 일반적인 흐름"}],false,false],[false,false,false,["$","h4",null,{"className":"heading_h4__ZTbA0","style":{"fontWeight":"NORMAL"},"children":["📝 ","서버에서 CSRF 토큰 생성"]}]],["$","ul",null,{"className":"liststyle_ul__uFdBS","children":[["$","li","0",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"사용자가 웹 애플리케이션에 접속하면, 서버는 해당 사용자 세션에 고유한 CSRF 토큰을 생성합니다."}}],["$","li","1",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"이 토큰은 서버의 세션에 저장됩니다(예: 세션 ID와 연계된 서버 메모리, 데이터베이스, 또는 캐시)."}}],["$","li","2",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"서버 세션은 사용자마다 고유하며, 서버가 관리하는 상태 저장소입니다."}}]]}],[false,false,false,["$","h4",null,{"className":"heading_h4__ZTbA0","style":{"fontWeight":"NORMAL"},"children":["📝 ","클라이언트로 CSRF 토큰 전달"]}]],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"서버는 생성한 CSRF 토큰을 클라이언트(프론트엔드)로 전송합니다. 이는 보통 다음과 같은 방식으로 이루어집니다:"}}],["$","ul",null,{"className":"liststyle_ul__uFdBS","children":[["$","li","0",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"HTML 폼의 숨겨진 필드(<input type=\"hidden\" name=\"_csrf\" value=\"토큰값\">)로 포함."}}],["$","li","1",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"AJAX 요청을 위해 HTTP 헤더(예: X-CSRF-Token)로 전달."}}],["$","li","2",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"쿠키로 전송(단, 쿠키 자체는 CSRF 방지에 직접 사용되지 않음)."}}]]}],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"클라이언트는 이 토큰을 받아서 저장합니다. 이 저장은 주로 프론트엔드의 메모리(예: JavaScript 변수)나 HTML 폼에 일시적으로 유지되며, 프론트엔드의 세션 스토리지나 로컬 스토리지에 저장하는 경우는 드뭅니다(보안상 권장되지 않음)."}}],[false,["$","h2",null,{"className":"heading_h2__fsXMw","style":{"fontWeight":"NORMAL"},"children":"클라이언트가 요청 전송"}],false,false],["$","ul",null,{"className":"liststyle_ul__uFdBS","children":[["$","li","0",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"사용자가 폼을 제출하거나 AJAX 요청을 보낼 때, <b>클라이언트는 CSRF 토큰을 요청에 포함</b>시킵니다."}}],["$","li","1",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"예: <b>POST 요청의 바디에 _csrf 필드로 포함</b>되거나, <b>헤더에 X-CSRF-Token으로 추가</b>됨."}}]]}],[false,false,false,["$","h4",null,{"className":"heading_h4__ZTbA0","style":{"fontWeight":"NORMAL"},"children":["📝 ","서버에서 CSRF 토큰 검증"]}]],["$","ul",null,{"className":"liststyle_ul__uFdBS","children":[["$","li","0",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"서버는 클라이언트로부터 받은 CSRF 토큰을 서버 세션에 저장된 토큰과 비교합니다."}}],["$","li","1",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"토큰이 일치하면 요청이 유효한 것으로 간주하고 처리합니다."}}],["$","li","2",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"토큰이 일치하지 않거나 없으면 요청을 거부(예: 403 Forbidden 응답)."}}]]}],[false,false,false,["$","h4",null,{"className":"heading_h4__ZTbA0","style":{"fontWeight":"NORMAL"},"children":["📝 ","세션 유지 및 토큰 갱신"]}]],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"요청이 성공적으로 처리된 후, 서버는 필요에 따라 새로운 CSRF 토큰을 생성하여 세션에 저장하고 클라이언트에 전달합니다.\n이는 보안을 강화하기 위해 토큰을 일회성 또는 주기적으로 갱신하는 방식입니다."}}],[false,false,false,["$","h4",null,{"className":"heading_h4__ZTbA0","style":{"fontWeight":"NORMAL"},"children":["📝 ","예시"]}]],["$","$L3",null,{"code":"<form method=\"POST\" action=\"/update-profile\">\n  <span class=\"point\"><input type=\"hidden\" name=\"_csrf\" value=\"abc123xyz789\"></span>\n  <input type=\"text\" name=\"username\">\n  <button type=\"submit\">저장</button>\n</form>","children":"$undefined"}],[false,false,false,["$","h4",null,{"className":"heading_h4__ZTbA0","style":{"fontWeight":"NORMAL"},"children":["📝 ","예제: JavaScript (Fetch API)"]}]],["$","$L3",null,{"code":"<!DOCTYPE html>\n<html>\n<head>\n    <title>CSRF AJAX Example</title>\n    <!-- CSRF 토큰을 메타 태그로 포함 -->\n    <meta name=\"csrf-token\" content=\"3f9a8b2c-7e5d-4a1b-9c0f-1234567890ab\">\n</head>\n<body>\n    <button onclick=\"submitData()\">Submit via AJAX</button>\n\n    <script>\n        function submitData() {\n            // 메타 태그에서 CSRF 토큰 가져오기\n            const csrfToken = document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content');\n\n            fetch('/submit', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-CSRF-Token': csrfToken // CSRF 토큰을 헤더에 추가\n                },\n                body: JSON.stringify({ username: 'john' })\n            })\n            .then(response => response.text())\n            .then(data => console.log(data))\n            .catch(error => console.error('Error:', error));\n        }\n    </script>\n</body>\n</html>","children":"$undefined"}],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"는 서버에서 생성한 CSRF 토큰을 프론트엔드에 전달하는 일반적인 방법입니다.\nJavaScript에서 fetch를 사용하여 POST 요청을 보낼 때, X-CSRF-Token 헤더에 토큰을 추가합니다."}}],["$","$L3",null,{"code":"POST /submit HTTP/1.1\nHost: example.com\nContent-Type: application/json\nX-CSRF-Token: 3f9a8b2c-7e5d-4a1b-9c0f-1234567890ab","children":"$undefined"}],[false,false,false,["$","h4",null,{"className":"heading_h4__ZTbA0","style":{"fontWeight":"NORMAL"},"children":["📝 ","HTTP 요청 헤더"]}]],["$","$L3",null,{"code":"POST /submit HTTP/1.1\nHost: example.com\nContent-Type: application/json\nX-CSRF-Token: 3f9a8b2c-7e5d-4a1b-9c0f-1234567890ab","children":"$undefined"}],[false,false,false,["$","h4",null,{"className":"heading_h4__ZTbA0","style":{"fontWeight":"NORMAL"},"children":["📝 ","요청 바디"]}]],["$","$L3",null,{"code":"{\"username\":\"john\"}","children":"$undefined"}],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"서버는 _csrf 값이 세션의 토큰과 일치하는지 확인 후 요청을 처리합니다."}}],[false,["$","h2",null,{"className":"heading_h2__fsXMw","style":{"fontWeight":"NORMAL"},"children":"CSRF 토큰의 중요성"}],false,false],["$","ul",null,{"className":"liststyle_ul__uFdBS","children":[["$","li","0",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"<b>공격 방어</b>: 공격자가 사용자의 인증 쿠키를 악용해 위조 요청을 보내더라도, CSRF 토큰이 없으면 서버가 요청을 거부합니다."}}],["$","li","1",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"<b>간단한 구현</b>: 대부분의 웹 프레임워크(예: Spring, Django, Laravel)는 CSRF 토큰 생성 및 검증 기능을 기본 제공합니다."}}]]}],[false,false,false,["$","h4",null,{"className":"heading_h4__ZTbA0","style":{"fontWeight":"NORMAL"},"children":["📝 ","추가 고려사항"]}]],["$","ul",null,{"className":"liststyle_ul__uFdBS","children":[["$","li","0",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"<b>보안</b>: 토큰이 노출되지 않도록 HTTPS를 사용하고, GET 요청에 포함시키지 않습니다."}}],["$","li","1",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"<b>사용성</b>: AJAX 요청에서는 헤더로 토큰을 전송하는 방식이 일반적입니다."}}],["$","li","2",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"<b>SameSite 쿠키와 조합</b>: CSRF 토큰 외에 SameSite 속성을 쿠키에 설정하면 추가적인 보호를 제공합니다."}}]]}],[false,["$","h2",null,{"className":"heading_h2__fsXMw","style":{"fontWeight":"NORMAL"},"children":"쿠키 속성 설정(SameSite)"}],false,false],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"쿠키에 SameSite 속성을 설정하여 동일 출처(Same-Origin) 또는 제한된 조건에서만 쿠키가 전송되도록 합니다."}}],["$","ul",null,{"className":"liststyle_ul__uFdBS","children":[["$","li","0",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"<b>Strict</b>: 동일 도메인에서만 쿠키 전송 가능."}}],["$","li","1",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"<b>Lax</b>: 동일 도메인 외의 GET 요청(예: 링크 이동)에서만 쿠키 전송 가능."}}],["$","li","2",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"<b>None</b>: 모든 요청에서 쿠키 전송(단, HTTPS와 Secure 속성 필수)"}}]]}],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"<span class=\"point\">SameSite=Lax</span> 는 대부분의 CSRF 방어에 적합하며, 사용자 경험을 해치지 않으면서 보안을 강화합니다. <span class=\"point\">SameSite=Strict</span>는 더 강력하지만, 외부 링크를 통한 접근 시 쿠키가 전송되지 않아 기능적 제약이 있을 수 있습니다."}}],["$","ul",null,{"className":"liststyle_ul__uFdBS","children":[["$","li","0",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"<b>HTTP 메서드 제한</b>: 상태 변경 요청(예: 돈 이체, 계정 수정)은 POST, PUT, DELETE와 같은 메서드만 허용하고, GET 요청은 상태 변경을 유발하지 않도록 설계합니다."}}],["$","li","1",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"\t\t\t<b>Referer/Origin 헤더 검증</b>: 요청의 출처를 확인하여 신뢰할 수 있는 도메인에서만 요청을 허용합니다. 단, Referer 헤더는 브라우저 설정에 따라 누락될 수 있으므로 보조적 수단으로 사용합니다."}}]]}],[false,["$","h2",null,{"className":"heading_h2__fsXMw","style":{"fontWeight":"NORMAL"},"children":"XSS 공격 방어"}],false,false],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"XSS 공격은 악성 스크립트를 웹 페이지에 삽입하여 사용자의 브라우저에서 실행되도록 만드는 공격입니다. 이를 방어하기 위한 방법은 다음과 같습니다."}}],[false,false,false,["$","h4",null,{"className":"heading_h4__ZTbA0","style":{"fontWeight":"NORMAL"},"children":["📝 ","입력 값 유효성 검증 및 특수문자 이스케이프"]}]],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"사용자로부터 입력받은 데이터(예: 텍스트, URL, JSON 등)의 유효성을 검증하고, HTML, JavaScript, SQL 등에서 실행 가능한 특수문자(<span class=\"point\"> &lt;, &gt;, \", ', &amp;</span> 등)를 이스케이프 처리합니다."}}],[false,false,false,false],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"사용자가 입력한 데이터(예: 텍스트 필드, 쿼리 파라미터)를 서버 또는 클라이언트에서 받으면 입력 데이터에 포함된 특수 문자를 안전한 문자(예: &lt;)로 변환하여 변환된 데이터를 HTML, JavaScript 등의 문맥에서 출력하여 브라우저가 이를 코드가 아닌 텍스트로 처리하도록 함."}}],["$","$L3",null,{"code":"<!-- 입력: <script>alert('XSS')</script> --> \n<!-- 이스케이프 처리 후 출력 -->\n&lt;script&gt;alert(&#39;XSS&#39;)&lt;script&gt;","children":"$undefined"}],["$","ul",null,{"className":"liststyle_ul__uFdBS","children":[["$","li","0",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"브라우저는 위를 <script>alert('XSS')</script>로 표시하며, 실행하지 않음."}}]]}],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"클라이언트와 서버 모두에서 입력 검증을 수행해야 하며 서버에서는 데이터베이스 저장 전, 클라이언트에서는 사용자 경험을 위해 검증합니다. 예를 들어,  "}}],[false,false,false,["$","h4",null,{"className":"heading_h4__ZTbA0","style":{"fontWeight":"NORMAL"},"children":["📝 ","CSP(Content Security Policy) 설정"]}]],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"서버에서 HTTP 응답 헤더에 CSP를 설정하여 허용된 스크립트, 스타일, 이미지 등의 출처를 제한합니다."}}],["$","$L3",null,{"code":"Content-Security-Policy: script-src 'self' https://trusted.cdn.com;","children":"$undefined"}],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"CSP는 인라인 스크립트()나 외부 출처의 악성 스크립트 실행을 차단합니다. 'strict-dynamic', 'nonce', 'hash'와 같은 옵션을 사용하면 더 세밀한 제어가 가능합니다. 그러나 CSP 설정은 신중히 설계해야 하며, 기존 코드와의 호환성 문제를 테스트해야 합니다."}}],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":""}}],["$","ul",null,{"className":"liststyle_ul__uFdBS","children":[["$","li","0",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"<b>출력 이스케이프</b>: 데이터를 렌더링할 때 문맥(HTML, 속성, JavaScript, CSS, URL 등)에 맞게 이스케이프 처리합니다. 예: HTML 속성에는 더블쿼테이션(\")를 &ampquot;로 변환."}}],["$","li","1",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"\t\t\t<b>안전한 API 사용</b>: innerHTML 대신 textContent나 setAttribute를 사용해 스크립트 실행을 방지합니다."}}],["$","li","2",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"\t\t\t<b>쿠키 보호</b>: HttpOnly 속성을 쿠키에 설정하여 JavaScript에서 쿠키에 접근하지 못하도록 제한합니다."}}],["$","li","3",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"\t\t\t<b>프레임워크 보안</b>: React, Angular 등 현대 프레임워크는 기본적으로 XSS 방어를 제공하지만, dangerouslySetInnerHTML 같은 기능을 사용할 때는 주의가 필요합니다."}}]]}],[false,false,["$","h3",null,{"className":"heading_h3__UisKt","style":{"fontWeight":"NORMAL"},"children":"HTTPS를 통한 통신 보안"}],false],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"HTTP는 데이터가 평문으로 전송되어 도청 및 조작에 취약합니다. HTTPS는 <b>SSL/TLS</b>를 통해 통신을 암호화하여 보안을 강화합니다."}}],[false,false,false,["$","h4",null,{"className":"heading_h4__ZTbA0","style":{"fontWeight":"NORMAL"},"children":["📝 ","HTTPS 적용"]}]],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"HSTS는 웹 브라우저에게 해당 사이트는 항상 HTTPS로만 접속해야 한다고 지시하는 보안 기능입니다. 한 번 브라우저가 이 헤더를 받으면, 이후엔 자동으로 HTTP 요청을 HTTPS로 업그레이드합니다."}}],[false,false,false,["$","h4",null,{"className":"heading_h4__ZTbA0","style":{"fontWeight":"NORMAL"},"children":["📝 ","HSTS 헤더 예시"]}]],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"서버에서 다음과 같은 헤더를 응답에 추가합니다."}}],["$","$L3",null,{"code":"Strict-Transport-Security: max-age=31536000; includeSubDomains","children":"$undefined"}],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"HTTPS는 데이터 무결성과 기밀성을 보장하며, CSRF와 XSS 공격에서 쿠키나 토큰이 탈취되는 것을 방지합니다. HSTS는 중간자 공격(MITM)을 줄이는 데 효과적입니다. 또한, 최신 TLS 버전(예: TLS 1.3)과 강력한 암호화 알고리즘을 사용하는 것이 중요합니다."}}],[false,false,false,["$","h4",null,{"className":"heading_h4__ZTbA0","style":{"fontWeight":"NORMAL"},"children":["📝 ","추가 보안 고려사항"]}]],["$","ul",null,{"className":"liststyle_ul__uFdBS","children":[["$","li","0",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"<b>인증서 관리</b>: 신뢰할 수 있는 인증 기관(CA)에서 발급받은 SSL/TLS 인증서를 사용하고, 만료 전에 갱신합니다."}}],["$","li","1",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"\t\t\t<b>혼합 콘텐츠 방지</b>: HTTPS 페이지에서 HTTP 리소스(이미지, 스크립트 등)를 로드하지 않도록 주의합니다. 브라우저는 혼합 콘텐츠를 차단하거나 경고를 표시할 수 있습니다."}}]]}],[false,false,["$","h3",null,{"className":"heading_h3__UisKt","style":{"fontWeight":"NORMAL"},"children":"종합적인 보안 전략"}],false],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"CSRF와 XSS 방어는 단일 기법에 의존하지 않고, 여러 방어 계층을 조합하여 적용하는 심층 방어(Defense-in-Depth) 전략이 필요합니다."}}],["$","ul",null,{"className":"liststyle_ul__uFdBS","children":[["$","li","0",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"<b>개발 단계</b>: 코드 리뷰, 보안 라이브러리 사용, OWASP 가이드라인 준수."}}],["$","li","1",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"\t\t\t<b>배포 단계</b>: 보안 헤더 설정(CSP, HSTS, X-Frame-Options 등), 취약점 스캔."}}],["$","li","2",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"\t\t\t<b>운영 단계</b>: 로그 모니터링, WAF(Web Application Firewall) 도입, 정기적인 보안 패치."}}]]}]],["$","$L4",null,{"postid":64,"prePostTitle":{"id":65,"title":"[TECH-QA] 리액트에서 XSS 방어","date":"2025-04-15 11:08:33","folder":"Javascript","tag":["react","TECH-QA","XSS"],"preview":"React는 기본적으로 XSS(크로스 사이트 스크립팅) 공격을 방어하기 위한 강력한 메커니즘을 제공합니다. React의 설계 자체가 XSS 취약점을 줄이도록 만들어져 있으며, 이를 통해 사용자 입력이나 동적 데이터를 안전하게 렌더링할 수 있습니다. 하지만 특정 상황에서는 주의가 필요합니다. 아래에서 React의 XSS 방어 메커니즘과 주의사항을 정리하겠습니다.","post":[{"type":"normal","value":"React는 기본적으로 XSS(크로스 사이트 스크립팅) 공격을 방어하기 위한 강력한 메커니즘을 제공합니다. React의 설계 자체가 XSS 취약점을 줄이도록 만들어져 있으며, 이를 통해 사용자 입력이나 동적 데이터를 안전하게 렌더링할 수 있습니다. 하지만 특정 상황에서는 주의가 필요합니다. 아래에서 React의 XSS 방어 메커니즘과 주의사항을 정리하겠습니다."},{"type":"Heading","headingType":"h2","value":"React의 기본 XSS 방어 메커니즘"},{"type":"normal","value":"React는 JSX와 내부 렌더링 방식 덕분에 XSS 공격을 방지하는 몇 가지 기본 기능을 제공합니다."},{"type":"Heading","headingType":"h3","value":"자동 이스케이프 처리"},{"type":"normal","value":"React는 JSX에서 동적 데이터를 렌더링할 때, 기본적으로 HTML 특수 문자를 이스케이프 처리합니다. 예를 들어, <, >, & 같은 문자는 <span class=\"point\">&amplt; &ampgt; &ampamp;</span> 로 변환되어 텍스트로 표시됩니다."},{"type":"code","value":"function App() {\n  const userInput = \"<script>alert('XSS')</script>\";\n  return <div>{userInput}</div>;\n}"},{"type":"normal","value":"브라우저에 <span class=\"point\"><script>alert('XSS')</script></span> 가 이스케이프 처리 후 <span class=\"point\">&amplt;script&ampgt;alert('XSS')&amplt;/script&ampgt;</span>  텍스트로 표시되며, 스크립트는 실행되지 않음. React는 {} 내부의 문자열을 textContent로 처리하여 HTML로 해석되지 않도록 합니다."},{"type":"Heading","headingType":"h3","value":"JSX의 안전한 구조"},{"type":"normal","value":"JSX는 HTML처럼 보이지만, 실제로는 JavaScript 객체로 컴파일됩니다. 따라서 사용자가 입력한 데이터가 직접 HTML로 삽입되지 않고, React가 관리하는 DOM API를 통해 안전하게 렌더링됩니다."},{"type":"normal","value":"<div>{userInput}</div>는 React.createElement로 변환되어 안전하게 처리됨."},{"type":"Heading","headingType":"h3","value":"속성 이스케이프"},{"type":"normal","value":"HTML 속성(예: value, href)에 동적 데이터를 삽입할 때도 React는 특수 문자를 이스케이프하여 악성 코드(예: javascript:alert('XSS'))가 실행되지 않도록 합니다."},{"type":"Heading","headingType":"h4","value":"안전하지 않은 dangerouslySetInnerHTML 사용."},{"type":"normal","value":"스크립트 실행 가능하여 XSS 취약하다."},{"type":"code","value":"const userInput = \"<script>alert('XSS')</script>\";\nreturn <div dangerouslySetInnerHTML={{ __html: userInput }} />;"},{"type":"Heading","headingType":"h4","value":"안전한 방법 dangerouslySetInnerHTML 사용"},{"type":"normal","value":"사용자 입력을 삽입하기 전에 반드시 DOMPurify 같은 라이브러리로 정화(sanitize)."},{"type":"code","value":"import DOMPurify from \"dompurify\";\nconst userInput = \"<script>alert('XSS')</script>\";\nconst sanitized = DOMPurify.sanitize(userInput);\nreturn <div dangerouslySetInnerHTML={{ __html: sanitized }} />;"},{"type":"normal","value":"<script> 태그가 제거되거나 이스케이프되어 안전하게 렌더링."},{"type":"normal","value":"React에서 XSS 방어를 강화하는 방법"},{"type":"normal","value":"React의 기본 방어에 더해 추가적인 보안 조치를 적용하면 더 안전한 애플리케이션을 만들 수 있습니다."},{"type":"Heading","headingType":"h4","value":"사용자 입력 검증"},{"type":"stringlist","value":"클라이언트와 서버에서 입력 데이터를 검증하여 예상치 못한 형식(예: 스크립트 태그, 특수 문자)을 차단.\n예: 이메일 입력은 이메일 형식이 맞는지 확인."},{"type":"Heading","headingType":"h4","value":"DOMPurify 사용"},{"type":"normal","value":"DOMPurify는 입력된 HTML 문자열을 분석하고, 안전하지 않은 요소를 제거하거나 변환하여 XSS 공격을 방지합니다."},{"type":"code","value":"<script>alert('XSS')</script>"},{"type":"stringlist","value":"\"\" (빈 문자열, <script> 태그 완전 제거).\n이유: <script>는 기본적으로 화이트리스트에 없음."},{"type":"code","value":"<img src=\"x\" onerror=\"alert('XSS')\">"},{"type":"stringlist","value":"출력: <img src=\"x\">\n이유: onerror 속성은 위험하므로 제거, src는 유지."},{"type":"code","value":"<a href=\"javascript:alert('XSS')\">Click</a>"},{"type":"stringlist","value":"출력: <a>Click</a> 또는 <a href=\"#\">Click</a> (구성에 따라 다름).\n이유: javascript: 프로토콜은 차단됨."},{"type":"code","value":"<div>Hello <b>World</b></div>"},{"type":"stringlist","value":"출력: <div>Hello <b>World</b></div>\n이유: <div>, <b>는 안전한 태그로 화이트리스트에 포함."},{"type":"code","value":"<style>body { background: url(javascript:alert('XSS')); }</style>"},{"type":"stringlist","value":"출력: <style>body { background: url(about:blank); }</style> 또는 \"\".\n이유: 위험한 CSS 표현식 제거."},{"type":"Heading","headingType":"h4","value":"Content Security Policy(CSP)"},{"type":"normal","value":"서버에서 CSP 헤더를 설정하여 허용된 스크립트만 실행되도록 제한."},{"type":"code","value":"Content-Security-Policy: script-src 'self' https://trusted.cdn.com;"},{"type":"normal","value":"React 앱에서는 인라인 스크립트를 최소화하고, nonce나 strict-dynamic을 활용."},{"type":"Heading","headingType":"h4","value":"안전한 API 사용"},{"type":"stringlist","value":"innerHTML 대신 textContent 또는 setAttribute 사용.\nReact의 기본 렌더링 방식을 따르고, 직접 DOM 조작을 피함."},{"type":"Heading","headingType":"h4","value":"HTTPS 사용"},{"type":"stringlist","value":"데이터 전송 시 HTTPS를 사용하여 데이터 탈취를 방지.\nReact 앱은 보통 HTTPS로 배포되므로, 서버 설정에서 확인."},{"type":"Heading","headingType":"h4","value":"서버 측 방어"},{"type":"normal","value":"React는 클라이언트 측 프레임워크이므로, 서버에서도 XSS 방어를 적용(예: 입력 검증, 출력 이스케이프)."}]},"nextPostTile":{"id":63,"title":"[TECH-QA] 원시값과 참조형","date":"2025-04-12 22:48:33","folder":"Javascript","tag":["JavaScript","TECH-QA"],"preview":"자바스크립트에서 원시값(Primitive Values)과 참조형(Reference Types)의 동작 방식, 그리고 이들의 불변성(Immutability)과 가변성(Mutability)에 대한 설명입니다.","post":[{"type":"normal","value":"자바스크립트에서 원시값(Primitive Values)과 참조형(Reference Types)의 동작 방식, 그리고 이들의 불변성(Immutability)과 가변성(Mutability)에 대해 설명 해 보겠습니다."},{"type":"Heading","headingType":"h2","value":"원시값 (Primitive Values)"},{"type":"stringlist","value":"<b>정의</b> : 원시값은 더 이상 쪼갤 수 없는 기본 데이터 타입으로, 자바스크립트에서는 undefined, null, boolean, number, bigint, string, symbol이 이에 해당합니다.\n<b>복제 방식</b> : 다른 변수에 원시값을 복사할 때, 해당 값이 그대로 복사되어 새로운 변수에 저장됩니다. 이때 메모리 주소 개념은 관여하지 않고, <b>단순히 값만 복사</b>됩니다.\n<b>불변성</b> : 원시값은 불변값입니다. 값을 변경하려고 하면, 기존 메모리 공간의 값을 수정하는 대신 새로운 메모리 공간에 새로운 값을 저장하고, 변수가 참조하던 메모리 주소를 변경합니다."},{"type":"code","value":"let a = 10; // a는 숫자 10을 저장\nlet b = a;  // b에 a의 값 10을 복사 (독립적인 메모리 공간)\n\nconsole.log(a); // 10\nconsole.log(b); // 10\n\nb = 20; // b에 새로운 값 20을 할당 (새로운 메모리 공간 사용)\nconsole.log(a); // 10 (a는 여전히 10을 참조)\nconsole.log(b); // 20"},{"type":"stringlist","value":"b = a를 실행하면, a의 값 10이 복사되어 b에 저장됩니다. 이때 <b>a와 b는 각각 독립적인 메모리 공간</b>을 가리킵니다.\nb = 20으로 값을 변경하면, b는 새로운 메모리 공간에 20을 저장하고 그 주소를 참조합니다. a는 영향을 받지 않습니다.\n원시값은 불변적이므로, a나 b의 값을 직접 수정하는 대신 새로운 값을 메모리에 할당합니다."},{"type":"Heading","headingType":"h2","value":"참조형 (Reference Types)"},{"type":"stringlist","value":"<b>정의</b> : 참조형은 <span class=\"point\">객체(Object)</span>, <span class=\"point\">배열(Array)</span>, <span class=\"point\">함수(Function)</span> 등으로, 여러 값을 하나의 단위로 묶은 데이터 타입입니다.\n<b>복제 방식</b> : 참조형은 값이 담긴 <b>메모리 주소를 복제</b>합니다. 즉, 변수는 실제 데이터(객체)가 저장된 메모리 주소를 가리키며, 복사 시 이 주소를 복사합니다. <span class=\"point\">따라서 복사된 변수는 원본 객체와 동일한 메모리 주소를 참조</span>합니다.\n<b>가변성</b> : 참조형은 가변값입니다. 객체가 저장된 메모리 공간은 수정 가능하며, 변수는 해당 객체를 직접 변경할 수 있습니다. 객체의 프로퍼티를 추가, 갱신, 삭제할 수 있습니다."},{"type":"code","value":"let obj1 = { name: \"Alice\", age: 25 }; // obj1은 객체의 메모리 주소를 참조\nlet obj2 = obj1; // obj2는 obj1과 동일한 메모리 주소를 참조\n\nconsole.log(obj1); // { name: \"Alice\", age: 25 }\nconsole.log(obj2); // { name: \"Alice\", age: 25 }\n\n// obj2를 통해 객체 수정\nobj2.age = 30;\nobj2.city = \"Seoul\"; // 동적으로 프로퍼티 추가\n\nconsole.log(obj1); // { name: \"Alice\", age: 30, city: \"Seoul\" }\nconsole.log(obj2); // { name: \"Alice\", age: 30, city: \"Seoul\" }\n\n// 프로퍼티 삭제\ndelete obj1.city;\n\nconsole.log(obj1); // { name: \"Alice\", age: 30 }\nconsole.log(obj2); // { name: \"Alice\", age: 30 }"},{"type":"stringlist","value":"obj2 = obj1은 obj1이 참조하는 객체의 메모리 주소를 obj2에 복사합니다. 따라서 obj1과 obj2는 동일한 객체를 가리킵니다.\nobj2.age = 30 또는 obj2.city = \"Seoul\"로 객체를 수정하면, 동일한 메모리 공간을 참조하는 obj1에도 변경 사항이 반영됩니다.\n참조형은 가변적이므로, 객체의 프로퍼티를 동적으로 추가(city), 갱신(age), 삭제(delete obj1.city)할 수 있습니다."},{"type":"Heading","headingType":"h2","value":"원시값 vs 참조형 비교"},{"type":"table","value":"","tables":{"header":[{"accessorKey":"feature","header":"특징"},{"accessorKey":"primitive","header":"원시값 (Primitive)"},{"accessorKey":"reference","header":"참조형 (Reference)"}],"contents":[{"feature":"데이터 타입","primitive":"number, string, boolean 등","reference":"object, array, function 등"},{"feature":"복제 방식","primitive":"값 자체 복사","reference":"메모리 주소 복사"},{"feature":"변경 가능성","primitive":"불변 (새로운 값으로 교체)","reference":"가변 (객체 내부 수정 가능)"},{"feature":"메모리 동작","primitive":"새로운 메모리 공간 생성","reference":"동일한 메모리 공간 공유"},{"feature":"예시","primitive":"let x = 5; x = 10;","reference":"let obj = {a: 1}; obj.a = 2;"}]}},{"type":"Heading","headingType":"h2","value":"참조형의 깊은 복사(Deep Copy)"},{"type":"normal","value":"참조형의 기본 복사는 얕은 복사(Shallow Copy)로, 동일한 객체를 참조하게 됩니다. 객체를 독립적으로 복사하려면 깊은 복사가 필요합니다."},{"type":"Heading","headingType":"h4","value":"얕은 복사 vs 깊은 복사"},{"type":"code","value":"// 얕은 복사\nlet original = { name: \"Bob\", info: { age: 40 } };\nlet shallowCopy = Object.assign({}, original);\n\nshallowCopy.name = \"Charlie\";\nshallowCopy.info.age = 50;\n\nconsole.log(original); // { name: \"Bob\", info: { age: 50 } } (info는 여전히 공유됨)\nconsole.log(shallowCopy); // { name: \"Charlie\", info: { age: 50 } }\n\n// 깊은 복사\nlet deepCopy = JSON.parse(JSON.stringify(original));\n\ndeepCopy.name = \"David\";\ndeepCopy.info.age = 60;\n\nconsole.log(original); // { name: \"Bob\", info: { age: 50 } } (변경되지 않음)\nconsole.log(deepCopy); // { name: \"David\", info: { age: 60 } }"},{"type":"stringlist","value":"얕은 복사(Object.assign)는 최상위 프로퍼티만 복사하고, 중첩 객체(info)는 여전히 원본과 공유됩니다.\n깊은 복사(JSON.parse(JSON.stringify()))는 객체 전체를 새로 생성하여 독립적인 복사본을 만듭니다."},{"type":"Heading","headingType":"h4","value":"원시값 활용"},{"type":"code","value":"function updateScore(score) {\n    score = score + 10; // 새로운 메모리 공간에 값을 저장\n    return score;\n}\n\nlet playerScore = 50;\nconsole.log(updateScore(playerScore)); // 60\nconsole.log(playerScore); // 50 (원본 값은 변경되지 않음)"},{"type":"normal","value":"원시값은 함수 내부에서 수정해도 원본에 영향을 주지 않습니다."},{"type":"Heading","headingType":"h4","value":"참조형 활용"},{"type":"code","value":"function updateProfile(profile) {\n    profile.age += 1; // 동일한 객체를 직접 수정\n    profile.city = \"Busan\"; // 동적 프로퍼티 추가\n}\n\nlet user = { name: \"Eve\", age: 28 };\nupdateProfile(user);\n\nconsole.log(user); // { name: \"Eve\", age: 29, city: \"Busan\" }"},{"type":"normal","value":"참조형은 함수 내부에서 수정하면 원본 객체가 변경됩니다. user 원본 객체가 { name: \"Eve\", age: 28 } 에서 { name: \"Eve\", age: 29, city: \"Busan\" } 으로 변경 됨"},{"type":"stringlist","value":"<b>원시값</b>: 값 자체를 복사, 불변, 재할당 시 새로운 메모리 공간 사용.\n<b>참조형</b>: 메모리 주소를 복사, 가변, 객체 내부를 직접 수정 가능 (프로퍼티 추가/갱신/삭제).\n원시값은 독립적이고 안전하지만 수정이 제한적이며, 참조형은 유연하지만 공유 메모리로 인해 주의가 필요합니다.\n깊은 복사를 통해 참조형의 독립적인 복사가 가능합니다."},{"type":"normal","value":"자바스크립트에서 깊은 복사(Deep Copy)를 하는 방법은 여러 가지가 있습니다. 상황에 따라 간단한 객체부터 복잡한 객체까지 처리할 수 있습니다. 아래에 대표적인 방법과 예제를 정리해 보겠습니다."},{"type":"normal","value":"구조적 복제 (Structured Clone)"},{"type":"normal","value":"structuredClone()은 브라우저 환경(Node.js 17+ 또는 최신 브라우저)에서 제공되는 깊은 복사를 위한 네이티브 메서드입니다. 이 방법은 JSON 방식보다 더 다양한 데이터 타입(예: Date, Map, Set 등)을 처리할 수 있습니다."},{"type":"code","value":"// 원본 객체\nlet original = {\n  name: \"Bob\",\n  info: { age: 50, date: new Date() },\n  hobbies: [\"reading\", \"gaming\"]\n};\n\n// 깊은 복사 (structuredClone 사용)\nlet deepCopy = structuredClone(original);\n\n// 복사본 수정\ndeepCopy.name = \"David\";\ndeepCopy.info.age = 60;\ndeepCopy.hobbies.push(\"coding\");\n\nconsole.log(original);\n// 출력: { name: \"Bob\", info: { age: 50, date: [Date] }, hobbies: [\"reading\", \"gaming\"] }\n\nconsole.log(deepCopy);\n// 출력: { name: \"David\", info: { age: 60, date: [Date] }, hobbies: [\"reading\", \"gaming\", \"coding\"] }"},{"type":"stringlist","value":"structuredClone()은 객체와 그 하위 구조를 완전히 독립적으로 복사합니다.\n원본 객체의 info.age나 hobbies 배열이 수정되지 않음을 확인할 수 있습니다.\nDate 객체도 별도의 인스턴스로 복사되며, JSON 방식과 달리 손실 없이 복사됩니다."},{"type":"Heading","headingType":"h4","value":"재귀 함수를 사용한 깊은 복사"},{"type":"normal","value":"직접 깊은 복사를 구현하는 방법으로, 객체와 배열을 재귀적으로 순회하며 복사합니다. 이 방법은 커스터마이징이 가능하고, 특정 데이터 타입을 추가로 처리할 수 있습니다."},{"type":"code","value":"// 깊은 복사 함수\nfunction deepCopy(obj) {\n  // 원시값이거나 null인 경우 그대로 반환\n  if (obj === null || typeof obj !== \"object\") {\n    return obj;\n  }\n\n  // 배열인 경우\n  if (Array.isArray(obj)) {\n    return obj.map(item => deepCopy(item));\n  }\n\n  // 객체인 경우\n  const copy = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      copy[key] = deepCopy(obj[key]);\n    }\n  }\n  return copy;\n}"},{"type":"code","value":"\n// 원본 객체\nlet original = {\n  name: \"Bob\",\n  info: { age: 50 },\n  hobbies: [\"reading\", \"gaming\"]\n};\n\n// 깊은 복사\nlet deepCopy = deepCopy(original);\n\n// 복사본 수정\ndeepCopy.name = \"David\";\ndeepCopy.info.age = 60;\ndeepCopy.hobbies.push(\"coding\");\n\nconsole.log(original);\n// 출력: { name: \"Bob\", info: { age: 50 }, hobbies: [\"reading\", \"gaming\"] }\n\nconsole.log(deepCopy);\n// 출력: { name: \"David\", info: { age: 60 }, hobbies: [\"reading\", \"gaming\", \"coding\"] }"},{"type":"stringlist","value":"deepCopy 함수는 재귀적으로 객체의 모든 프로퍼티를 복사합니다.\n배열과 객체를 구분하여 처리하며, 원시값은 그대로 반환합니다.\n이 방식은 JSON 방식의 한계를 극복하고, 함수나 undefined 같은 값도 커스터마이징하여 처리할 수 있습니다(필요 시 추가 로직 구현 가능)."},{"type":"Heading","headingType":"h4","value":"Lodash 라이브러리의 _.cloneDeep"},{"type":"normal","value":"실제 프로젝트에서는 Lodash 같은 라이브러리를 사용하는 경우가 많습니다. Lodash의 _.cloneDeep 메서드는 깊은 복사를 간편하게 수행하며, 다양한 데이터 타입을 안전하게 처리합니다."},{"type":"code","value":"// Lodash를 사용하기 위해 필요 (HTML에서는 CDN 또는 모듈로 임포트)\n// 예: <script src=\"https://cdn.jsdelivr.net/npm/lodash@4.17.21/lodash.min.js\"></script>\n\n// 원본 객체\nlet original = {\n  name: \"Bob\",\n  info: { age: 50 },\n  hobbies: [\"reading\", \"gaming\"]\n};\n\n// 깊은 복사 (Lodash 사용)\nlet deepCopy = _.cloneDeep(original);\n\n// 복사본 수정\ndeepCopy.name = \"David\";\ndeepCopy.info.age = 60;\ndeepCopy.hobbies.push(\"coding\");\n\nconsole.log(original);\n// 출력: { name: \"Bob\", info: { age: 50 }, hobbies: [\"reading\", \"gaming\"] }\n\nconsole.log(deepCopy);\n// 출력: { name: \"David\", info: { age: 60 }, hobbies: [\"reading\", \"gaming\", \"coding\"] }"},{"type":"stringlist","value":"_.cloneDeep은 Lodash 라이브러리의 깊은 복사 메서드로, 복잡한 객체 구조를 안전하게 복사합니다.\nJSON 방식보다 다양한 데이터 타입(예: 함수, RegExp, Map)을 지원하며, 성능도 최적화되어 있습니다.\n실제 프로젝트에서 신뢰할 수 있는 방법 중 하나입니다."},{"type":"table","value":"","tables":{"header":[{"accessorKey":"method","header":"방법"},{"accessorKey":"advantage","header":"장점"},{"accessorKey":"disadvantage","header":"단점"}],"contents":[{"method":"JSON.parse(JSON.stringify())","advantage":"간단하고 별도 라이브러리 불필요","disadvantage":"undefined, 함수, Date 등 일부 데이터 타입 손실 가능"},{"method":"structuredClone()","advantage":"네이티브 API, 다양한 데이터 타입 지원, 손실 없음","disadvantage":"브라우저/Node.js 버전 의존성 (구형 환경에서 동작하지 않을 수 있음)"},{"method":"재귀 함수 (deepCopy)","advantage":"커스터마이징 가능, 모든 데이터 타입 처리 가능","disadvantage":"직접 구현해야 하며, 복잡한 객체에서 성능 고려 필요"},{"method":"Lodash _.cloneDeep","advantage":"신뢰성 높음, 다양한 데이터 타입 지원, 테스트 완료된 라이브러리","disadvantage":"외부 라이브러리 의존성 추가 필요"}]}},{"type":"Heading","headingType":"h4","value":"복잡한 객체(중첩 객체, 배열, Date, Map 포함)를 사용한 예제"},{"type":"code","value":"$5"},{"type":"stringlist","value":"중첩 객체(address), 배열 내 객체(hobbies[1]), Date, Map 등 다양한 데이터 타입이 포함된 복잡한 객체를 복사했습니다.\nstructuredClone은 모든 수준에서 독립적인 복사본을 생성하여 원본이 수정되지 않음을 보여줍니다."}]},"segment":"posts"}],["$","div",null,{"className":"footer_footer_container__MsSvO","children":["$","footer",null,{"className":"footer_footer__AwYty","children":[["$","p",null,{"className":"footer_copylight___J5l0","children":["© 2024 ","베짱이가 되고싶은 개미。"," Some rights reserved."]}],["$","p",null,{"className":"footer_theme__bwXbg","children":"portfolio v1.0.0-alpha.3"}]]}]}]],null]]},["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","(layoutCase)","children","tags","children","$7","children","$8","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/19d2a4a42355ad75.css","precedence":"next","crossOrigin":""}]]}]]},["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","(layoutCase)","children","tags","children","$7","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","(layoutCase)","children","tags","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]],"search":["__DEFAULT__",{},["$a","$Lc",null]]},[null,["$","$Ld",null,{"children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","(layoutCase)","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}],"search":["$","$L6",null,{"parallelRouterKey":"search","segmentPath":["children","(layoutCase)","search"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$e","styles":null}],"params":{}}],null]]},[null,["$","html",null,{"lang":"en","className":"","children":[["$","head",null,{"children":[["$","link",null,{"rel":"stylesheet","href":"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css","as":"style"}],["$","link",null,{"rel":"preconnect","href":"https://fonts.googleapis.com"}],["$","link",null,{"rel":"preconnect","href":"https://fonts.gstatic.com"}],["$","link",null,{"rel":"stylesheet","href":"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR&display=swap","as":"style"}]]}],["$","body",null,{"children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":"$f","children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":"$10","children":"404"}],["$","div",null,{"style":"$11","children":["$","h2",null,{"style":"$12","children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/0c496b0e03d530ba.css","precedence":"next","crossOrigin":""}]]}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/5048045ff4a95083.css","precedence":"next","crossOrigin":""}]],"$L13"]]]]
c:E{"digest":"NEXT_NOT_FOUND"}
13:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"be come 💡"}],["$","meta","3",{"name":"description","content":"App for an Ant Who Wants to Become a Bejjangyi"}]]
1:null
b:null
