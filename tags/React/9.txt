2:I[5250,["250","static/chunks/250-8b90be581650ff9d.js","216","static/chunks/app/(layoutCase)/tags/%5Btagname%5D/%5Bpostid%5D/page-51a41ef66e745a97.js"],""]
3:I[777,["250","static/chunks/250-8b90be581650ff9d.js","216","static/chunks/app/(layoutCase)/tags/%5Btagname%5D/%5Bpostid%5D/page-51a41ef66e745a97.js"],""]
4:I[5613,[],""]
7:I[1778,[],""]
a:I[8144,["250","static/chunks/250-8b90be581650ff9d.js","304","static/chunks/304-f6bea3ededee4fbe.js","730","static/chunks/730-7ade87634bab4187.js","566","static/chunks/566-b141861ca793acbd.js","35","static/chunks/35-e2e6977abccdaf39.js","406","static/chunks/406-510aa82f57e1650d.js","553","static/chunks/553-fac5a7c0d4eb7378.js","464","static/chunks/app/(layoutCase)/layout-70be184e32f7e444.js"],""]
5:["tagname","React","d"]
6:["postid","9","d"]
8:"$L9"
b:[]
c:{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"}
d:{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"}
e:{"display":"inline-block"}
f:{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0}
0:["ssOoWXMkhPmLSCDm6crXF",[[["",{"children":["(layoutCase)",{"children":["tags",{"children":[["tagname","React","d"],{"children":[["postid","9","d"],{"children":["__PAGE__?{\"tagname\":\"React\",\"postid\":\"9\"}",{}]}]}]}],"modal":["__DEFAULT__",{}]}]},"$undefined","$undefined",true],["",{"children":["(layoutCase)",{"children":["tags",{"children":[["tagname","React","d"],{"children":[["postid","9","d"],{"children":["__PAGE__",{},["$L1",[["$","article",null,{"className":"$undefined","children":["$","header",null,{"children":["$","h1",null,{"className":"postDetail_h1__36D1I","children":"함수선언식 VS 함수표현식의 호이스팅(Hoisting)"}]}]}],["$","div",null,{"className":"postDetail_post_meta__zCdVW","children":[["$","span",null,{"children":["Posted",["$","time",null,{"className":"postDetail_time__99zYg","children":" Aug 8, 2019"}]]}],["$","span",null,{"className":"postDetail_update__21dkl","children":["Updated",["$","time",null,{"className":"postDetail_time__99zYg","children":" Sep 23, 2023"}]]}]]}],["$","div",null,{"children":["$","span",null,{"className":"postDetail_post_meta__zCdVW","children":["By"," ",["$","em",null,{"children":["$","$L2",null,{"href":"https://github.com/nam-yeun-hwa","className":"postDetail_author__jc_NJ","children":"Carys Chung"}]}]]}]}],[["$","div","0",{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"호이스팅(Hoisting)은 JavaScript에서 변수와 함수 선언이 최상단으로 끌어올려지는 현상을 말합니다. 하지만 함수 선언식과 함수 표현식은 다르게 동작하므로 주의가 필요합니다."}}],[false,false,false,["$","h4",null,{"className":"postDetail_h4__Af1O8","children":["📝 ","함수 선언식"]}]],["$","div","2",{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"함수 선언식은 전체가 호이스팅되기 때문에 함수를 선언하기 전에 호출해도 정상적으로 동작합니다."}}],["$","div",null,{"className":"LanguageConsole_console_container__AqYGR","children":[["$","div",null,{"className":"LanguageConsole_console_header__inJS4","children":[["$","span",null,{"className":"LanguageConsole_title__QSrQq","data-label-text":"Javascript","children":["$","i",null,{"className":"fas fa-code fa-fw small LanguageConsole_ico_title__oetQW"}]}],["$","button",null,{"className":"LanguageConsole_copy__l7rff","children":["$","i",null,{"className":"far fa-clipboard LanguageConsole_ico_clipboard__tvVJz"}]}]]}],["$","div",null,{"className":"LanguageConsole_console_content__O4Cw8","children":["$","pre",null,{"className":"LanguageConsole_console_code__9O_nt","dangerouslySetInnerHTML":{"__html":"console.log(zero); // undefined\nsayWow(); // 'wow'\n\nfunction sayWow() {\n  console.log('wow');\n}\n\nvar zero = 'zero';\n        "}}]}]]}],["$","div","4",{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"함수 선언식인 sayWow는 전체가 끌어올려져서 호출 전에도 함수가 정의되어 있습니다. 아래 sayWow함수가 상단으로 끌여 올려진것과 같은 의미가 됩니다."}}],["$","div",null,{"className":"LanguageConsole_console_container__AqYGR","children":[["$","div",null,{"className":"LanguageConsole_console_header__inJS4","children":[["$","span",null,{"className":"LanguageConsole_title__QSrQq","data-label-text":"Javascript","children":["$","i",null,{"className":"fas fa-code fa-fw small LanguageConsole_ico_title__oetQW"}]}],["$","button",null,{"className":"LanguageConsole_copy__l7rff","children":["$","i",null,{"className":"far fa-clipboard LanguageConsole_ico_clipboard__tvVJz"}]}]]}],["$","div",null,{"className":"LanguageConsole_console_content__O4Cw8","children":["$","pre",null,{"className":"LanguageConsole_console_code__9O_nt","dangerouslySetInnerHTML":{"__html":"function sayWow() {\n  console.log('wow');\n}\n\nvar zero;\nconsole.log(zero);\nsayWow();\nzero = 'zero';"}}]}]]}],[false,false,false,["$","h4",null,{"className":"postDetail_h4__Af1O8","children":["📝 ","함수 표현식"]}]],["$","div","7",{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"함수 표현식은 변수만 끌어올려지고 함수의 할당은 그대로 유지되기 때문에 호출하기 전에 변수에 함수를 할당해야 합니다."}}],["$","div",null,{"className":"LanguageConsole_console_container__AqYGR","children":[["$","div",null,{"className":"LanguageConsole_console_header__inJS4","children":[["$","span",null,{"className":"LanguageConsole_title__QSrQq","data-label-text":"Javascript","children":["$","i",null,{"className":"fas fa-code fa-fw small LanguageConsole_ico_title__oetQW"}]}],["$","button",null,{"className":"LanguageConsole_copy__l7rff","children":["$","i",null,{"className":"far fa-clipboard LanguageConsole_ico_clipboard__tvVJz"}]}]]}],["$","div",null,{"className":"LanguageConsole_console_content__O4Cw8","children":["$","pre",null,{"className":"LanguageConsole_console_code__9O_nt","dangerouslySetInnerHTML":{"__html":"\nsayWow(); // 에러\nsayYeah(); // 에러\n\nvar sayYeah = function() {\n  console.log('yeah');\n}\n\nfunction sayWow() {\n  console.log('wow');\n}\n"}}]}]]}],["$","div","9",{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"함수 표현식인 sayYeah는 변수 선언만 호이스팅되어 sayYeah()를 호출하기 전에 함수를 할당해주지 않으면 에러가 발생합니다. 아래는 sayYeah가 호이스팅되어 상단으로 올려졌으나 값이 할당되지 않아 호출하면 에러를 발생시킵니다."}}],["$","div",null,{"className":"LanguageConsole_console_container__AqYGR","children":[["$","div",null,{"className":"LanguageConsole_console_header__inJS4","children":[["$","span",null,{"className":"LanguageConsole_title__QSrQq","data-label-text":"Javascript","children":["$","i",null,{"className":"fas fa-code fa-fw small LanguageConsole_ico_title__oetQW"}]}],["$","button",null,{"className":"LanguageConsole_copy__l7rff","children":["$","i",null,{"className":"far fa-clipboard LanguageConsole_ico_clipboard__tvVJz"}]}]]}],["$","div",null,{"className":"LanguageConsole_console_content__O4Cw8","children":["$","pre",null,{"className":"LanguageConsole_console_code__9O_nt","dangerouslySetInnerHTML":{"__html":"var sayYeah;\nsayYeah(); // 에러\n\nsayYeah = function() {\n  console.log('yeah');\n}\n\nfunction sayWow() {\n  console.log('wow');\n}\n        "}}]}]]}],["$","div","11",{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"함수 표현식은 변수에 함수를 할당하는 형태이므로 변수 호이스팅은 발생하지만 함수의 할당은 유지되지 않아 함수를 먼저 호출할 수 없습니다. "}}],[false,false,["$","blockquote",null,{"className":"Prompts_prompt_container__In47e Prompts_prompt__caN6p Prompts_prompt_warning__ZYPQt","children":["$","p",null,{"className":"Prompts_detail__nD6Io","dangerouslySetInnerHTML":{"__html":"함수 표현식을 사용할 때는 변수에 함수가 할당된 이후에 호출하도록 유의해야 합니다."}}]}],false],["$","div","13",{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"참고하면 좋은 링크</br>\n          https://www.zerocho.com/category/JavaScript/post/5741d96d094da4986bc950a0"}}]],["$","$L3",null,{"postid":9,"prePostTitle":{"id":8,"title":"클로저 (Closure)","date":"2023-02-19","folder":"Javascript","tag":["Javascript"],"preview":"비공개 변수는 클로저 함수 내부에 생성한 변수도 아니고, 매개변수도 아닌 변수를 의미합니다. 클로저를 말할 때는 스코프/컨텍스트/비공개 변수와 함수의 관계를 항상 같이 말해주어야 합니다. closure 함수 안에 console.log(name)이 있는데요.","post":[{"type":"normal","value":"\n        클로저는 자바스크립트에서 매우 강력하고 중요한 개념 중 하나입니다. 클로저는 외부 변수(외부 렉시컬 환경에 있는 변수)를 기억하고 접근할 수 있는 함수입니다. 이를테면, 어떤 함수가 다른 함수 내에서 정의되고 그 함수가 외부 변수를 참조하면, 클로저가 형성됩니다.</br></br>\n        클로저는 함수가 선언될 때의 렉시컬 스코프(Lexical Scope)를 기억하여, 함수가 다른 스코프에서 호출되더라도 해당 스코프의 변수에 접근할 수 있게 하는 기능을 말합니다."},{"type":"code","value":"var makeClosure = function() {\n  var name = 'zero';\n  return function() {\n    console.log(name);\n  };\n};\n\nvar closure = makeClosure();\nclosure(); // 'zero'\n        "},{"type":"normal","value":"makeClosure 함수가 실행될 때 name 변수가 생성되고, 반환된 내부 함수가 클로저 역할을 합니다. 클로저인 내부 함수는 외부 함수의 스코프에 접근할 수 있기 때문에 name 변수에 접근하여 값을 출력할 수 있습니다."},{"type":"h2","value":"비공개 변수"},{"type":"normal","value":"비공개 변수는 클로저를 사용하여 함수 내부에서만 접근할 수 있는 변수를 의미합니다. 이 변수는 함수 내부에서 선언되거나 함수의 매개변수로 전달되지 않으면서도 클로저를 통해 접근 가능합니다."},{"type":"code","value":"function makeCounter() {\n  let count = 0;\n\n  // 내부 함수(클로저)를 반환\n  return function() {\n    return count++;\n  };\n}\n\n// makeCounter 함수 호출로 클로저 생성\nlet counter = makeCounter();\n\n// 클로저를 통해 외부 변수(count)에 접근하고 값을 변경\nconsole.log(counter()); // 0\nconsole.log(counter()); // 1\nconsole.log(counter()); // 2\n        \n        "},{"type":"stringlist","value":"makeCounter 함수가 호출되면서 새로운 렉시컬 환경이 만들어지고, count 변수가 그 환경에 저장됩니다.\n        makeCounter 함수 내부에서 정의된 익명 함수(클로저)가 반환되면서 <b>외부 변수 count에 대한 참조를 유지</b>합니다.\n        반환된 익명 함수가 counter 변수에 할당되면서 클로저가 형성됩니다.\n        counter를 호출할 때마다 클로저는 외부 변수 count에 접근하여 값을 변경하고 반환합니다."},{"type":"normal","value":"클로저는 함수가 생성될 때의 렉시컬 스코프(어휘적 스코프)에 있는 변수에 대한 참조를 기억합니다. 이를 통해 함수가 나중에 호출될 때에도 해당 변수에 접근할 수 있습니다. 클로저는 함수형 프로그래밍, 비동기 작업, 정보 은닉 등 다양한 상황에서 사용되며, 자바스크립트에서 고유하고 강력한 특징 중 하나입니다."},{"type":"h2","value":"이벤트 리스너와 클로저"},{"type":"normal","value":"이벤트 리스너와 클로저 관련 문제에 대한 설명에서, 클로저를 사용하여 각 이벤트 핸들러가 반복문의 각 단계에서 고유한 인덱스를 기억하도록 수정한 예제입니다."},{"type":"code","value":"for (var i = 0; i < 5; i++) {\n  (function(j) {\n    $('#target' + j).on('click', function() {\n      alert(j);\n    });\n  })(i);\n}"},{"type":"normal","value":"이렇게 하면 클로저를 통해 각 이벤트 핸들러가 자신만의 고유한 j 값을 기억하게 되어, 클릭할 때 각 버튼에 해당하는 인덱스가 올바르게 출력됩니다. 클로저를 사용하여 변수의 값을 고정시켜 이벤트 핸들러가 정상적으로 작동하도록 만들었습니다."},{"type":"normal","value":"같이 참고하면 좋은 링크 </br>\n        http://localhost:3000 </br> \n        https://www.zerocho.com/category/JavaScript/post/5741d96d094da4986bc950a0"}]},"nextPostTile":{"id":10,"title":"컨텍스트와 실행 과정","date":"2023-02-18","folder":"Javascript","preview":"호이스팅(Hoisting)은 JavaScript에서 변수와 함수 선언이 최상단으로 끌어올려지는 현상을 말합니다. 하지만 함수 선언식과 함수 표현식은 다르게 동작하므로 주의가 필요합니다.\n    ","tag":["Javascript"],"post":[{"type":"code","value":"var name = 'zero'; \n\nfunction wow(word) { \n  console.log(word + ' ' + name); \n}\n\nfunction say () { \n  var name = 'nero'; \n  console.log(name); \n  wow('hello'); \n}\nsay();"},{"type":"normal","value":"일단 처음 브라우저가 스크립트를 로딩해서 실행하기 시작하는 순간 모든 것을 포함하는 전역 컨텍스트가 생깁니다. 모든 것을 관리하는 환경입니다. 페이지가 종료될 때까지 유지됩니다."},{"type":"h4","value":"1. 전역 컨텍스트(Global Context) 생성"},{"type":"normal","value":"전역 컨텍스트를 객체 형식으로 표현해보겠습니다."},{"type":"code","value":"변수객체: { name: 'zero', wow: Function, say: Function }\nscopeChain: ['전역 변수객체']\nthis: window"},{"type":"normal","value":"전역 컨텍스트는 arguments(함수의 인자)가 없으며 variable은 해당 스코프의 변수들입니다. </br> name, wow, say가 있습니다.</br></br>\n        자신과 상위 스코프들의 변수객체인 scope chain생성 됩니다.</br>스코프 체인은 자기 자신인 전역 변수객체입니다.</br></br>\n        this는 따로 설정되어 있지 않으면 window입니다. </br>this를 바꾸는 방법이 바로 new를 호출하는 겁니다. </br>또는 함수에 다른 this 값을 bind할 수도 있습니다.</br></br>\n        일반 함수의 this가 왜 window인지 아시겠죠? </br>원래 기본적으로 window고 new나 bind같은 상황에서 this가 바뀌는 겁니다.\n        "},{"type":"h4","value":"2. say 함수 호출 시 컨텍스트 생성"},{"type":"code","value":"변수객체: { name: 'nero' }\nscopeChain: ['say 변수객체', '전역 변수객체']\nthis: window"},{"type":"normal","value":"맨위 코드에서 say();호출 하는 순간 새로운 컨텍스트인 say함수 컨텍스트가 생깁니다. </br> 아까 전역 컨텍스트는 그대로 있습니다."},{"type":"h4","value":"say함수 실행"},{"type":"code","value":"var name = 'nero';\nconsole.log(name); (결과: 'nero')\nwow('hello');;\n        "},{"type":"normal","value":"say를 호출한 후 차례대로 say함수 내의 내용들이 실행하는데요.</br>\n        variable의 name에 nero를 대입해주고 나서 console.log(name);이 있습니다.</br></br>\n        \n        name 변수는 say 컨텍스트 안에서 찾으면 됩니다.</br>\n        variable에 name이 nero라고 되어 있네요. name이 콘솔에 찍힙니다.</br></br>\n        \n        그 다음엔 wow('hello')가 있습니다. </br>\n        say 컨텍스트 안에서 wow 변수를 찾을 수 없습니다.</br>\n        찾을 수 없다면 scope chain을 따라 올라가 상위 변수객체에서 찾습니다. 그래서 전역 변수객체에서 찾습니다. </br>전역 변수객체의 variable에 wow라는 함수가 있네요. 이걸 호출합니다."},{"type":"h4","value":"3. wow 함수 호출 시 컨텍스트 생성"},{"type":"code","value":"변수객체: { arguments: { word: 'hello' } }\nscopeChain: ['wow 변수객체', '전역 변수객체']\nthis: window"},{"type":"normal","value":"여기서 중요한 게 lexical scoping에 따라 wow 함수의 스코프 체인은 선언 시에 이미 정해져 있습니다. </br>\n        따라서 say 스코프는 wow 컨텍스트의 scope chain이 아닙니다. variable은 없고, this는 window입니다.</br></br>\n        이제 컨텍스트가 생긴 후 함수가 실행 됩니다. (say 함수는 아직 종료되지 않았습니다.)</br>\n       "},{"type":"h4","value":"wow 함수 호출 실행"},{"type":"code","value":"console.log(word + ' ' + name); \n(word: 'hello', name: 'zero')\n(전역 컨텍스트의 name 변수를 참조)"},{"type":"normal","value":" wow 함수 안에서 console.log(word + ' ' + name);이 있는데요.</br>\n        word랑 name 변수는 wow 컨텍스트에서 찾으시면 됩니다.</br></br>\n\n        word는 arguments에서 찾을 수 있고, name은 wow 변수객체에는 값이 없으니, scope chain을 따라 전역 스코프에서 찾을수 있습니다.</br></br>\n        전역 변수객체로 올라가니 variable에 name이 zero라고 되어 있네요. </br> 그래서 hello zero가 되는 겁니다. hello nero가 아니라요.</br> wow 컨텍스트에 따르면 wow 함수는 애초에 say 컨텍스트와 일절 관련이 없었던 겁니다.</br></br>\n\n        이제 wow 함수 종료 후 wow 컨텍스트가 사라지고, say 함수의 실행이 마무리됩니다. 따라서 say 컨텍스트도 사라지고, </br>마지막에 전역 컨텍스트도 사라집니다. 함수 실행, 변수 선언 등 모든 게 다 논리적입니다. </br></br>그래서 컨텍스트 개념을 이해하면 자바스크립트의 모든 문제들을 풀 수 있습니다. 정리하자면 "},{"type":"stringlist","value":"전역 컨텍스트에 전역 변수가 선언되고, 함수 wow와 say가 변수객체에 할당됩니다.\n        say 함수가 호출되면 say 함수의 컨텍스트가 생성되고, 그 내부에서 name 변수가 'nero'로 초기화됩니다.\n        wow 함수가 say 함수 내에서 호출되면, wow 함수의 컨텍스트가 생성되고, 내부에서 word와 name 변수를 참조합니다.\n        wow 함수 내에서 name 변수는 전역 컨텍스트의 name 변수를 참조하여 'hello zero'를 출력합니다."},{"type":"normal","value":"참고 https://www.zerocho.com/category/JavaScript/post/5741d96d094da4986bc950a0"}]},"segment":"posts"}],["$","div",null,{"className":"footer_footer_container__MsSvO","children":["$","footer",null,{"className":"footer_footer__AwYty","children":[["$","p",null,{"className":"footer_copylight___J5l0","children":"© 2024 베짱이가 되고 싶은 개미。 Some rights reserved."}],["$","p",null,{"className":"footer_theme__bwXbg","children":"portfolio v1.0.0-alpha.0"}]]}]}]],null]]},["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","(layoutCase)","children","tags","children","$5","children","$6","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/7169c90687fbb3ce.css","precedence":"next","crossOrigin":""}]]}]]},["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","(layoutCase)","children","tags","children","$5","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","(layoutCase)","children","tags","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]],"modal":["__DEFAULT__",{},["$8",null,null]]},[null,["$","$La",null,{"children":["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","(layoutCase)","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}],"modal":["$","$L4",null,{"parallelRouterKey":"modal","segmentPath":["children","(layoutCase)","modal"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$b","styles":null}],"params":{}}],null]]},[null,["$","html",null,{"lang":"en","children":[["$","head",null,{"children":["$","link",null,{"rel":"stylesheet","href":"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css","as":"style"}]}],["$","title",null,{"children":"Become a Bejjangyi"}],["$","meta",null,{"name":"description","content":"App for an Ant Who Wants to Become a Bejjangyi"}],["$","body",null,{"children":["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":"$c","children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":"$d","children":"404"}],["$","div",null,{"style":"$e","children":["$","h2",null,{"style":"$f","children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/7339c07af4f65b9c.css","precedence":"next","crossOrigin":""}]]}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/49964d369cf2e029.css","precedence":"next","crossOrigin":""}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/ce6a7f582a819c93.css","precedence":"next","crossOrigin":""}]],"$L10"]]]]
10:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Create Next App"}],["$","meta","3",{"name":"description","content":"Generated by create next app"}],["$","meta","4",{"name":"next-size-adjust"}]]
1:null
9:null
