2:I[5250,["250","static/chunks/250-8b90be581650ff9d.js","399","static/chunks/399-caf055eb211349e2.js","216","static/chunks/app/(layoutCase)/tags/%5Btagname%5D/%5Bpostid%5D/page-15f077be11ad40e6.js"],""]
3:I[8843,["250","static/chunks/250-8b90be581650ff9d.js","399","static/chunks/399-caf055eb211349e2.js","216","static/chunks/app/(layoutCase)/tags/%5Btagname%5D/%5Bpostid%5D/page-15f077be11ad40e6.js"],""]
4:I[777,["250","static/chunks/250-8b90be581650ff9d.js","399","static/chunks/399-caf055eb211349e2.js","216","static/chunks/app/(layoutCase)/tags/%5Btagname%5D/%5Bpostid%5D/page-15f077be11ad40e6.js"],""]
5:I[5613,[],""]
8:I[1778,[],""]
c:I[3866,["250","static/chunks/250-8b90be581650ff9d.js","399","static/chunks/399-caf055eb211349e2.js","46","static/chunks/46-f5c36f830a2ce4c4.js","730","static/chunks/730-f56ebe909f1c8bdb.js","35","static/chunks/35-d3c965c641e9fdb1.js","464","static/chunks/app/(layoutCase)/layout-8ff98cce509a96df.js"],""]
6:["tagname","%EB%A6%AC%EC%95%A1%ED%8A%B8","d"]
7:["postid","53","d"]
9:"$La"
d:[]
e:{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"}
f:{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"}
10:{"display":"inline-block"}
11:{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0}
0:["mcrAG8A3F4fdWxNxH-gkB",[[["",{"children":["(layoutCase)",{"children":["tags",{"children":[["tagname","%EB%A6%AC%EC%95%A1%ED%8A%B8","d"],{"children":[["postid","53","d"],{"children":["__PAGE__?{\"tagname\":\"리액트\",\"postid\":\"53\"}",{}]}]}]}],"search":["__DEFAULT__",{}]}]},"$undefined","$undefined",true],["",{"children":["(layoutCase)",{"children":["tags",{"children":[["tagname","%EB%A6%AC%EC%95%A1%ED%8A%B8","d"],{"children":[["postid","53","d"],{"children":["__PAGE__",{},["$L1",[[["$","article",null,{"className":"$undefined","children":["$","header",null,{"children":["$","h1",null,{"className":"postUserInfo_h1__uhAqy","children":"[TECH-QA] 자바스크립트에서 this와 명시적 바인딩 (call, apply, bind)"}]}]}],["$","div",null,{"className":"postUserInfo_post_meta__ABvuC","children":[["$","span",null,{"children":["Posted"," ",["$","time",null,{"className":"postUserInfo_time__2exyR","children":["3 months"," "]}]]}],["$","span",null,{"className":"postUserInfo_update__f345P","children":["Updated"," ",["$","time",null,{"className":"postUserInfo_time__2exyR","children":"3 months"}]]}]]}],["$","div",null,{"children":["$","span",null,{"className":"postUserInfo_post_meta__ABvuC","children":["By"," ",["$","em",null,{"children":["$","$L2",null,{"href":"https://nam-yeun-hwa.github.io/","className":"postUserInfo_author__fVGYM","children":"베짱이가 되고싶은 개미。"}]}]]}]}]],[["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"자바스크립트에서 this의 값은 함수가 호출될 때 결정되며, 호출 방식에 따라 다르게 작동합니다. 아래에서 주요 경우와 예제를 통해 설명하겠습니다."}}],[false,false,["$","h3",null,{"className":"heading_h3__UisKt","style":{"fontWeight":"NORMAL"},"children":"전역 컨텍스트에서의 this"}],false],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"함수가 전역 스코프에서 호출될 때, this는 전역 객체를 가리킵니다. 브라우저에서는 window, Node.js에서는 global입니다."}}],["$","$L3",null,{"code":"console.log(this); // 브라우저에서 실행 시: Window 객체\n\nfunction sayHello() {\n  console.log(this);\n}\nsayHello(); // Window 객체 (전역 호출)","children":"$undefined"}],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"\"use strict\" 모드에서는 전역 호출 시 this가 undefined로 설정됩니다."}}],["$","$L3",null,{"code":"\"use strict\";\n\nfunction sayThis() {\n  console.log(this);\n}\n\nsayThis(); // undefined","children":"$undefined"}],[false,false,["$","h3",null,{"className":"heading_h3__UisKt","style":{"fontWeight":"NORMAL"},"children":"객체 메서드에서의 this"}],false],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"호출되는 함수가 객체의 메서드일때, this는 해당 객체를 가리킵니다."}}],["$","$L3",null,{"code":"const person = {\n  name: \"Alice\",\n  greet: function() {\n    console.log(this.name);\n  }\n};\n\nperson.greet(); // \"Alice\" (this는 person 객체를 가리킴)","children":"$undefined"}],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"하지만 함수를 객체에서 분리해 호출하면 this가 객체를 잃어버립니다."}}],["$","$L3",null,{"code":"const person = {\n  name: \"Hannah\",\n  sayName: function() {\n    console.log(this.name);\n  }\n};\n\nconst func = person.sayName;\nfunc(); // undefined (this는 전역 객체 Window를 가리킴)","children":"$undefined"}],[false,false,["$","h3",null,{"className":"heading_h3__UisKt","style":{"fontWeight":"NORMAL"},"children":"내부 함수에서의 this 문제"}],false],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"일반 함수 안에 또 다른 일반 함수가 있을 경우, 내부 함수의 this는 외부 함수의 this를 자동으로 상속하지 않습니다."}}],["$","$L3",null,{"code":"const obj = {\n  name: \"Kate\",\n  outer: function() {\n    console.log(this.name); //Kate\n    function inner() {\n      console.log(this.name); //undefined (this는 Window)\n    }\n    inner();\n  }\n};\n\nobj.outer();\n// 출력:\n// Outer this: Kate\n// Inner this: undefined (this는 Window)","children":"$undefined"}],[false,false,false,["$","h4",null,{"className":"heading_h4__ZTbA0","style":{"fontWeight":"NORMAL"},"children":["📝 ","해결방법"]}]],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"객체 메서드에서의 this를 변수에 저장하여 사용하는 방법"}}],["$","$L3",null,{"code":"const obj = {\n  name: \"Kate\",\n  outer: function() {\n    const self = this;\n    function inner() {\n      console.log(self.name); // Inner this: Kate\n    }\n    inner();\n  }\n};\n\nobj.outer(); // Inner this: Kate","children":"$undefined"}],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"객체 메서드에서의 this를 사용할수 있는 bind() 사용법"}}],["$","$L3",null,{"code":"const obj = {\n  name: \"Kate\",\n  outer: function() {\n    const inner = function() {\n      console.log(this.name);\n    }.bind(this);\n    inner();\n  }\n};\n\nobj.outer(); // Inner this: Kate","children":"$undefined"}],[false,false,["$","h3",null,{"className":"heading_h3__UisKt","style":{"fontWeight":"NORMAL"},"children":"생성자 함수에서의 this"}],false],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"new 키워드로 생성자 함수를 호출하면, this는 새로 생성된 객체를 가리킵니다."}}],["$","$L3",null,{"code":"function Car(model) {\n  this.model = model;\n}\n\nconst myCar = new Car(\"Tesla\");\n\nconsole.log(myCar.model); // \"Tesla\"","children":"$undefined"}],[false,false,["$","h3",null,{"className":"heading_h3__UisKt","style":{"fontWeight":"NORMAL"},"children":"명시적 바인딩 (call, apply, bind)"}],false],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"call, apply, bind를 사용하면 this를 명시적으로 설정할 수 있습니다."}}],[false,false,false,["$","h4",null,{"className":"heading_h4__ZTbA0","style":{"fontWeight":"NORMAL"},"children":["📝 ","call 예제"]}]],["$","$L3",null,{"code":"function introduce(age) {\n  console.log(this.name, age);\n}\n\nconst user = { name: \"Bob\" };\n\nintroduce.call(user, 25); // \"Bob, 25\"","children":"$undefined"}],[false,false,false,["$","h4",null,{"className":"heading_h4__ZTbA0","style":{"fontWeight":"NORMAL"},"children":["📝 ","apply 예제"]}]],["$","$L3",null,{"code":"function introduce(age) {\n  console.log(this.name, age);\n}\n\nconst user = { name: \"Bob\" };\n\nintroduce.apply(user, [30]); // \"Bob 30\"","children":"$undefined"}],[["$","blockquote",null,{"className":"Prompts_prompt_container__In47e Prompts_prompt__caN6p Prompts_prompt_tip__CZ2Ex","children":["$","p",null,{"className":"Prompts_detail__nD6Io","dangerouslySetInnerHTML":{"__html":"호출 시점에 <b>this를 동적</b>으로 결정해야 하는 상황에서는 <b>call</b>이나 <b>apply</b>가 매우 유용합니다."}}]}],false,false,false],[false,false,false,["$","h4",null,{"className":"heading_h4__ZTbA0","style":{"fontWeight":"NORMAL"},"children":["📝 ","bind 예제"]}]],["$","$L3",null,{"code":"function introduce(age) {\n  console.log(this.name, age);\n}\n\nconst user = { name: \"Bob\" };\n\nconst boundIntroduce = introduce.bind(user);\n\nboundIntroduce(35); // \"Bob 35\"","children":"$undefined"}],[false,false,false,["$","h4",null,{"className":"heading_h4__ZTbA0","style":{"fontWeight":"NORMAL"},"children":["📝 ","화살표 함수에서의 this(가장 간단한 해결책)"]}]],["$","$L3",null,{"code":"const obj = {\n  name: \"Charlie\",\n  sayName: function() {\n    const arrowFunc = () => console.log(this.name);\n    arrowFunc();\n  }\n};\n\nobj.sayName(); // \"Charlie\" (this는 obj를 가리킴)","children":"$undefined"}],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"화살표 함수는 this를 lexical scope(정적 범위)에서 가져옵니다. 즉, 함수가 정의된 위치의 상위 스코프에서 this를 상속받습니다."}}],[false,false,false,["$","h4",null,{"className":"heading_h4__ZTbA0","style":{"fontWeight":"NORMAL"},"children":["📝 ","일반 함수(외부 스코프의 this를 저장) "]}]],["$","$L3",null,{"code":"const obj2 = {\n  name: \"David\",\n  sayName: function() {\n    const self = this;\n    const normalFunc = function() {\n      console.log(self.name);\n    };\n    normalFunc();\n  }\n};\n\nobj2.sayName(); // \"David\"","children":"$undefined"}],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"self 변수에 외부 스코프의 this를 저장하여 내부 함수에서 사용합니다.\n\n이 세 가지 방법 모두 동일한 결과를 제공하며, \"David\"를 출력합니다. 가장 현대적이고 간결한 접근법은 첫 번째 화살표 함수 방법을 사용하는 것입니다. 상황에 따라 적절한 방법을 선택할 수 있습니다:"}}],["$","ul",null,{"className":"liststyle_ul__uFdBS","children":[["$","li","0",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"화살표 함수: 간결하고 직관적"}}],["$","li","1",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"bind(): 명시적 바인딩 필요 시"}}],["$","li","2",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"self 변수: 오래된 코드와의 호환성이나 특정 상황에서"}}]]}],[false,false,["$","h3",null,{"className":"heading_h3__UisKt","style":{"fontWeight":"NORMAL"},"children":"이벤트 핸들러에서의 this"}],false],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"이벤트 핸들러로 함수가 호출되면, this는 일반적으로 이벤트가 발생한 DOM 요소를 가리킵니다."}}],["$","$L3",null,{"code":"document.querySelector(\"button\").addEventListener(\"click\", function() {\n  console.log(this); // <button> 요소\n});","children":"$undefined"}],[false,false,["$","h3",null,{"className":"heading_h3__UisKt","style":{"fontWeight":"NORMAL"},"children":"화살표 함수를 사용한 이벤트 핸들러에서의 this"}],false],["$","$L3",null,{"code":"document.querySelector(\"button\").addEventListener(\"click\", () => {\n  console.log(this); // Window 객체 (상위 스코프의 this)\n});","children":"$undefined"}],[false,false,["$","h3",null,{"className":"heading_h3__UisKt","style":{"fontWeight":"NORMAL"},"children":"결과적으로"}],false],["$","ul",null,{"className":"liststyle_ul__uFdBS","children":[["$","li","0",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"전역 호출: window (strict 모드에서는 undefined)."}}],["$","li","1",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"객체 메서드: 호출한 객체."}}],["$","li","2",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"명시적 바인딩: call, apply, bind로 지정한 객체."}}],["$","li","3",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"이벤트 핸들러: 이벤트가 발생한 요소."}}],["$","li","4",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"생성자 함수: 새로 생성된 객체."}}],["$","li","5",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"내부 함수: 호출 방식에 따라 결정 (보통 전역 객체)."}}]]}],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"일반 함수는 호출 방식에 따라 this가 유연하게 변한다는 점에서 화살표 함수와 대비됩니다. 화살표 함수는 상위 스코프의 this를 고정적으로 사용하지만, 일반 함수는 호출 시점에 따라 달라지므로 주의가 필요합니다. 추가 질문이 있으면 말씀해주세요!"}}]],["$","$L4",null,{"postid":53,"prePostTitle":{"id":54,"title":"[English] I'm sure 패턴 2","date":"2025-03-26 22:33:33","folder":"english","tag":["English"],"preview":"\"I'm sure that a lot of Koreans use social networking sites these days 전 대학원 진학하는 것에 대해 확신하고 있지 않아요\"","post":[{"type":"Heading","headingType":"h2","value":"case 1"},{"type":"GuideMessage","value":"<b>I'm sure that a lot of Koreans use social networking sites these days</b></br>\n\t\t\t\t \"나는 요즘 많은 한국인들이 소셜 네트워킹 사이트를 사용한다고 확신해\" \n\t\t\t\t"},{"type":"Heading","headingType":"h4","value":"문장 분석"},{"type":"stringlist","value":"I'm sure that~ → ~라고 확신해\n\t\t\t\ta lot of Koreans → 많은 한국인들\n\t\t\t\tuse social networking sites → 소셜 네트워킹 사이트를 사용하다.\n\t\t\t\tthese days → 요즘\n"},{"type":"GuideMessage","value":"- 만약 \"lot of Koreans\"라고 쓰면 문법적으로 맞지 않습니다. \"lot\"은 그 자체로 막연한 명사이기 때문에, <b>관사(a)</b>나 다른 <b>한정사(the, this 등)</b>가 없으면 자연스럽지 않고 의미가 모호해집니다.</br>\n- 예외적으로 <b>lots of Koreans</b>처럼 \"lots\"가 사용될 수 있는데, 이는 <u>\"a lot of\"보다 약간 더 구어체이며, \"a\"가 생략된 형태로 이해할 수 있습니다.</u>","promptTypeProps":"TIP"},{"type":"Heading","headingType":"h2","value":"case 2"},{"type":"GuideMessage","value":"<b>I'm not sure about going to graduate school.</b></br>\n\t\t\t\t \"나는 대학원에 가는 것에 대해 확신이 없어.\"\n\t\t\t\t"},{"type":"Heading","headingType":"h4","value":"문장 분석"},{"type":"stringlist","value":"I'm not sure → 확신이 없어\n\t\t\t\tabout → 에 대해\n\t\t\t\tgoing to graduate school → 대학원에 가는 것"},{"type":"GuideMessage","value":"<b>going</b>은 <b>가다라는 동작</b>을 <b>동명사(gerund) 형태</b>로 사용해 명사처럼 기능하게  합니다. </br>graduate school은 \"대학원\"을 뜻하는 단어입니다.","promptTypeProps":"TIP"},{"type":"Heading","headingType":"h2","value":"case 3"},{"type":"GuideMessage","value":"<b>I'm not sure what to say.</b></br>\n\t\t\t\t \"나는 무엇을 말해야 할지 확신이 없어.\"\n\t\t\t\t"},{"type":"Heading","headingType":"h4","value":"문장 분석"},{"type":"stringlist","value":"I'm not sure → 확신이 없어\n\t\t\t\twhat to say → 무엇을 말해야 할지"},{"type":"GuideMessage","value":"<b>to say</b>는 <b>말하다</b>라는 <b>동작</b>을 <b>부정사(to + 동사 원형) 형태</b>로 사용해 what의 구체적인 대상을 설명한다.\n<b>what to say</b> 전체는 I'm not sure의 <b>보어 역할</b>을 한다.","promptTypeProps":"TIP"}]},"nextPostTile":{"id":52,"title":"[TECH-QA] Flex와 Grid 비교","date":"2025-03-25 15:15:33","folder":"HtmlCSS","tag":["JavaScript","TECH-QA"],"preview":"flex는 주로 단일 축(1차원)을 기준으로 레이아웃을 구성하는 데 사용됩니다. 이는 수평(가로) 또는 수직(세로) 방향 중 하나를 중심으로 아이템을 정렬하며, 유연한 크기 조정과 간단한 배치에 적합합니다. ","post":[{"type":"Heading","headingType":"h3","value":"Flex (Flexbox)"},{"type":"stringlist","value":"단일 방향(행 또는 열)으로 아이템을 배치.\n아이템의 크기가 동적으로 변할 수 있어 반응형 디자인에 유리.\n간단한 정렬과 공간 분배에 강력.\n"},{"type":"code","value":"<!DOCTYPE html>\n<html>\n<head>\n<style>\n  .flex-container {\n    display: flex;\n    justify-content: space-between; /* 아이템 간 간격을 균등하게 분배 */\n    background-color: #f0f0f0;\n  }\n  .flex-item {\n    background-color: #4CAF50;\n    color: white;\n    padding: 20px;\n    margin: 10px;\n    text-align: center;\n  }\n</style>\n</head>\n<body>\n  <div class=\"flex-container\">\n    <div class=\"flex-item\">1</div>\n    <div class=\"flex-item\">2</div>\n    <div class=\"flex-item\">3</div>\n  </div>\n</body>\n</html>\n\n\n","codePreviewProps":true},{"type":"normal","value":"위 예제에서 .flex-container는 display: flex를 통해 가로 방향으로 아이템을 배치합니다. justify-content: space-between 속성은 아이템 사이의 공간을 균등하게 나누어 배치합니다. 결과적으로 세 개의 박스가 수평으로 나란히 정렬됩니다."},{"type":"Heading","headingType":"h3","value":"Grid"},{"type":"normal","value":"grid는 2차원 그리드 시스템을 구성하는 데 사용되며, 수평(가로)과 수직(세로) 방향 모두를 고려한 레이아웃을 설계할 수 있습니다. 각 셀의 크기를 미리 정의하여 일관된 구조를 유지하며, 복잡한 레이아웃에 적합합니다."},{"type":"stringlist","value":"행(row)과 열(column)을 모두 정의 가능.\n셀 크기를 고정하거나 비율로 설정하여 일정한 구조 유지.\n레이아웃 변화가 적은 정적인 디자인에 적합.\n"},{"type":"code","value":"<!DOCTYPE html>\n<html>\n<head>\n  <style>\n    .grid-container {\n      display: grid;\n      grid-template-columns: 100px 100px 100px; /* 3열, 각 100px */\n      grid-template-rows: 80px 80px; /* 2행, 각 80px */\n      gap: 10px; /* 셀 간 간격 */\n      background-color: #f0f0f0;\n    }\n    .grid-item {\n      background-color: #2196F3;\n      color: white;\n      padding: 20px;\n      text-align: center;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"grid-container\">\n    <div class=\"grid-item\">1</div>\n    <div class=\"grid-item\">2</div>\n    <div class=\"grid-item\">3</div>\n    <div class=\"grid-item\">4</div>\n    <div class=\"grid-item\">5</div>\n    <div class=\"grid-item\">6</div>\n  </div>\n</body>\n</html>\n","codePreviewProps":true},{"type":"normal","value":"위 예제에서는 grid-container가 2x2 그리드 구조를 형성합니다. grid-template-columns: 1fr 1fr로 두 개의 열을 동일한 비율로 나누고, grid-template-rows로 행 높이를 100px로 고정했습니다. gap 속성으로 셀 사이에 10px 간격을 추가했습니다."},{"type":"Heading","headingType":"h3","value":"Grid는 반응형에 적합한가?"},{"type":"normal","value":"grid는 반응형 디자인에 매우 강력한 도구입니다. 미리 정의된 구조를 유지한다는 점은 고정된 레이아웃에 유리하다는 의미일 뿐, 반응형으로 동적으로 조정하는 데도 탁월합니다. CSS Grid는 다음과 같은 기능을 통해 반응형을 지원합니다"},{"type":"stringlist","value":"<b>fr 단위</b>: 유연한 비율로 열/행 크기를 정의.\n<b>minmax() 함수</b>: 최소/최대 크기를 설정해 콘텐츠에 따라 적응.\n<b>auto-fit / auto-fill</b>: 열 개수를 화면 크기에 따라 자동으로 조정.\n<b>미디어 쿼리</b>: 화면 크기에 따라 그리드 구조를 변경.\n"},{"type":"code","value":"<!DOCTYPE html>\n<html>\n<head>\n<style>\n  .grid-container2 {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n    gap: 10px;\n  }\n\n.item {\n  background-color: lightgreen;\n  padding: 20px;\n  text-align: center;\n}\n\n@media (max-width: 600px) {\n  .grid-container {\n    grid-template-columns: 1fr; /* 작은 화면에서는 1열로 */\n  }\n}\n</style>\n</head>\n<body>\n <div class=\"grid-container2\">\n  <div class=\"item\">아이템 1</div>\n  <div class=\"item\">아이템 2</div>\n  <div class=\"item\">아이템 3</div>\n  <div class=\"item\">아이템 4</div>\n  <div class=\"item\">아이템 5</div>\n  <div class=\"item\">아이템 6</div>\n </div>\n</body>\n</html>\n","codePreviewProps":true},{"type":"stringlist","value":"<b>auto-fit</b>: 사용 가능한 공간에 따라 열을 자동으로 채움.\n<b>minmax(150px, 1fr)</b>: 각 열의 최소 너비는 150px, 최대는 남은 공간을 비율로 나눔.\n<b>결과</b>: 화면이 넓으면 여러 열로 배치되고, 좁아지면 열이 줄어듦.\n화면 너비가 600px 이하일 때 1열로 강제 전환."},{"type":"normal","value":"큰 화면에서는 아이템이 여러 열로 나열되고, 작은 화면에서는 자동으로 한 열로 정렬되어 반응형 레이아웃이 구현됨."}]},"segment":"posts"}],["$","div",null,{"className":"footer_footer_container__MsSvO","children":["$","footer",null,{"className":"footer_footer__AwYty","children":[["$","p",null,{"className":"footer_copylight___J5l0","children":["© 2024 ","베짱이가 되고싶은 개미。"," Some rights reserved."]}],["$","p",null,{"className":"footer_theme__bwXbg","children":"portfolio v1.0.0-alpha.3"}]]}]}]],null]]},["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","(layoutCase)","children","tags","children","$6","children","$7","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/9d56cfe5ed5c5571.css","precedence":"next","crossOrigin":""}]]}]]},["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","(layoutCase)","children","tags","children","$6","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","(layoutCase)","children","tags","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]],"search":["__DEFAULT__",{},["$9","$Lb",null]]},[null,["$","$Lc",null,{"children":["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","(layoutCase)","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}],"search":["$","$L5",null,{"parallelRouterKey":"search","segmentPath":["children","(layoutCase)","search"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$d","styles":null}],"params":{}}],null]]},[null,["$","html",null,{"lang":"en","className":"","children":[["$","head",null,{"children":[["$","link",null,{"rel":"stylesheet","href":"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css","as":"style"}],["$","link",null,{"rel":"preconnect","href":"https://fonts.googleapis.com"}],["$","link",null,{"rel":"preconnect","href":"https://fonts.gstatic.com"}],["$","link",null,{"rel":"stylesheet","href":"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR&display=swap","as":"style"}]]}],["$","body",null,{"children":["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":"$e","children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":"$f","children":"404"}],["$","div",null,{"style":"$10","children":["$","h2",null,{"style":"$11","children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/0c496b0e03d530ba.css","precedence":"next","crossOrigin":""}]]}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/5048045ff4a95083.css","precedence":"next","crossOrigin":""}]],"$L12"]]]]
b:E{"digest":"NEXT_NOT_FOUND"}
12:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"be come 💡"}],["$","meta","3",{"name":"description","content":"App for an Ant Who Wants to Become a Bejjangyi"}]]
1:null
a:null
