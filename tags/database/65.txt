2:I[5250,["250","static/chunks/250-8b90be581650ff9d.js","399","static/chunks/399-caf055eb211349e2.js","216","static/chunks/app/(layoutCase)/tags/%5Btagname%5D/%5Bpostid%5D/page-a568cf61b562b41b.js"],""]
3:I[8843,["250","static/chunks/250-8b90be581650ff9d.js","399","static/chunks/399-caf055eb211349e2.js","216","static/chunks/app/(layoutCase)/tags/%5Btagname%5D/%5Bpostid%5D/page-a568cf61b562b41b.js"],""]
4:I[777,["250","static/chunks/250-8b90be581650ff9d.js","399","static/chunks/399-caf055eb211349e2.js","216","static/chunks/app/(layoutCase)/tags/%5Btagname%5D/%5Bpostid%5D/page-a568cf61b562b41b.js"],""]
5:I[5613,[],""]
8:I[1778,[],""]
c:I[3866,["250","static/chunks/250-8b90be581650ff9d.js","399","static/chunks/399-caf055eb211349e2.js","46","static/chunks/46-f5c36f830a2ce4c4.js","730","static/chunks/730-f56ebe909f1c8bdb.js","35","static/chunks/35-86206131b00fc69c.js","464","static/chunks/app/(layoutCase)/layout-3f2d0dcd82d40488.js"],""]
6:["tagname","database","d"]
7:["postid","65","d"]
9:"$La"
d:[]
e:{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"}
f:{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"}
10:{"display":"inline-block"}
11:{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0}
0:["b0WrnVhgyJRLEiiDRXPph",[[["",{"children":["(layoutCase)",{"children":["tags",{"children":[["tagname","database","d"],{"children":[["postid","65","d"],{"children":["__PAGE__?{\"tagname\":\"database\",\"postid\":\"65\"}",{}]}]}]}],"search":["__DEFAULT__",{}]}]},"$undefined","$undefined",true],["",{"children":["(layoutCase)",{"children":["tags",{"children":[["tagname","database","d"],{"children":[["postid","65","d"],{"children":["__PAGE__",{},["$L1",[[["$","article",null,{"className":"$undefined","children":["$","header",null,{"children":["$","h1",null,{"className":"postUserInfo_h1__uhAqy","children":"[TECH-QA] 리액트에서 XSS 방어"}]}]}],["$","div",null,{"className":"postUserInfo_post_meta__ABvuC","children":[["$","span",null,{"children":["Posted"," ",["$","time",null,{"className":"postUserInfo_time__2exyR","children":["14 days"," "]}]]}],["$","span",null,{"className":"postUserInfo_update__f345P","children":["Updated"," ",["$","time",null,{"className":"postUserInfo_time__2exyR","children":"14 days"}]]}]]}],["$","div",null,{"children":["$","span",null,{"className":"postUserInfo_post_meta__ABvuC","children":["By"," ",["$","em",null,{"children":["$","$L2",null,{"href":"https://nam-yeun-hwa.github.io/","className":"postUserInfo_author__fVGYM","children":"베짱이가 되고싶은 개미。"}]}]]}]}]],[["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"React는 기본적으로 XSS(크로스 사이트 스크립팅) 공격을 방어하기 위한 강력한 메커니즘을 제공합니다. React의 설계 자체가 XSS 취약점을 줄이도록 만들어져 있으며, 이를 통해 사용자 입력이나 동적 데이터를 안전하게 렌더링할 수 있습니다. 하지만 특정 상황에서는 주의가 필요합니다. 아래에서 React의 XSS 방어 메커니즘과 주의사항을 정리하겠습니다."}}],[false,["$","h2",null,{"className":"heading_h2__fsXMw","style":{"fontWeight":"NORMAL"},"children":"React의 기본 XSS 방어 메커니즘"}],false,false],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"React는 JSX와 내부 렌더링 방식 덕분에 XSS 공격을 방지하는 몇 가지 기본 기능을 제공합니다."}}],[false,false,["$","h3",null,{"className":"heading_h3__UisKt","style":{"fontWeight":"NORMAL"},"children":"자동 이스케이프 처리"}],false],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"React는 JSX에서 동적 데이터를 렌더링할 때, 기본적으로 HTML 특수 문자를 이스케이프 처리합니다. 예를 들어, &lt;, &gt;, &amp; 같은 문자는 <span class=\"point\">&amp;lt; &amp;gt; &amp;amp;</span> 로 변환되어 텍스트로 표시됩니다."}}],["$","$L3",null,{"code":"function App() {\n  const userInput = \"<script>alert('XSS')</script>\";\n  return <div>{userInput}</div>;\n}","children":"$undefined"}],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"브라우저에 <span class=\"point\"></span> 가 이스케이프 처리 후 <span class=\"point\">&amp;lt;script&amp;gt;alert('XSS')&amp;lt;/script&amp;gt;</span>  텍스트로 표시되며, 스크립트는 실행되지 않음. React는 {} 내부의 문자열을 textContent로 처리하여 HTML로 해석되지 않도록 합니다."}}],[false,false,["$","h3",null,{"className":"heading_h3__UisKt","style":{"fontWeight":"NORMAL"},"children":"JSX의 안전한 구조"}],false],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"JSX는 HTML처럼 보이지만, 실제로는 JavaScript 객체로 컴파일됩니다. 따라서 사용자가 입력한 데이터가 직접 HTML로 삽입되지 않고, React가 관리하는 DOM API를 통해 안전하게 렌더링됩니다."}}],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"{userInput}는 React.createElement로 변환되어 안전하게 처리됨."}}],[false,false,["$","h3",null,{"className":"heading_h3__UisKt","style":{"fontWeight":"NORMAL"},"children":"속성 이스케이프"}],false],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"HTML 속성(예: value, href)에 동적 데이터를 삽입할 때도 React는 특수 문자를 이스케이프하여 악성 코드(예: javascript:alert('XSS'))가 실행되지 않도록 합니다."}}],[false,false,false,["$","h4",null,{"className":"heading_h4__ZTbA0","style":{"fontWeight":"NORMAL"},"children":["📝 ","안전하지 않은 dangerouslySetInnerHTML 사용."]}]],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"스크립트 실행 가능하여 XSS 취약하다."}}],["$","$L3",null,{"code":"const userInput = \"<script>alert('XSS')</script>\";\nreturn <div dangerouslySetInnerHTML={{ __html: userInput }} />;","children":"$undefined"}],[false,false,false,["$","h4",null,{"className":"heading_h4__ZTbA0","style":{"fontWeight":"NORMAL"},"children":["📝 ","안전한 방법 dangerouslySetInnerHTML 사용"]}]],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"사용자 입력을 삽입하기 전에 반드시 DOMPurify 같은 라이브러리로 정화(sanitize)."}}],["$","$L3",null,{"code":"import DOMPurify from \"dompurify\";\nconst userInput = \"<script>alert('XSS')</script>\";\nconst sanitized = DOMPurify.sanitize(userInput);\nreturn <div dangerouslySetInnerHTML={{ __html: sanitized }} />;","children":"$undefined"}],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":""}}],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"React에서 XSS 방어를 강화하는 방법"}}],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"React의 기본 방어에 더해 추가적인 보안 조치를 적용하면 더 안전한 애플리케이션을 만들 수 있습니다."}}],[false,false,false,["$","h4",null,{"className":"heading_h4__ZTbA0","style":{"fontWeight":"NORMAL"},"children":["📝 ","사용자 입력 검증"]}]],["$","ul",null,{"className":"liststyle_ul__uFdBS","children":[["$","li","0",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"클라이언트와 서버에서 입력 데이터를 검증하여 예상치 못한 형식(예: 스크립트 태그, 특수 문자)을 차단."}}],["$","li","1",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"예: 이메일 입력은 이메일 형식이 맞는지 확인."}}]]}],[false,false,false,["$","h4",null,{"className":"heading_h4__ZTbA0","style":{"fontWeight":"NORMAL"},"children":["📝 ","DOMPurify 사용"]}]],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"DOMPurify는 입력된 HTML 문자열을 분석하고, 안전하지 않은 요소를 제거하거나 변환하여 XSS 공격을 방지합니다."}}],["$","$L3",null,{"code":"<script>alert('XSS')</script>","children":"$undefined"}],["$","ul",null,{"className":"liststyle_ul__uFdBS","children":[["$","li","0",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"\"\" (빈 문자열, <script> 태그 완전 제거)."}}],["$","li","1",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"이유: <script>는 기본적으로 화이트리스트에 없음."}}]]}],["$","$L3",null,{"code":"<img src=\"x\" onerror=\"alert('XSS')\">","children":"$undefined"}],["$","ul",null,{"className":"liststyle_ul__uFdBS","children":[["$","li","0",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"출력: <img src=\"x\">"}}],["$","li","1",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"이유: onerror 속성은 위험하므로 제거, src는 유지."}}]]}],["$","$L3",null,{"code":"<a href=\"javascript:alert('XSS')\">Click</a>","children":"$undefined"}],["$","ul",null,{"className":"liststyle_ul__uFdBS","children":[["$","li","0",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"출력: <a>Click</a> 또는 <a href=\"#\">Click</a> (구성에 따라 다름)."}}],["$","li","1",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"이유: javascript: 프로토콜은 차단됨."}}]]}],["$","$L3",null,{"code":"<div>Hello <b>World</b></div>","children":"$undefined"}],["$","ul",null,{"className":"liststyle_ul__uFdBS","children":[["$","li","0",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"출력: <div>Hello <b>World</b></div>"}}],["$","li","1",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"이유: <div>, <b>는 안전한 태그로 화이트리스트에 포함."}}]]}],["$","$L3",null,{"code":"<style>body { background: url(javascript:alert('XSS')); }</style>","children":"$undefined"}],["$","ul",null,{"className":"liststyle_ul__uFdBS","children":[["$","li","0",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"출력: <style>body { background: url(about:blank); }</style> 또는 \"\"."}}],["$","li","1",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"이유: 위험한 CSS 표현식 제거."}}]]}],[false,false,false,["$","h4",null,{"className":"heading_h4__ZTbA0","style":{"fontWeight":"NORMAL"},"children":["📝 ","Content Security Policy(CSP)"]}]],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"서버에서 CSP 헤더를 설정하여 허용된 스크립트만 실행되도록 제한."}}],["$","$L3",null,{"code":"Content-Security-Policy: script-src 'self' https://trusted.cdn.com;","children":"$undefined"}],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"React 앱에서는 인라인 스크립트를 최소화하고, nonce나 strict-dynamic을 활용."}}],[false,false,false,["$","h4",null,{"className":"heading_h4__ZTbA0","style":{"fontWeight":"NORMAL"},"children":["📝 ","안전한 API 사용"]}]],["$","ul",null,{"className":"liststyle_ul__uFdBS","children":[["$","li","0",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"innerHTML 대신 textContent 또는 setAttribute 사용."}}],["$","li","1",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"React의 기본 렌더링 방식을 따르고, 직접 DOM 조작을 피함."}}]]}],[false,false,false,["$","h4",null,{"className":"heading_h4__ZTbA0","style":{"fontWeight":"NORMAL"},"children":["📝 ","HTTPS 사용"]}]],["$","ul",null,{"className":"liststyle_ul__uFdBS","children":[["$","li","0",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"데이터 전송 시 HTTPS를 사용하여 데이터 탈취를 방지."}}],["$","li","1",{"className":"liststyle_dot__SMzS4","dangerouslySetInnerHTML":{"__html":"React 앱은 보통 HTTPS로 배포되므로, 서버 설정에서 확인."}}]]}],[false,false,false,["$","h4",null,{"className":"heading_h4__ZTbA0","style":{"fontWeight":"NORMAL"},"children":["📝 ","서버 측 방어"]}]],["$","div",null,{"className":"postDetail_content__OTeO2","dangerouslySetInnerHTML":{"__html":"React는 클라이언트 측 프레임워크이므로, 서버에서도 XSS 방어를 적용(예: 입력 검증, 출력 이스케이프)."}}]],["$","$L4",null,{"postid":65,"prePostTitle":{"id":66,"title":"[TECH-QA] 브라우저 렌더링 과정","date":"2025-04-17 12:06:33","folder":"Javascript","tag":["브라우저","TECH-QA"],"preview":"브라우저의 HTML 렌더링은 웹 페이지를 화면에 표시하기 위해 브라우저가 HTML, CSS, JavaScript 등의 리소스를 처리하고 시각적으로 표현하는 과정입니다. 이 과정은 브라우저의 렌더링 엔진(예: Chrome의 Blink, Firefox의 Gecko, Safari의 WebKit)에 의해 수행되며, 여러 단계로 나눌 수 있습니다. 아래에서 이 과정을 자세히 설명하겠습니다.","post":[{"type":"normal","value":"브라우저의 HTML 렌더링은 <b>웹 페이지를 화면에 표시</b>하기 위해 브라우저가 <b>HTML, CSS, JavaScript 등의 리소스를 처리하고 시각적으로 표현하는 과정</b>입니다. 이 과정은 브라우저의 렌더링 엔진(예: Chrome의 Blink, Firefox의 Gecko, Safari의 WebKit)에 의해 수행되며, 여러 단계로 나눌 수 있습니다. 아래에서 이 과정을 자세히 설명하겠습니다."},{"type":"Heading","headingType":"h2","value":"브라우저 렌더링 과정의 개요"},{"type":"normal","value":"브라우저는 HTML 문서를 받아 화면에 렌더링하기 위해 다음 주요 단계를 거칩니다."},{"type":"stringlist","value":"HTML 파싱 및 DOM 생성\nCSS 파싱 및 CSSOM 생성\n렌더 트리(Render Tree) 생성\n레이아웃(Layout, Reflow)\n페인팅(Painting)\n컴포지팅(Compositing, 선택적)"},{"type":"normal","value":"이 과정은 <b>Critical Rendering Path(CRP, 중요 렌더링 경로)</b>라고 불리며, 웹 페이지 로딩 속도와 사용자 경험에 직접적인 영향을 미칩니다."},{"type":"Heading","headingType":"h3","value":"HTML 파싱 및 DOM 생성"},{"type":"stringlist","value":"<b>HTML 파싱</b>: 브라우저는 서버로부터 받은 HTML 파일을 바이트 단위로 읽어 문자를 해석하고, 이를 토큰(예: 태그, 속성, 텍스트)으로 변환합니다. 이 토큰들은 트리 구조로 조직화됩니다.\n<b>DOM(Document Object Model) 생성</b>: 파싱된 HTML은 계층적 트리 구조인 DOM으로 변환됩니다. DOM은 HTML 요소와 그 관계를 나타내는 객체 모델로, 각 요소는 노드로 표현됩니다.</br> - 예) <span class=\"point\">&lt;div>&lt;p>Hello&lt;/p>&lt;/div>는 &lt;div>와 &lt;p>가 부모-자식 관계로 DOM 트리에 추가됩니다.</span> "},{"type":"stringlist","value":"비동기 리소스 처리: HTML 파싱 중 &lt;script>, &lt;img>, &lt;link> 등의 외부 리소스를 만나면 브라우저는 해당 리소스를 병렬적으로 요청합니다. 단, &lt;script> 태그는 기본적으로 파싱을 차단(blocking)할 수 있으므로 async 또는 defer 속성을 사용하는 것이 일반적입니다."},{"type":"Heading","headingType":"h3","value":"CSS 파싱 및 CSSOM 생성"},{"type":"stringlist","value":"<b>CSS 파싱</b>: HTML 파싱과 병렬적으로, 브라우저는 &lt;link> 태그나 &lt;style> 태그를 통해 CSS 파일 또는 스타일을 읽습니다. CSS도 토큰화되고 파싱되어 트리 구조로 변환됩니다.\n<b>CSSOM(CSS Object Model) 생성</b>: 파싱된 CSS는 CSSOM이라는 트리 구조로 저장됩니다. CSSOM은 각 요소에 적용될 스타일 규칙(예: color, margin)을 정의합니다.\nCSS는 계층적이며, 상속과 우선순위(예: !important, 선택자 특이성)에 따라 스타일이 결정됩니다.\n<b>렌더링 차단</b>: CSS는 렌더링을 차단하는 리소스입니다. CSSOM이 완성되기 전에는 화면 렌더링이 시작되지 않으므로, CSS 파일을 최적화(예: 최소화, 인라인 CSS 사용)하는 것이 중요합니다."},{"type":"Heading","headingType":"h3","value":"렌더 트리(Render Tree) 생성"},{"type":"stringlist","value":"<b>DOM과 CSSOM 결합</b>: 브라우저는 DOM과 CSSOM을 결합하여 <b>렌더 트리를 생성</b>합니다. 렌더 트리는 화면에 실제로 표시될 요소들만 포함합니다.</br> - 예) display: none이 적용된 요소나 <head> 내부의 메타데이터는 렌더 트리에 포함되지 않습니다.\n렌더 트리는 각 노드에 대해 스타일 정보(예: 색상, 크기)와 구조적 정보를 포함합니다.\n<b>렌더 트리의 역할</b>: <u>렌더 트리는 레이아웃 단계에서 요소의 크기와 위치를 계산</u>하는 데 사용됩니다."},{"type":"Heading","headingType":"h2","value":"레이아웃(Layout, Reflow)"},{"type":"stringlist","value":"<b>박스 모델 기반 계산</b>: 렌더 트리의 각 노드는 <b>CSS 박스 모델(콘텐츠, 패딩, 테두리, 마진)을 기반</b>으로 <u>크기와 위치를 계산</u>합니다.\n<b>뷰포트 기준 배치</b>: 브라우저는 뷰포트(화면 크기)를 기준으로 요소의 정확한 위치(x, y 좌표)와 크기(width, height)를 결정합니다.</br> - 예: position: absolute는 부모 요소를 기준으로, float는 주변 콘텐츠 흐름에 따라 배치됩니다.\n<b>리플로우(Reflow)</b>: 레이아웃 계산은 초기 렌더링뿐만 아니라 DOM이나 CSS 변경(예: JavaScript로 스타일 변경, 창 크기 조정) 시에도 발생할 수 있습니다. 리플로우는 성능에 큰 영향을 미치므로 최소화해야 합니다."},{"type":"Heading","headingType":"h2","value":"페인팅(Painting)"},{"type":"stringlist","value":"<b>픽셀 변환</b>: 레이아웃 단계에서 계산된 <b>렌더 트리를 기반으로, 브라우저는 각 요소를 화면의 픽셀로 변환</b>합니다.</br> - 색상, 그림자, 텍스트, 이미지 등 시각적 스타일이 적용됩니다.\n<b>레이어(Layer)</b>: 복잡한 페이지에서는 요소를 여러 레이어로 나누어 페인팅합니다. </br>예) transform이나 opacity를 사용하는 요소는 별도의 레이어로 처리될 수 있습니다.\n<b>GPU 가속</b>: 현대 브라우저는 <b>GPU를 활용해 페인팅을 가속화</b>합니다. <b>CSS 속성 중 will-change를 사용</b>하면 특정 요소의 렌더링을 최적화할 수 있습니다."},{"type":"Heading","headingType":"h4","value":"will-change를 사용한 CSS 애니메이션 최적화"},{"type":"code","value":"<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>will-change 예시</title>\n  <style>\n    .box {\n      width: 100px;\n      height: 100px;\n      background-color: #3498db;\n      position: relative;\n      transition: transform 0.3s ease;\n      /* 브라우저에 transform 변경을 미리 알림 */\n      will-change: transform;\n    }\n\n    .box:hover {\n      transform: translateX(200px); /* 마우스 호버 시 이동 */\n    }\n  </style>\n</head>\n<body>\n  <div class=\"box\"></div>\n</body>\n</html>","codePreviewProps":true},{"type":"stringlist","value":"<b>will-change</b>: transform;: 브라우저에 .box 요소의 transform 속성이 변경될 것임을 알려, 해당 요소를 GPU 레이어로 승격시켜 렌더링을 가속화합니다.\n<b>효과</b>: 마우스를 .box 위에 올리면 요소가 부드럽게 200px 오른쪽으로 이동합니다. will-change로 인해 브라우저는 이 변환을 미리 준비하여 렌더링 성능을 최적화합니다.\n<b>주의사항</b> </br> - will-change를 과도하게 사용하면 메모리 사용량이 증가할 수 있으므로, 실제로 애니메이션이나 변경이 빈번한 요소에만 적용하세요. </br> - 애니메이션이 끝난 후에는 will-change를 제거하는 것이 좋습니다(예: JavaScript로 동적으로 추가/제거)."},{"type":"Heading","headingType":"h4","value":"스크롤 애니메이션"},{"type":"code","value":".scroll-element {\n  position: fixed;\n  top: 0;\n  will-change: transform;\n  transition: transform 0.5s ease;\n}\n\n/* JavaScript로 스크롤 시 transform 변경 */\ndocument.addEventListener('scroll', () => {\n  document.querySelector('.scroll-element').style.transform = \"translateY(${window.scrollY}px)\";\n});"},{"type":"normal","value":"이 경우, will-change: transform은 스크롤에 따른 요소 이동을 GPU로 처리하여 부드러운 렌더링을 보장합니다. will-change는 GPU 가속을 활용해 애니메이션이나 전환 성능을 개선하지만, 적절히 사용해야 리소스 낭비를 피할 수 있습니다. 위 예시는 transform에 초점을 맞췄지만, opacity, scroll-position 등 다른 속성에도 적용 가능합니다."},{"type":"Heading","headingType":"h2","value":"컴포지팅(Compositing, 선택적)"},{"type":"stringlist","value":"<b>레이어 합성</b>: 페인팅된 레이어를 최종적으로 합쳐 화면에 표시합니다. 컴포지팅은 GPU를 활용해 빠르게 수행됩니다.\n<b>애니메이션 최적화</b>: transform이나 opacity 같은 속성은 레이아웃이나 페인팅을 유발하지 않고 컴포지팅 단계에서만 처리되므로 성능이 좋습니다.\n<b>성능 고려</b>: 컴포지팅은 리플로우나 리페인팅보다 비용이 적으므로, 애니메이션에 적합한 속성을 사용하는 것이 중요합니다."},{"type":"Heading","headingType":"h2","value":"박스 모델과의 연관성"},{"type":"normal","value":"CSS 박스 모델은 렌더링 과정, 특히 레이아웃 단계에서 핵심적인 역할을 합니다"},{"type":"stringlist","value":"각 HTML 요소는 박스 모델(콘텐츠, 패딩, 테두리, 마진)을 기반으로 사각형 박스로 계산됩니다.\n레이아웃 단계에서 브라우저는 박스 모델의 속성(width, height, margin, padding, border)을 사용해 요소의 크기와 위치를 결정합니다.\nbox-sizing 속성은 박스 크기 계산 방식(content-box vs border-box)을 정의하며, 레이아웃의 예측 가능성에 영향을 미칩니다."},{"type":"normal","value":"다음은 간단한 HTML과 CSS로 렌더링 과정을 보여주는 예제입니다:"},{"type":"code","value":"<!DOCTYPE html>\n<html>\n<head>\n  <style>\n    div {\n      width: 200px;\n      height: 100px;\n      margin: 20px;\n      padding: 10px;\n      border: 5px solid blue;\n      background-color: lightgray;\n    }\n  </style>\n</head>\n<body>\n  <div>Hello, World!</div>\n</body>\n</html>"},{"type":"stringlist","value":"<b>HTML 파싱</b>: &lt;div>와 텍스트가 DOM 트리로 변환됩니다.\n<b>CSS 파싱</b>: 스타일이 CSSOM으로 변환됩니다.\n<b>렌더 트리</b>: &lt;div>와 스타일이 결합된 렌더 트리가 생성됩니다.\n<b>레이아웃</b>: 박스 모델을 기반으로 &lt;div>의 크기(230px × 130px, content-box 기준)와 위치가 계산됩니다.\n<b>페인팅</b>: &lt;div>의 배경색, 테두리, 텍스트가 화면에 그려집니다."},{"type":"Heading","headingType":"h2","value":"추가 고려사항"},{"type":"stringlist","value":"<b>Progressive Rendering</b>: 브라우저는 모든 리소스가 로드되기 전에 부분적으로 렌더링을 시작할 수 있습니다. 이를 통해 사용자에게 더 빠르게 콘텐츠를 보여줄 수 있습니다.\n<b>Web Vitals</b>: Google의 Core Web Vitals(LCP, FID, CLS)는 렌더링 성능을 측정하는 지표로, 최적화 목표로 사용됩니다. </br></br> - <b>LCP(Largest Contentful Paint)</b>: 주요 콘텐츠 렌더링 시간. </br> - <b>FID(First Input Delay)</b>: 사용자 입력에 대한 응답성. </br> - <b>CLS(Cumulative Layout Shift)</b>: 레이아웃 이동의 안정성."}]},"nextPostTile":{"id":64,"title":"[TECH-QA] CSRF와 XSS","date":"2025-04-14 22:48:33","folder":"Javascript","tag":["JavaScript","TECH-QA","XSS","CSRF"],"preview":"CSRF 공격은 <b>사용자의 인증 정보를 악용</b>하여 의도하지 않은 요청을 서버에 보내는 공격입니다. 이를 방어하기 위한 주요 방법은 다음과 같습니다.","post":[{"type":"Heading","headingType":"h2","value":"CSRF 토큰 이란"},{"type":"normal","value":"CSRF 토큰은 크로스 사이트 요청 위조(Cross-Site Request Forgery, CSRF) 공격을 방어하기 위해 사용되는 고유한 랜덤 문자열입니다. 서버에서 생성되어 사용자 세션과 연결되며, 클라이언트가 서버에 요청(예: 폼 제출, AJAX 호출)을 보낼 때 이 토큰을 함께 전송하여 요청의 유효성을 검증합니다."},{"type":"Heading","headingType":"h2","value":"CSRF 토큰의 일반적인 흐름"},{"type":"Heading","headingType":"h4","value":"서버에서 CSRF 토큰 생성"},{"type":"stringlist","value":"사용자가 웹 애플리케이션에 접속하면, 서버는 해당 사용자 세션에 고유한 CSRF 토큰을 생성합니다.\n이 토큰은 서버의 세션에 저장됩니다(예: 세션 ID와 연계된 서버 메모리, 데이터베이스, 또는 캐시).\n서버 세션은 사용자마다 고유하며, 서버가 관리하는 상태 저장소입니다."},{"type":"Heading","headingType":"h4","value":"클라이언트로 CSRF 토큰 전달"},{"type":"normal","value":"서버는 생성한 CSRF 토큰을 클라이언트(프론트엔드)로 전송합니다. 이는 보통 다음과 같은 방식으로 이루어집니다:"},{"type":"stringlist","value":"HTML 폼의 숨겨진 필드(<input type=\"hidden\" name=\"_csrf\" value=\"토큰값\">)로 포함.\nAJAX 요청을 위해 HTTP 헤더(예: X-CSRF-Token)로 전달.\n쿠키로 전송(단, 쿠키 자체는 CSRF 방지에 직접 사용되지 않음)."},{"type":"normal","value":"클라이언트는 이 토큰을 받아서 저장합니다. 이 저장은 주로 프론트엔드의 메모리(예: JavaScript 변수)나 HTML 폼에 일시적으로 유지되며, 프론트엔드의 세션 스토리지나 로컬 스토리지에 저장하는 경우는 드뭅니다(보안상 권장되지 않음)."},{"type":"Heading","headingType":"h2","value":"클라이언트가 요청 전송"},{"type":"stringlist","value":"사용자가 폼을 제출하거나 AJAX 요청을 보낼 때, <b>클라이언트는 CSRF 토큰을 요청에 포함</b>시킵니다.\n예: <b>POST 요청의 바디에 _csrf 필드로 포함</b>되거나, <b>헤더에 X-CSRF-Token으로 추가</b>됨."},{"type":"Heading","headingType":"h4","value":"서버에서 CSRF 토큰 검증"},{"type":"stringlist","value":"서버는 클라이언트로부터 받은 CSRF 토큰을 서버 세션에 저장된 토큰과 비교합니다.\n토큰이 일치하면 요청이 유효한 것으로 간주하고 처리합니다.\n토큰이 일치하지 않거나 없으면 요청을 거부(예: 403 Forbidden 응답)."},{"type":"Heading","headingType":"h4","value":"세션 유지 및 토큰 갱신"},{"type":"normal","value":"요청이 성공적으로 처리된 후, 서버는 필요에 따라 새로운 CSRF 토큰을 생성하여 세션에 저장하고 클라이언트에 전달합니다.\n이는 보안을 강화하기 위해 토큰을 일회성 또는 주기적으로 갱신하는 방식입니다."},{"type":"Heading","headingType":"h4","value":"예시"},{"type":"code","value":"<form method=\"POST\" action=\"/update-profile\">\n  <span class=\"point\"><input type=\"hidden\" name=\"_csrf\" value=\"abc123xyz789\"></span>\n  <input type=\"text\" name=\"username\">\n  <button type=\"submit\">저장</button>\n</form>"},{"type":"Heading","headingType":"h4","value":"예제: JavaScript (Fetch API)"},{"type":"code","value":"<!DOCTYPE html>\n<html>\n<head>\n    <title>CSRF AJAX Example</title>\n    <!-- CSRF 토큰을 메타 태그로 포함 -->\n    <meta name=\"csrf-token\" content=\"3f9a8b2c-7e5d-4a1b-9c0f-1234567890ab\">\n</head>\n<body>\n    <button onclick=\"submitData()\">Submit via AJAX</button>\n\n    <script>\n        function submitData() {\n            // 메타 태그에서 CSRF 토큰 가져오기\n            const csrfToken = document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content');\n\n            fetch('/submit', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-CSRF-Token': csrfToken // CSRF 토큰을 헤더에 추가\n                },\n                body: JSON.stringify({ username: 'john' })\n            })\n            .then(response => response.text())\n            .then(data => console.log(data))\n            .catch(error => console.error('Error:', error));\n        }\n    </script>\n</body>\n</html>"},{"type":"normal","value":"<meta name=\"csrf-token\" content=\"...\">는 서버에서 생성한 CSRF 토큰을 프론트엔드에 전달하는 일반적인 방법입니다.\nJavaScript에서 fetch를 사용하여 POST 요청을 보낼 때, X-CSRF-Token 헤더에 토큰을 추가합니다."},{"type":"code","value":"POST /submit HTTP/1.1\nHost: example.com\nContent-Type: application/json\nX-CSRF-Token: 3f9a8b2c-7e5d-4a1b-9c0f-1234567890ab"},{"type":"Heading","headingType":"h4","value":"HTTP 요청 헤더"},{"type":"code","value":"POST /submit HTTP/1.1\nHost: example.com\nContent-Type: application/json\nX-CSRF-Token: 3f9a8b2c-7e5d-4a1b-9c0f-1234567890ab"},{"type":"Heading","headingType":"h4","value":"요청 바디"},{"type":"code","value":"{\"username\":\"john\"}"},{"type":"normal","value":"서버는 _csrf 값이 세션의 토큰과 일치하는지 확인 후 요청을 처리합니다."},{"type":"Heading","headingType":"h2","value":"CSRF 토큰의 중요성"},{"type":"stringlist","value":"<b>공격 방어</b>: 공격자가 사용자의 인증 쿠키를 악용해 위조 요청을 보내더라도, CSRF 토큰이 없으면 서버가 요청을 거부합니다.\n<b>간단한 구현</b>: 대부분의 웹 프레임워크(예: Spring, Django, Laravel)는 CSRF 토큰 생성 및 검증 기능을 기본 제공합니다."},{"type":"Heading","headingType":"h4","value":"추가 고려사항"},{"type":"stringlist","value":"<b>보안</b>: 토큰이 노출되지 않도록 HTTPS를 사용하고, GET 요청에 포함시키지 않습니다.\n<b>사용성</b>: AJAX 요청에서는 헤더로 토큰을 전송하는 방식이 일반적입니다.\n<b>SameSite 쿠키와 조합</b>: CSRF 토큰 외에 SameSite 속성을 쿠키에 설정하면 추가적인 보호를 제공합니다."},{"type":"Heading","headingType":"h2","value":"쿠키 속성 설정(SameSite)"},{"type":"normal","value":"쿠키에 SameSite 속성을 설정하여 동일 출처(Same-Origin) 또는 제한된 조건에서만 쿠키가 전송되도록 합니다."},{"type":"stringlist","value":"<b>Strict</b>: 동일 도메인에서만 쿠키 전송 가능.\n<b>Lax</b>: 동일 도메인 외의 GET 요청(예: 링크 이동)에서만 쿠키 전송 가능.\n<b>None</b>: 모든 요청에서 쿠키 전송(단, HTTPS와 Secure 속성 필수)"},{"type":"normal","value":"<span class=\"point\">SameSite=Lax</span> 는 대부분의 CSRF 방어에 적합하며, 사용자 경험을 해치지 않으면서 보안을 강화합니다. <span class=\"point\">SameSite=Strict</span>는 더 강력하지만, 외부 링크를 통한 접근 시 쿠키가 전송되지 않아 기능적 제약이 있을 수 있습니다."},{"type":"stringlist","value":"<b>HTTP 메서드 제한</b>: 상태 변경 요청(예: 돈 이체, 계정 수정)은 POST, PUT, DELETE와 같은 메서드만 허용하고, GET 요청은 상태 변경을 유발하지 않도록 설계합니다.\n\t\t\t<b>Referer/Origin 헤더 검증</b>: 요청의 출처를 확인하여 신뢰할 수 있는 도메인에서만 요청을 허용합니다. 단, Referer 헤더는 브라우저 설정에 따라 누락될 수 있으므로 보조적 수단으로 사용합니다."},{"type":"Heading","headingType":"h2","value":"XSS 공격 방어"},{"type":"normal","value":"XSS 공격은 악성 스크립트를 웹 페이지에 삽입하여 사용자의 브라우저에서 실행되도록 만드는 공격입니다. 이를 방어하기 위한 방법은 다음과 같습니다."},{"type":"Heading","headingType":"h4","value":"입력 값 유효성 검증 및 특수문자 이스케이프"},{"type":"normal","value":"사용자로부터 입력받은 데이터(예: 텍스트, URL, JSON 등)의 유효성을 검증하고, HTML, JavaScript, SQL 등에서 실행 가능한 특수문자(<span class=\"point\"> <, >, \", ', &</span> 등)를 이스케이프 처리합니다."},{"type":"GuideMessage","value":"<b>이스케이프 처리란?</b></br>\n\t\t\t\t사용자가 <script>alert('악성 코드')</script>를 입력했다고 가정한다면</br>\n\t\t\t\t- <b>이스케이프 처리 전</b>: 브라우저가 이를 JavaScript로 실행하여 경고창이 표시됨(XSS 공격 성공).</br>\n\t\t\t\t- <b>이스케이프 처리 후</b>: [ < → &amp;lt; ] [ > → &ampgt; ] 로 변환되어 <script>가 텍스트로 표시됨(악성 코드 실행 방지)."},{"type":"normal","value":"사용자가 입력한 데이터(예: 텍스트 필드, 쿼리 파라미터)를 서버 또는 클라이언트에서 받으면 입력 데이터에 포함된 특수 문자를 안전한 문자(예: <)로 변환하여 변환된 데이터를 HTML, JavaScript 등의 문맥에서 출력하여 브라우저가 이를 코드가 아닌 텍스트로 처리하도록 함."},{"type":"code","value":"<!-- 입력: <script>alert('XSS')</script> --> \n<!-- 이스케이프 처리 후 출력 -->\n&lt;script&gt;alert(&#39;XSS&#39;)&lt;script&gt;"},{"type":"stringlist","value":"브라우저는 위를 <script>alert('XSS')</script>로 표시하며, 실행하지 않음."},{"type":"normal","value":"클라이언트와 서버 모두에서 입력 검증을 수행해야 하며 서버에서는 데이터베이스 저장 전, 클라이언트에서는 사용자 경험을 위해 검증합니다. 예를 들어,  <script>는 <span class=\"point\">&amplt;script&ampgt;</span>로 변환하여 렌더링 시 실행되지 않도록 합니다. 라이브러리(예: DOMPurify, OWASP Java Encoder)를 사용하면 이스케이프 처리가 더 안전합니다."},{"type":"Heading","headingType":"h4","value":"CSP(Content Security Policy) 설정"},{"type":"normal","value":"서버에서 HTTP 응답 헤더에 CSP를 설정하여 허용된 스크립트, 스타일, 이미지 등의 출처를 제한합니다."},{"type":"code","value":"Content-Security-Policy: script-src 'self' https://trusted.cdn.com;"},{"type":"normal","value":"CSP는 인라인 스크립트(<script>alert('xss')</script>)나 외부 출처의 악성 스크립트 실행을 차단합니다. 'strict-dynamic', 'nonce', 'hash'와 같은 옵션을 사용하면 더 세밀한 제어가 가능합니다. 그러나 CSP 설정은 신중히 설계해야 하며, 기존 코드와의 호환성 문제를 테스트해야 합니다."},{"type":"normal","value":""},{"type":"stringlist","value":"<b>출력 이스케이프</b>: 데이터를 렌더링할 때 문맥(HTML, 속성, JavaScript, CSS, URL 등)에 맞게 이스케이프 처리합니다. 예: HTML 속성에는 더블쿼테이션(\")를 &ampquot;로 변환.\n\t\t\t<b>안전한 API 사용</b>: innerHTML 대신 textContent나 setAttribute를 사용해 스크립트 실행을 방지합니다.\n\t\t\t<b>쿠키 보호</b>: HttpOnly 속성을 쿠키에 설정하여 JavaScript에서 쿠키에 접근하지 못하도록 제한합니다.\n\t\t\t<b>프레임워크 보안</b>: React, Angular 등 현대 프레임워크는 기본적으로 XSS 방어를 제공하지만, dangerouslySetInnerHTML 같은 기능을 사용할 때는 주의가 필요합니다."},{"type":"Heading","headingType":"h3","value":"HTTPS를 통한 통신 보안"},{"type":"normal","value":"HTTP는 데이터가 평문으로 전송되어 도청 및 조작에 취약합니다. HTTPS는 <b>SSL/TLS</b>를 통해 통신을 암호화하여 보안을 강화합니다."},{"type":"Heading","headingType":"h4","value":"HTTPS 적용"},{"type":"normal","value":"HSTS는 웹 브라우저에게 해당 사이트는 항상 HTTPS로만 접속해야 한다고 지시하는 보안 기능입니다. 한 번 브라우저가 이 헤더를 받으면, 이후엔 자동으로 HTTP 요청을 HTTPS로 업그레이드합니다."},{"type":"Heading","headingType":"h4","value":"HSTS 헤더 예시"},{"type":"normal","value":"서버에서 다음과 같은 헤더를 응답에 추가합니다."},{"type":"code","value":"Strict-Transport-Security: max-age=31536000; includeSubDomains"},{"type":"normal","value":"HTTPS는 데이터 무결성과 기밀성을 보장하며, CSRF와 XSS 공격에서 쿠키나 토큰이 탈취되는 것을 방지합니다. HSTS는 중간자 공격(MITM)을 줄이는 데 효과적입니다. 또한, 최신 TLS 버전(예: TLS 1.3)과 강력한 암호화 알고리즘을 사용하는 것이 중요합니다."},{"type":"Heading","headingType":"h4","value":"추가 보안 고려사항"},{"type":"stringlist","value":"<b>인증서 관리</b>: 신뢰할 수 있는 인증 기관(CA)에서 발급받은 SSL/TLS 인증서를 사용하고, 만료 전에 갱신합니다.\n\t\t\t<b>혼합 콘텐츠 방지</b>: HTTPS 페이지에서 HTTP 리소스(이미지, 스크립트 등)를 로드하지 않도록 주의합니다. 브라우저는 혼합 콘텐츠를 차단하거나 경고를 표시할 수 있습니다."},{"type":"Heading","headingType":"h3","value":"종합적인 보안 전략"},{"type":"normal","value":"CSRF와 XSS 방어는 단일 기법에 의존하지 않고, 여러 방어 계층을 조합하여 적용하는 심층 방어(Defense-in-Depth) 전략이 필요합니다."},{"type":"stringlist","value":"<b>개발 단계</b>: 코드 리뷰, 보안 라이브러리 사용, OWASP 가이드라인 준수.\n\t\t\t<b>배포 단계</b>: 보안 헤더 설정(CSP, HSTS, X-Frame-Options 등), 취약점 스캔.\n\t\t\t<b>운영 단계</b>: 로그 모니터링, WAF(Web Application Firewall) 도입, 정기적인 보안 패치."}]},"segment":"posts"}],["$","div",null,{"className":"footer_footer_container__MsSvO","children":["$","footer",null,{"className":"footer_footer__AwYty","children":[["$","p",null,{"className":"footer_copylight___J5l0","children":["© 2024 ","베짱이가 되고싶은 개미。"," Some rights reserved."]}],["$","p",null,{"className":"footer_theme__bwXbg","children":"portfolio v1.0.0-alpha.3"}]]}]}]],null]]},["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","(layoutCase)","children","tags","children","$6","children","$7","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/19d2a4a42355ad75.css","precedence":"next","crossOrigin":""}]]}]]},["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","(layoutCase)","children","tags","children","$6","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","(layoutCase)","children","tags","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]],"search":["__DEFAULT__",{},["$9","$Lb",null]]},[null,["$","$Lc",null,{"children":["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","(layoutCase)","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}],"search":["$","$L5",null,{"parallelRouterKey":"search","segmentPath":["children","(layoutCase)","search"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$d","styles":null}],"params":{}}],null]]},[null,["$","html",null,{"lang":"en","className":"","children":[["$","head",null,{"children":[["$","link",null,{"rel":"stylesheet","href":"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css","as":"style"}],["$","link",null,{"rel":"preconnect","href":"https://fonts.googleapis.com"}],["$","link",null,{"rel":"preconnect","href":"https://fonts.gstatic.com"}],["$","link",null,{"rel":"stylesheet","href":"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR&display=swap","as":"style"}]]}],["$","body",null,{"children":["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":"$e","children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":"$f","children":"404"}],["$","div",null,{"style":"$10","children":["$","h2",null,{"style":"$11","children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/0c496b0e03d530ba.css","precedence":"next","crossOrigin":""}]]}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/80c9ce4c138da48c.css","precedence":"next","crossOrigin":""}]],"$L12"]]]]
b:E{"digest":"NEXT_NOT_FOUND"}
12:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"be come 💡"}],["$","meta","3",{"name":"description","content":"App for an Ant Who Wants to Become a Bejjangyi"}]]
1:null
a:null
